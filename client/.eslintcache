[{"/Users/iouri/Desktop/Code/boum-tchak/client/src/index.js":"1","/Users/iouri/Desktop/Code/boum-tchak/client/src/serviceWorker.js":"2","/Users/iouri/Desktop/Code/boum-tchak/client/src/App.jsx":"3","/Users/iouri/Desktop/Code/boum-tchak/client/src/context/GlobalState.jsx":"4","/Users/iouri/Desktop/Code/boum-tchak/client/src/config/config.js":"5","/Users/iouri/Desktop/Code/boum-tchak/client/src/context/types.js":"6","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/Auth/ProtectedRoute.jsx":"7","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/Header/Header.jsx":"8","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/DisplaySong/SongsList.jsx":"9","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/LoadSong/LoadSong.jsx":"10","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/Auth/Signup.jsx":"11","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/Auth/Login.jsx":"12","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/Auth/Profile.jsx":"13","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/InfoPages/Help.jsx":"14","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/Container.jsx":"15","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateInstrument/CreateInstrument.jsx":"16","/Users/iouri/Desktop/Code/boum-tchak/client/src/context/GlobalContext.jsx":"17","/Users/iouri/Desktop/Code/boum-tchak/client/src/context/GlobalReducer.jsx":"18","/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/index.js":"19","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/Auth/utils.js":"20","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/utils/instruments.js":"21","/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/buttons.js":"22","/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/elements.js":"23","/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/layout.js":"24","/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/typography.js":"25","/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/musicGrid.js":"26","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/InfoPages/AppIntro.jsx":"27","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/DisplaySong/DisplaySong.jsx":"28","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateInstrument/InstrumentSoundsList.jsx":"29","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/elements/PlayControls.jsx":"30","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/modals/SaveSong.jsx":"31","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/Component.jsx":"32","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateInstrument/Characteristics.jsx":"33","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateInstrument/AddSound.jsx":"34","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/modals/AddInstrument.jsx":"35","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/elements/TopMenu.jsx":"36","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/utils/index.js":"37","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/utils/playMechanics.js":"38","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/utils/categories.js":"39","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/utils/getRandomName.js":"40","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/utils/gradientBuilder.js":"41","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/DisplaySong/DisplayLine.jsx":"42","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/elements/CreateLine.jsx":"43","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/elements/ToolsLine.jsx":"44","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateInstrument/AvailableSoundsList.jsx":"45","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateInstrument/CreateSound.jsx":"46","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/DisplaySong/Note.jsx":"47","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/elements/Note.jsx":"48"},{"size":838,"mtime":1601929761354,"results":"49","hashOfConfig":"50"},{"size":5085,"mtime":1584876332605,"results":"51","hashOfConfig":"50"},{"size":3476,"mtime":1607462048129,"results":"52","hashOfConfig":"50"},{"size":4613,"mtime":1608018680425,"results":"53","hashOfConfig":"50"},{"size":190,"mtime":1606170502570,"results":"54","hashOfConfig":"50"},{"size":701,"mtime":1608018680426,"results":"55","hashOfConfig":"50"},{"size":414,"mtime":1587904886047,"results":"56","hashOfConfig":"50"},{"size":1455,"mtime":1591533879997,"results":"57","hashOfConfig":"50"},{"size":2003,"mtime":1607888346102,"results":"58","hashOfConfig":"50"},{"size":1919,"mtime":1601929761122,"results":"59","hashOfConfig":"50"},{"size":2349,"mtime":1588499987535,"results":"60","hashOfConfig":"50"},{"size":2335,"mtime":1588500213186,"results":"61","hashOfConfig":"50"},{"size":1994,"mtime":1607880149716,"results":"62","hashOfConfig":"50"},{"size":3634,"mtime":1593498316684,"results":"63","hashOfConfig":"50"},{"size":7255,"mtime":1608243043371,"results":"64","hashOfConfig":"50"},{"size":6793,"mtime":1606170502537,"results":"65","hashOfConfig":"50"},{"size":117,"mtime":1601929761208,"results":"66","hashOfConfig":"50"},{"size":1649,"mtime":1608018680424,"results":"67","hashOfConfig":"50"},{"size":741,"mtime":1608243043376,"results":"68","hashOfConfig":"50"},{"size":717,"mtime":1590435933877,"results":"69","hashOfConfig":"50"},{"size":1757,"mtime":1606170502561,"results":"70","hashOfConfig":"50"},{"size":2915,"mtime":1608243043373,"results":"71","hashOfConfig":"50"},{"size":1905,"mtime":1608243043374,"results":"72","hashOfConfig":"50"},{"size":2279,"mtime":1608243043377,"results":"73","hashOfConfig":"50"},{"size":1192,"mtime":1608018680432,"results":"74","hashOfConfig":"50"},{"size":1739,"mtime":1608243043378,"results":"75","hashOfConfig":"50"},{"size":1935,"mtime":1607888346104,"results":"76","hashOfConfig":"50"},{"size":3197,"mtime":1608018680423,"results":"77","hashOfConfig":"50"},{"size":1229,"mtime":1606170502538,"results":"78","hashOfConfig":"50"},{"size":1223,"mtime":1608243043372,"results":"79","hashOfConfig":"50"},{"size":1383,"mtime":1607462048191,"results":"80","hashOfConfig":"50"},{"size":2919,"mtime":1608243043370,"results":"81","hashOfConfig":"50"},{"size":1781,"mtime":1604768924852,"results":"82","hashOfConfig":"50"},{"size":2614,"mtime":1606170502531,"results":"83","hashOfConfig":"50"},{"size":3459,"mtime":1607888346101,"results":"84","hashOfConfig":"50"},{"size":1823,"mtime":1608018680422,"results":"85","hashOfConfig":"50"},{"size":328,"mtime":1607462048148,"results":"86","hashOfConfig":"50"},{"size":1079,"mtime":1607462048151,"results":"87","hashOfConfig":"50"},{"size":1304,"mtime":1606170502556,"results":"88","hashOfConfig":"50"},{"size":440,"mtime":1602103395972,"results":"89","hashOfConfig":"50"},{"size":2933,"mtime":1606170502558,"results":"90","hashOfConfig":"50"},{"size":684,"mtime":1601141100956,"results":"91","hashOfConfig":"50"},{"size":1371,"mtime":1608018680419,"results":"92","hashOfConfig":"50"},{"size":1529,"mtime":1608243043372,"results":"93","hashOfConfig":"50"},{"size":3580,"mtime":1606170502534,"results":"94","hashOfConfig":"50"},{"size":3868,"mtime":1605997875293,"results":"95","hashOfConfig":"50"},{"size":297,"mtime":1601141111856,"results":"96","hashOfConfig":"50"},{"size":576,"mtime":1607462048199,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"13t0dbu",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},"/Users/iouri/Desktop/Code/boum-tchak/client/src/index.js",[],["206","207"],"/Users/iouri/Desktop/Code/boum-tchak/client/src/serviceWorker.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/App.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/context/GlobalState.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/config/config.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/context/types.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/Auth/ProtectedRoute.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/Header/Header.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/DisplaySong/SongsList.jsx",["208"],"import React, { useState, useEffect } from \"react\";\nimport { Bars } from \"svg-loaders-react\";\nimport axios from \"axios\";\nimport { DisplaySong } from \"./DisplaySong\";\nimport { prepareInstruments } from \"../utils/instruments\";\nimport { AppIntro } from \"../InfoPages/AppIntro\";\nimport { BlankSpace, MenuButton } from \"../../ui-kit\";\n\nexport const SongsList = ({ isAppIntroDisplayed = false }) => {\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [message, setMessage] = useState(\"\");\n\n  const loadSongs = async () => {\n    setLoading(true);\n    const { data: loadedSongs } = await axios.get(\n      `/api/song/posted/${currentPage}`,\n      {\n        page: 1,\n      }\n    );\n    if (!loadedSongs.length) {\n      setMessage(\"no more songs to load...\");\n      setLoading(false);\n      setTimeout(() => {\n        setMessage(\"\");\n      }, 2000);\n      return;\n    }\n    loadedSongs.forEach((song) => {\n      const preparedInstruments = prepareInstruments(song.instruments);\n      song.instruments = preparedInstruments;\n    });\n    setSongs([...songs, ...loadedSongs]);\n    setLoading(false);\n    setCurrentPage(currentPage + 1);\n  };\n\n  useEffect(() => {\n    loadSongs();\n  }, []);\n\n  const loadMore = () => {\n    loadSongs();\n  };\n\n  return (\n    <React.Fragment>\n      {isAppIntroDisplayed && <AppIntro />}\n      {songs.map((song) => {\n        return (\n          <DisplaySong\n            key={song._id}\n            title={song.title}\n            partition={song.partition}\n            musicLines={song.instruments}\n            tempo={song.tempo}\n            creatorName={song.creatorName}\n          />\n        );\n      })}\n      {loading ? (\n        <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />\n      ) : message ? (\n        <p>{message}</p>\n      ) : (\n        <MenuButton onClick={loadMore}>load more</MenuButton>\n      )}\n      <BlankSpace height=\"100px\" />\n    </React.Fragment>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/LoadSong/LoadSong.jsx",["209"],"import React, { useState, useEffect } from \"react\";\nimport { Bars } from \"svg-loaders-react\";\nimport {\n  PageLayout,\n  SelectableText,\n  Button,\n  Heading2,\n  Column,\n} from \"../../ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport const LoadSong = (props) => {\n  const [songsList, setSongsList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  const fetchData = async () => {\n    setLoading(true);\n    const { data } = await axios.get(`/api/song/creator/${props.user._id}`);\n    if (data) {\n      setSongsList(data);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const deleteSong = async (songId) => {\n    const response = await axios.delete(`/api/song/${songId}`);\n    setMessage(response.message);\n    fetchData();\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 1500);\n  };\n\n  return (\n    <PageLayout>\n      <Heading2>Load Song</Heading2>\n      {loading && (\n        <Column alignItems=\"center\">\n          <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />\n        </Column>\n      )}\n      {songsList.map((el) => {\n        return (\n          <SelectableText\n            key={el._id}\n            selected={selectedSong === el._id}\n            onClick={() => {\n              setSelectedSong(el._id);\n            }}>\n            {el.title}\n          </SelectableText>\n        );\n      })}\n      <div>{message && <p>{message}</p>}</div>\n      {selectedSong && (\n        <div style={{ paddingTop: 20 }}>\n          <Link to={`/create/${selectedSong}`}>\n            <Button>Load</Button>\n          </Link>\n          <Button onClick={() => deleteSong(selectedSong)}>Delete</Button>\n          <Link to={\"/\"}>\n            <Button>Cancel</Button>\n          </Link>\n        </div>\n      )}\n    </PageLayout>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/Auth/Signup.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/Auth/Login.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/Auth/Profile.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/InfoPages/Help.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/Container.jsx",["210"],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateInstrument/CreateInstrument.jsx",["211"],"import React, { useState, useEffect } from \"react\";\nimport { Characteristics } from \"./Characteristics\";\nimport { InstrumentSoundsList } from \"./InstrumentSoundsList\";\nimport { AddSound } from \"./AddSound\";\nimport { SketchPicker } from \"react-color\";\nimport { gradientBuilder } from \"../utils\";\nimport { config } from '../../config/config';\nimport axios from \"axios\";\nimport {\n  Row,\n  Column,\n  Button,\n  PageLayout,\n  Heading2,\n  Alert,\n  CategoryBtn,\n} from \"../../ui-kit\";\n\nconst views = {\n  OVERVIEW: \"OVERVIEW\",\n  ADD_SOUND: \"ADD_SOUND\",\n};\n\nexport const CreateInstrument = (props) => {\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [sounds, setSounds] = useState([{id: config.DEFAULT_SOUND_ID}]);\n  const [view, setView] = useState(views.OVERVIEW);\n  const [loading, setLoading] = useState(false);\n  const [availableSounds, setAvailableSounds] = useState([]);\n  const [selectedSound, setSelectedSound] = useState(null);\n  const [editedColor, setEditedColor] = useState(\"start\");\n  const [colors, setColors] = useState(['#ddd']);\n  const [startColor, setStartColor] = useState(\"#aaaaaa\");\n  const [endColor, setEndColor] = useState(\"#555555\");\n  const [pickerColor, setPickerColor] = useState(\"#aaaaaa\");\n\n  const handleColorChange = (color) => {\n    setPickerColor(color.hex);\n    if (editedColor === \"start\") {\n      setStartColor(color.hex);\n    } else if (editedColor === \"end\") {\n      setEndColor(color.hex);\n    }\n  };\n\n  useEffect(()=>{\n    updateSoundsColors();\n  }, [startColor, endColor])\n\n  const updateSoundsColors = () => {\n    const updatedColors = [...colors];\n    const l = sounds.length;\n    if (l === 1) return;\n    if (l >= 2) updatedColors[1] = startColor;\n    if (l >= 3) updatedColors[l - 1] = endColor;\n    if (l > 3) {\n      const gradient = gradientBuilder(startColor, endColor, l - 3);\n      for (let i = 2; i < l - 1; i++) {\n        updatedColors[i] = gradient[i - 2];\n      }\n    }\n    setColors(updatedColors);\n  };\n\n  const openAddSoundSection = async () => {\n    setView(views.ADD_SOUND);\n    await fetchData();\n  };\n\n  const fetchData = async () => {\n    setLoading(true);\n    const { data } = await axios.get(\"/api/sound\");\n    if (data) {\n      setAvailableSounds(data);\n      setLoading(false);\n    }\n  };\n\n  const displayMessage = (mes) => {\n    setMessage(mes);\n    setInterval(() => {\n      setMessage(\"\");\n    }, 2000);\n  };\n\n  const addSound = (sound) => {\n    if ((!sound.url, !sound.color)) {\n      displayMessage(\"Please select or upload a sound and pick a color\");\n      return;\n    }\n    const newSound = {\n      id: sound.id,\n      name: sound.name,\n      url: sound.url,\n      pitch: sound.pitch || \"\",\n    };\n    const updatedSounds = [...sounds, newSound];\n    setSounds(updatedSounds);\n    setColors([...colors, '#ddd']);\n    setView(views.OVERVIEW);\n  };\n\n  const switchToOverview = () => {\n    setView(views.OVERVIEW);\n  };\n\n  const selectSound = (sound) => {\n    setSelectedSound(sound);\n  };\n\n  const resetInstrument = () => {\n    setName(\"\");\n    setCategory(\"\");\n    setSubCategory(\"\");\n    setSounds([{id: config.DEFAULT_SOUND_ID}]);\n  };\n\n  const saveInstrument = async () => {\n    if (!name || !category || !subCategory) {\n      displayMessage(`Please enter the fields: ${!name?'Name':''} ${!category?'Category':''} ${!subCategory?'Sub-category':''}`);\n      return;\n    }\n    if (sounds.length < 2) {\n      displayMessage(\"You must select at least 1 sound\");\n      return;\n    }\n    const createdInstrument = await axios.post(\"/api/instrument\", {\n      name,\n      category,\n      subCategory,\n      sounds: sounds.map(el=> el.id || null),\n      colors: colors,\n      creator: props.user._id,\n      private: false,\n    });\n    if (createdInstrument.message) {\n      displayMessage(createdInstrument.message);\n    } else if (createdInstrument.status === 200) {\n      displayMessage(`Success! You just created a new instrument!`);\n      resetInstrument();\n    }\n  };\n\n  const toggleHelp = () => {};\n\n  return (\n    <PageLayout>\n      <Row>{message && <Alert>{message}</Alert>}</Row>\n      {view === views.ADD_SOUND && (\n        <AddSound\n          switchToOverview={switchToOverview}\n          availableSounds={availableSounds}\n          selectedSound={selectedSound}\n          selectSound={selectSound}\n          loading={loading}\n          addSound={addSound}\n          fetchData={fetchData}\n          displayMessage={displayMessage}\n        />\n      )}\n      {view === views.OVERVIEW && (\n        <React.Fragment>\n          <Row>\n            <Column flex={1}>\n              <Heading2>Create Instrument</Heading2>\n            </Column>\n            <Column\n              flex={2}\n              flexDirection=\"row\"\n              alignItems=\"flex-end\"\n              justifyContent=\"flex-end\">\n              <Button onClick={saveInstrument}>Save Instrument</Button>\n              <Button onClick={resetInstrument}>Reset</Button>\n              <Button onClick={toggleHelp}>Help</Button>\n            </Column>\n          </Row>\n          <Row>\n            <Column flex={2}>\n              <Characteristics\n                name={name}\n                setName={setName}\n                category={category}\n                setCategory={setCategory}\n                subCategory={subCategory}\n                setSubCategory={setSubCategory}\n              />\n              <Row>\n                <Column>\n                  <h3>Sounds:</h3>\n                </Column>\n              </Row>\n              <Row>\n                <Column>\n                  <InstrumentSoundsList\n                    sounds={sounds}\n                    colors={colors}\n                    addSound={openAddSoundSection}\n                  />\n                </Column>\n              </Row>\n            </Column>\n            <Column flex={1}>\n              <SketchPicker\n                color={pickerColor}\n                onChangeComplete={handleColorChange}\n              />\n              <Row>\n                <Column\n                  flexDirection=\"row\"\n                  alignItems=\"center\"\n                  justifyContent=\"flex-start\">\n                  <CategoryBtn\n                    selected={editedColor === \"start\"}\n                    onClick={() => setEditedColor(\"start\")}>\n                    Pick start color\n                  </CategoryBtn>\n                  <CategoryBtn\n                    selected={editedColor === \"end\"}\n                    onClick={() => setEditedColor(\"end\")}>\n                    Pick end color\n                  </CategoryBtn>\n                </Column>\n              </Row>\n            </Column>\n          </Row>\n        </React.Fragment>\n      )}\n    </PageLayout>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/context/GlobalContext.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/context/GlobalReducer.jsx",["212"],"import {\n  SET_TEMPO,\n  SET_TIMEOUT_TEMPO,\n  SET_IS_ADD_INSTRUMENT_VISIBLE,\n  SET_IS_NOTE_PLAYED_ON_CLICK,\n  SET_IS_SAVE_SONG_VISIBLE,\n  SET_IS_PLAYING,\n  SET_INSTRUMENTS,\n  SET_PARTITION,\n  SET_COPIED_PARTITION_BAR,\n  SET_ANIMATED_NOTES,\n  SET_CURRENT_PAGE,\n  SET_PAGES,\n} from \"./types\";\n\nexport default (state, action) => {\n  const { payload, type } = action;\n\n  switch (type) {\n    case SET_TEMPO:\n      return {\n        ...state,\n        tempo: payload,\n      };\n    case SET_TIMEOUT_TEMPO:\n      return {\n        ...state,\n        timeoutTempo: payload,\n      };\n    case SET_IS_ADD_INSTRUMENT_VISIBLE:\n      return {\n        ...state,\n        isAddInstrumentVisible: payload,\n      };\n    case SET_IS_NOTE_PLAYED_ON_CLICK:\n      return {\n        ...state,\n        isNotePlayedOnClick: payload,\n      };\n    case SET_IS_SAVE_SONG_VISIBLE:\n      return {\n        ...state,\n        isSaveSongVisible: payload,\n      };\n    case SET_IS_PLAYING:\n      return {\n        ...state,\n        isPlaying: payload,\n      };\n    case SET_INSTRUMENTS:\n      return {\n        ...state,\n        instruments: payload,\n      };\n    case SET_PARTITION:\n      return {\n        ...state,\n        partition: payload,\n      };\n    case SET_COPIED_PARTITION_BAR:\n      return {\n        ...state,\n        copiedPartitionBar: payload,\n      };\n    case SET_ANIMATED_NOTES:\n      return {\n        ...state,\n        animatedNotes: payload,\n      }\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: payload,\n      }\n    case SET_PAGES:\n      return {\n        ...state,\n        pages: payload,\n      }\n    default:\n      return state;\n  }\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/index.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/Auth/utils.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/utils/instruments.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/buttons.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/elements.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/layout.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/typography.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/musicGrid.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/InfoPages/AppIntro.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/DisplaySong/DisplaySong.jsx",["213","214","215"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { DisplayLine } from \"./DisplayLine\";\nimport { playBeat } from \"../utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faStop } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  MusicGrid,\n  SongPost,\n  SongPostPlay,\n  SongHeader,\n  SongTitle,\n  Row,\n} from \"../../ui-kit\";\n\nconst iconsStyle = {\n  width: 40,\n  height: 40,\n  padding: \"10px 30px\",\n  border: \"solid 1px rgba(0, 0, 0, 0.6)\",\n  color: \"rgba(0, 0, 0, 0.7)\",\n  backgroundColor: \"rgba(250, 250, 250, 0.5)\",\n  borderRadius: 5,\n  zIndex: 5,\n};\n\nexport const DisplaySong = ({\n  title,\n  partition,\n  musicLines,\n  tempo,\n  creatorName\n}) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [highlightedNote, setHighlightedNote] = useState(-1);\n  const [animatedNotes, setAnimatedNotes] = useState([-1, -1, -1]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pages, setPages] = useState([1]);\n\n  const timeoutTempo = 60000 / tempo / 4;\n  let intervalId = useRef(null);\n\n  const lengthOfPage = window.innerWidth >= 800 ? 16 : 12;\n\n  useEffect(() => {\n    const updatedPages = [];\n    const numberOfPages = Math.ceil(partition[0].length / lengthOfPage);\n    for (let i = 1; i <= numberOfPages; i++) {\n      updatedPages.push(1);\n    }\n    setPages(updatedPages);\n  }, []);\n\n  useEffect(() => {\n    return () => stopPlaying();\n  }, []);\n\n  const playMusic = (musicLines, partition, tempo) => {\n    setIsPlaying(true);\n    setCurrentPage(1);\n    let counter = 0;\n    intervalId.current = setInterval(() => {\n      setHighlightedNote(counter);\n      setAnimatedNotes([counter - 1, counter, counter + 1]);\n      playBeat(musicLines, partition, counter);\n      counter++;\n      if (counter >= partition[0].length) {\n        counter = 0;\n      }\n      if (counter % lengthOfPage === 1) {\n        const nextPage = Math.ceil(counter / lengthOfPage);\n        setCurrentPage(nextPage);\n      }\n    }, tempo);\n  };\n\n  const stopPlaying = () => {\n    setIsPlaying(false);\n    clearInterval(intervalId.current);\n  };\n\n  const onSongClick = () => {\n    if (isPlaying) {\n      stopPlaying();\n    } else {\n      playMusic(musicLines, partition, timeoutTempo);\n    }\n  };\n\n  return (\n    <SongPost>\n      <SongPostPlay onClick={onSongClick}>\n        {isPlaying ? (\n          <FontAwesomeIcon icon={faStop} color=\"black\" style={iconsStyle} />\n        ) : (\n          <FontAwesomeIcon icon={faPlay} color=\"black\" style={iconsStyle} />\n        )}\n      </SongPostPlay>\n      <SongHeader>\n        <SongTitle b={true}>{title}</SongTitle>\n        <SongTitle>by {creatorName}</SongTitle>\n      </SongHeader>\n      <MusicGrid>\n        {musicLines.map((line, i) => {\n          return (\n            <DisplayLine\n              key={i}\n              linePosition={i}\n              notes={partition[i]}\n              noteColors={line.colors}\n              sounds={line.sounds}\n              lengthOfPage={lengthOfPage}\n              currentPage={currentPage}\n              highlightedNote={highlightedNote}\n              animatedNotes={animatedNotes}\n            />\n          );\n        })}\n      </MusicGrid>\n    </SongPost>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateInstrument/InstrumentSoundsList.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/elements/PlayControls.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/modals/SaveSong.jsx",["216"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ExpandedMenuItem, Button, Input } from \"../../../ui-kit\";\n\nexport const SaveSong = ({ saveTheSong, user, toggleIsSaveSongVisible }) => {\n  const [title, setTitle] = useState(\"\");\n\n  const handleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  return (\n    <ExpandedMenuItem>\n      {\n        <React.Fragment>\n          {user ? (\n            <p style={{ margin: 10 }}>\n              Name your song (if you modified an existing song, <br />\n              it will still be saved under as new one):\n            </p>\n          ) : (\n            <p style={{ margin: 10 }}>\n              You don't have a user account yet, therefore your song <br />\n              will be published as annonymous... to bad!\n              <br />\n              Please create a user profile before saving next time <br />\n              Name your song:\n            </p>\n          )}\n          <Input\n            type=\"text\"\n            placeholder=\"My Supa Song...\"\n            value={title}\n            width={\"260px\"}\n            onChange={handleChange}\n          />\n          <div>\n            <Button onClick={() => saveTheSong(title)}>Save</Button>\n            <Button onClick={() => toggleIsSaveSongVisible()}>Cancel</Button>\n          </div>\n        </React.Fragment>\n      }\n    </ExpandedMenuItem>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/Component.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateInstrument/Characteristics.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateInstrument/AddSound.jsx",["217"],"import React, { useState, useEffect } from \"react\";\nimport { AvailableSoundsList } from \"./AvailableSoundsList\";\nimport { CreateSound } from \"./CreateSound\";\nimport { Row, Button, Column, Heading2, Input } from \"../../ui-kit\";\n\nconst views = {\n  ADD: \"ADD\",\n  UPLOAD: \"UPLOAD\",\n};\n\nexport const AddSound = ({\n  switchToOverview,\n  availableSounds,\n  selectedSound,\n  selectSound,\n  addSound,\n  loading,\n  fetchData,\n  displayMessage,\n}) => {\n  const [view, setView] = useState(views.ADD);\n  const [filterName, setFilterName] = useState(\"\");\n\n  useEffect(() => {\n    selectSound(null);\n  }, []);\n\n  const handleAddSoundClick = () => {\n    if (!selectedSound || !selectedSound.name || !selectedSound.url) {\n      displayMessage(\"Please select a sound first\");\n      return;\n    }\n    addSound({\n      id: selectedSound._id,\n      name: selectedSound.name,\n      color: \"#ddd\",\n      url: selectedSound.url,\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Column flexDirection=\"row\" justifyContent=\"left\">\n          <Heading2>Add Sound</Heading2>\n        </Column>\n        <Column flexDirection=\"row\" justifyContent=\"left\">\n          <Input\n            type=\"text\"\n            width=\"140px\"\n            value={filterName}\n            placeholder=\"Search...\"\n            onChange={(e) => setFilterName(e.target.value)}\n          />\n        </Column>\n        <Column flex={2} flexDirection=\"row\" justifyContent=\"flex-end\">\n          <Button backgroundColor=\"#0f0\" onClick={handleAddSoundClick}>\n            Add\n          </Button>\n          <Button backgroundColor=\"#f00\" onClick={switchToOverview}>\n            Cancel\n          </Button>\n          {view === views.ADD && (\n            <Button\n              onClick={() => {\n                setView(views.UPLOAD);\n              }}>\n              Upload own sound\n            </Button>\n          )}\n          {view === views.UPLOAD && (\n            <Button\n              onClick={() => {\n                setView(views.ADD);\n              }}>\n              Search sound\n            </Button>\n          )}\n        </Column>\n      </Row>\n      <Row>\n        <Column flex={1}>\n          {view === views.UPLOAD && (\n            <CreateSound setView={setView} fetchData={fetchData} />\n          )}\n          {view === views.ADD && (\n            <AvailableSoundsList\n              loading={loading}\n              availableSounds={availableSounds}\n              selectedSound={selectedSound}\n              selectSound={selectSound}\n              filterName={filterName}\n            />\n          )}\n        </Column>\n      </Row>\n    </React.Fragment>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/modals/AddInstrument.jsx",["218"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { globalContext } from \"../../../context/GlobalContext\";\nimport { Bars } from \"svg-loaders-react\";\nimport { FixedSizeList } from 'react-window';\nimport {\n  CategoryBtn,\n  ExpandedMenuItem,\n  Column,\n  Row,\n  Button,\n  SelectableRow,\n  Text,\n  Heading3,\n} from \"../../../ui-kit\";\nimport axios from \"axios\";\n\nexport const AddInstrument = ({ addInstrument }) => {\n  const [newInstruments, setNewInstruments] = useState([]);\n  const [searchCategory, setSearchCategory] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [uniqueCategories, setUniqueCategories] = useState([]);\n\n  const {\n    toggleIsAddInstrumentVisible,\n  } = useContext(globalContext);\n\n  const fetchInstrumentsData = async (searchCat, shouldCreateBtns) => {\n    const searchParams = searchCat && {\n      params: { category: searchCat },\n    };\n    const { data } = await axios.get(\"/api/instrument\", searchParams);\n    if (data) {\n      setNewInstruments(data);\n      if (shouldCreateBtns) {\n        const allCategories = data.map((instrument) => {\n          return instrument.category;\n        });\n        const newUniqueCategories = [...new Set(allCategories)];\n        setUniqueCategories(newUniqueCategories);\n      }\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchInstrumentsData(null, true);\n  }, []);\n\n  const handleClick = (inst) => {\n    addInstrument(inst);\n    toggleIsAddInstrumentVisible();\n  };\n\n  const selectCategory = (cat) => {\n    fetchInstrumentsData(cat);\n    setSearchCategory(cat);\n  };\n  \n  const ItemRow = ({index, style}) => {\n    const instrument = newInstruments[index];\n    return(\n      <SelectableRow\n        style={style}\n        bgColor={index % 2 === 0 ? '#eee' : '#fff'}\n        padding=\"4px 0 4px 0\"\n        onClick={() => handleClick(instrument)}>\n        <Column flex={2}>\n          <Text>{instrument.name}</Text>\n        </Column>\n        <Column>\n          <Text>{instrument.category}</Text>\n        </Column>\n        <Column>\n          <Text>{instrument.subCategory}</Text>\n        </Column>\n      </SelectableRow>\n    )\n  }\n\n  return (\n    <ExpandedMenuItem>\n      <Row padding=\"10px 12px 4px 12px\">\n        <Heading3>Add Instrument</Heading3>\n      </Row>\n      <Row padding=\"10px 12px 4px 12px\">\n        <Column flexDirection=\"row\">\n          {uniqueCategories.map((cat) => {\n            if (cat !== \"default\") {\n              return (\n                <CategoryBtn\n                  key={cat}\n                  selected={searchCategory === cat}\n                  onClick={() => selectCategory(cat)}>\n                  {cat}\n                </CategoryBtn>\n              );\n            }\n          })}\n        </Column>\n      </Row>\n      {loading && (\n        <Column justifyContent=\"center\" alignItems=\"center\">\n          <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />\n        </Column>\n      )}\n      <Row padding=\"4px 12px 0 12px\">\n        <Column>\n          <FixedSizeList height={260} width={380} itemCount={newInstruments.length} itemSize={30}>\n            {ItemRow}\n          </FixedSizeList>\n        </Column>\n      </Row>\n      <Row padding=\"20px 0 10px 0\">\n        <Column alignItems=\"center\">\n          <Button\n            hoverColor=\"red\"\n            onClick={toggleIsAddInstrumentVisible}>\n            Cancel\n          </Button>\n        </Column>\n      </Row>\n    </ExpandedMenuItem>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/elements/TopMenu.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/utils/index.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/utils/playMechanics.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/utils/categories.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/utils/getRandomName.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/utils/gradientBuilder.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/DisplaySong/DisplayLine.jsx",["219"],"import React from \"react\";\nimport { Note } from \"./Note\";\nimport { Line } from \"../../ui-kit\";\n\nexport const DisplayLine = ({\n  notes,\n  noteColors,\n  highlightedNote,\n  animatedNotes,\n  lengthOfPage,\n  currentPage,\n}) => {\n  const firstIndex = (currentPage - 1) * lengthOfPage;\n  const lastIndex = currentPage * lengthOfPage;\n\n  const displayNotes = notes.map((n, i) => {\n    if (i >= firstIndex && i < lastIndex) {\n      return (\n        <Note\n          key={i}\n          status={n}\n          colors={noteColors}\n          highlighted={highlightedNote === i}\n          isAnimated={animatedNotes.includes(i)}\n        />\n      );\n    }\n  });\n\n  return <Line>{displayNotes}</Line>;\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/elements/CreateLine.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/elements/ToolsLine.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateInstrument/AvailableSoundsList.jsx",["220"],"import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { Bars } from \"svg-loaders-react\";\nimport { getCategories, getSubCategories } from \"../utils\";\nimport {\n  Row,\n  Column,\n  SelectableText,\n  Heading3,\n  Select,\n  Option,\n  SelectableRow,\n} from \"../../ui-kit\";\n\nexport const AvailableSoundsList = ({\n  loading,\n  availableSounds,\n  selectedSound,\n  selectSound,\n  filterName,\n}) => {\n  const [filterCategory, setFilterCategory] = useState(\"default\");\n  const [filterSubCategory, setFilterSubCategory] = useState(\"\");\n\n  const filteredSounds = availableSounds.filter((sound) => {\n    return (\n      (!filterName ||\n        sound.name\n          .toLocaleLowerCase()\n          .includes(filterName.toLocaleLowerCase())) &&\n      (filterCategory === \"default\" || filterCategory === sound.category) &&\n      (!filterSubCategory || filterSubCategory === sound.subCategory)\n    );\n  });\n\n  const volumeBtnStyle = {\n    margin: 2,\n    color: \"black\",\n    backgroundColor: \"white\",\n    padding: 6,\n    borderColor: \"black\",\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n  };\n\n  const soundCategories = getCategories();\n\n  if (loading) {\n    return (\n      <Column alignItems=\"center\">\n        <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />\n      </Column>\n    );\n  }\n  return (\n    <React.Fragment>\n      <Row>\n        <Column />\n        <Column flex={2}>\n          <Heading3>Name</Heading3>\n        </Column>\n        <Column flex={2} flexDirection=\"row\" justifyContent=\"left\">\n          <Heading3>Category</Heading3>\n          <Select\n            name=\"category\"\n            width=\"60px\"\n            value={filterCategory}\n            onChange={(e) => setFilterCategory(e.target.value)}>\n            {soundCategories.map((cat, i) => {\n              return (\n                <Option key={i} value={cat}>\n                  {cat === \"default\" ? \"all\" : cat}\n                </Option>\n              );\n            })}\n          </Select>\n        </Column>\n        <Column flex={2} flexDirection=\"row\" justifyContent=\"left\">\n          <Heading3>Sub-cat.</Heading3>\n          <Select\n            name=\"sub-category\"\n            width=\"60px\"\n            value={filterSubCategory}\n            onChange={(e) => setFilterSubCategory(e.target.value)}>\n            {getSubCategories(filterCategory).map((subCat, i) => {\n              return (\n                <Option key={i} value={subCat}>\n                  {subCat || \"all\"}\n                </Option>\n              );\n            })}\n          </Select>\n        </Column>\n        <Column flex={2}>\n          <Heading3>Pitch</Heading3>\n        </Column>\n      </Row>\n      {filteredSounds.map((el) => {\n        const playSound = () => {\n          return new Audio(el.url).play();\n        };\n        return (\n          <SelectableRow\n            selected={selectedSound && selectedSound.url === el.url}\n            noHoverHighlight\n            onClick={() => selectSound(el)}\n            key={el._id}>\n            <Column>\n              <FontAwesomeIcon\n                icon={faVolumeUp}\n                style={volumeBtnStyle}\n                onClick={playSound}\n              />\n            </Column>\n            {[\"name\", \"category\", \"subCategory\", \"pitch\"].map((columnTitle, index) => {\n              return <Column key={index} flex={2}>{el[columnTitle]}</Column>;\n            })}\n          </SelectableRow>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateInstrument/CreateSound.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/DisplaySong/Note.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/components/CreateSong/elements/Note.jsx",[],["221","222"],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":42,"column":6,"nodeType":"229","endLine":42,"endColumn":8,"suggestions":"230"},{"ruleId":"227","severity":1,"message":"231","line":30,"column":6,"nodeType":"229","endLine":30,"endColumn":8,"suggestions":"232"},{"ruleId":"227","severity":1,"message":"233","line":59,"column":6,"nodeType":"229","endLine":59,"endColumn":8,"suggestions":"234"},{"ruleId":"227","severity":1,"message":"235","line":51,"column":6,"nodeType":"229","endLine":51,"endColumn":28,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":16,"column":1,"nodeType":"239","endLine":83,"endColumn":3},{"ruleId":"240","severity":1,"message":"241","line":12,"column":3,"nodeType":"242","messageId":"243","endLine":12,"endColumn":6},{"ruleId":"240","severity":1,"message":"244","line":37,"column":10,"nodeType":"242","messageId":"243","endLine":37,"endColumn":15},{"ruleId":"227","severity":1,"message":"245","line":51,"column":6,"nodeType":"229","endLine":51,"endColumn":8,"suggestions":"246"},{"ruleId":"240","severity":1,"message":"247","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":14},{"ruleId":"227","severity":1,"message":"248","line":26,"column":6,"nodeType":"229","endLine":26,"endColumn":8,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":88,"column":39,"nodeType":"252","messageId":"253","endLine":88,"endColumn":41},{"ruleId":"250","severity":1,"message":"251","line":16,"column":41,"nodeType":"252","messageId":"253","endLine":16,"endColumn":43},{"ruleId":"240","severity":1,"message":"254","line":9,"column":3,"nodeType":"242","messageId":"243","endLine":9,"endColumn":17},{"ruleId":"223","replacedBy":"255"},{"ruleId":"225","replacedBy":"256"},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadSongs'. Either include it or remove the dependency array.","ArrayExpression",["259"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["260"],"React Hook useEffect has missing dependencies: 'prepareLoadedSong', 'prepareNewMusic', 'props?.match?.params?.id', and 'stopPlaying'. Either include them or remove the dependency array.",["261"],"React Hook useEffect has a missing dependency: 'updateSoundsColors'. Either include it or remove the dependency array.",["262"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'pages' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'lengthOfPage' and 'partition'. Either include them or remove the dependency array.",["263"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'selectSound'. Either include it or remove the dependency array. If 'selectSound' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["264"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'SelectableText' is defined but never used.",["257"],["258"],"no-global-assign","no-unsafe-negation",{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},"Update the dependencies array to be: [loadSongs]",{"range":"277","text":"278"},"Update the dependencies array to be: [fetchData]",{"range":"279","text":"280"},"Update the dependencies array to be: [prepareLoadedSong, prepareNewMusic, props?.match?.params?.id, stopPlaying]",{"range":"281","text":"282"},"Update the dependencies array to be: [startColor, endColor, updateSoundsColors]",{"range":"283","text":"284"},"Update the dependencies array to be: [lengthOfPage, partition]",{"range":"285","text":"286"},"Update the dependencies array to be: [selectSound]",{"range":"287","text":"288"},[1273,1275],"[loadSongs]",[754,756],"[fetchData]",[1562,1564],"[prepareLoadedSong, prepareNewMusic, props?.match?.params?.id, stopPlaying]",[1632,1654],"[startColor, endColor, updateSoundsColors]",[1361,1363],"[lengthOfPage, partition]",[590,592],"[selectSound]"]