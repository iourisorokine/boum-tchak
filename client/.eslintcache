[{"/Users/iouri/Desktop/Code/boum-tchak/client/src/index.js":"1","/Users/iouri/Desktop/Code/boum-tchak/client/src/serviceWorker.js":"2","/Users/iouri/Desktop/Code/boum-tchak/client/src/App.jsx":"3","/Users/iouri/Desktop/Code/boum-tchak/client/src/config/config.js":"4","/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/index.js":"5","/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/buttons.js":"6","/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/elements.js":"7","/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/layout.js":"8","/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/typography.js":"9","/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/musicGrid.js":"10","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/context/GlobalState.jsx":"11","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/context/types.js":"12","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/Container.jsx":"13","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/DisplaySong/SongsList.jsx":"14","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/LoadSong/LoadSong.jsx":"15","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/Auth/Signup.jsx":"16","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/Auth/Login.jsx":"17","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/Auth/ProtectedRoute.jsx":"18","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/Auth/Profile.jsx":"19","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateInstrument/CreateInstrument.jsx":"20","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/Container.jsx":"21","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/context/DjState.jsx":"22","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/InfoPages/Help.jsx":"23","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/Header/Header.jsx":"24","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/context/GlobalReducer.jsx":"25","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/context/GlobalContext.jsx":"26","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/Auth/utils.js":"27","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/context/types.js":"28","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/utils/instruments.js":"29","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/Component.jsx":"30","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/DisplaySong/DisplaySong.jsx":"31","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/InfoPages/AppIntro.jsx":"32","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/elements/TopMenu.jsx":"33","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/elements/PlayControls.jsx":"34","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/modals/AddInstrument.jsx":"35","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/modals/SaveSong.jsx":"36","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateInstrument/Characteristics.jsx":"37","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateInstrument/InstrumentSoundsList.jsx":"38","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateInstrument/AddSound.jsx":"39","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/context/DjContext.jsx":"40","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/context/DjReducer.jsx":"41","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/Component.jsx":"42","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/utils/index.js":"43","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/utils/playMechanics.js":"44","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/utils/categories.js":"45","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/utils/getRandomName.js":"46","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/utils/gradientBuilder.js":"47","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/elements/ToolsLine.jsx":"48","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/elements/CreateLine.jsx":"49","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/DisplaySong/DisplayLine.jsx":"50","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateInstrument/AvailableSoundsList.jsx":"51","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateInstrument/CreateSound.jsx":"52","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/elements/Loop.jsx":"53","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/elements/Controls.jsx":"54","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/utils/randomLoops.js":"55","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/elements/Note.jsx":"56","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/DisplaySong/Note.jsx":"57"},{"size":857,"mtime":1646755896439,"results":"58","hashOfConfig":"59"},{"size":5085,"mtime":1646755896454,"results":"60","hashOfConfig":"59"},{"size":3827,"mtime":1646755896438,"results":"61","hashOfConfig":"59"},{"size":190,"mtime":1646755896439,"results":"62","hashOfConfig":"59"},{"size":725,"mtime":1646755896456,"results":"63","hashOfConfig":"59"},{"size":2727,"mtime":1646755896455,"results":"64","hashOfConfig":"59"},{"size":1905,"mtime":1646755896455,"results":"65","hashOfConfig":"59"},{"size":2605,"mtime":1646755896456,"results":"66","hashOfConfig":"59"},{"size":1193,"mtime":1646755896457,"results":"67","hashOfConfig":"59"},{"size":1739,"mtime":1646755896457,"results":"68","hashOfConfig":"59"},{"size":4623,"mtime":1646755896445,"results":"69","hashOfConfig":"59"},{"size":701,"mtime":1646755896445,"results":"70","hashOfConfig":"59"},{"size":7229,"mtime":1646755896444,"results":"71","hashOfConfig":"59"},{"size":2003,"mtime":1646755896448,"results":"72","hashOfConfig":"59"},{"size":1919,"mtime":1646755896449,"results":"73","hashOfConfig":"59"},{"size":2349,"mtime":1646755896441,"results":"74","hashOfConfig":"59"},{"size":2335,"mtime":1646755896440,"results":"75","hashOfConfig":"59"},{"size":414,"mtime":1646755896441,"results":"76","hashOfConfig":"59"},{"size":1994,"mtime":1646755896440,"results":"77","hashOfConfig":"59"},{"size":6793,"mtime":1646755896443,"results":"78","hashOfConfig":"59"},{"size":3188,"mtime":1646755896450,"results":"79","hashOfConfig":"59"},{"size":2250,"mtime":1646755896451,"results":"80","hashOfConfig":"59"},{"size":3634,"mtime":1646755896449,"results":"81","hashOfConfig":"59"},{"size":1372,"mtime":1646755896449,"results":"82","hashOfConfig":"59"},{"size":1666,"mtime":1646755896444,"results":"83","hashOfConfig":"59"},{"size":117,"mtime":1646755896444,"results":"84","hashOfConfig":"59"},{"size":717,"mtime":1646755896441,"results":"85","hashOfConfig":"59"},{"size":344,"mtime":1646755896451,"results":"86","hashOfConfig":"59"},{"size":1757,"mtime":1646755896453,"results":"87","hashOfConfig":"59"},{"size":3030,"mtime":1646755896444,"results":"88","hashOfConfig":"59"},{"size":3189,"mtime":1646755896448,"results":"89","hashOfConfig":"59"},{"size":2648,"mtime":1646755896449,"results":"90","hashOfConfig":"59"},{"size":1817,"mtime":1646755896446,"results":"91","hashOfConfig":"59"},{"size":1217,"mtime":1646755896446,"results":"92","hashOfConfig":"59"},{"size":3473,"mtime":1646755896447,"results":"93","hashOfConfig":"59"},{"size":1383,"mtime":1646755896447,"results":"94","hashOfConfig":"59"},{"size":1781,"mtime":1646755896442,"results":"95","hashOfConfig":"59"},{"size":1229,"mtime":1646755896443,"results":"96","hashOfConfig":"59"},{"size":2614,"mtime":1646755896442,"results":"97","hashOfConfig":"59"},{"size":109,"mtime":1646755896450,"results":"98","hashOfConfig":"59"},{"size":1150,"mtime":1646755896450,"results":"99","hashOfConfig":"59"},{"size":1641,"mtime":1646755896450,"results":"100","hashOfConfig":"59"},{"size":328,"mtime":1646755896453,"results":"101","hashOfConfig":"59"},{"size":1154,"mtime":1646755896453,"results":"102","hashOfConfig":"59"},{"size":1304,"mtime":1646755896452,"results":"103","hashOfConfig":"59"},{"size":440,"mtime":1646755896452,"results":"104","hashOfConfig":"59"},{"size":2933,"mtime":1646755896453,"results":"105","hashOfConfig":"59"},{"size":1523,"mtime":1646755896446,"results":"106","hashOfConfig":"59"},{"size":1437,"mtime":1646755896445,"results":"107","hashOfConfig":"59"},{"size":684,"mtime":1646755896447,"results":"108","hashOfConfig":"59"},{"size":3672,"mtime":1646755896442,"results":"109","hashOfConfig":"59"},{"size":3868,"mtime":1646755896443,"results":"110","hashOfConfig":"59"},{"size":3457,"mtime":1646755896451,"results":"111","hashOfConfig":"59"},{"size":1489,"mtime":1646755896451,"results":"112","hashOfConfig":"59"},{"size":3564,"mtime":1646755896452,"results":"113","hashOfConfig":"59"},{"size":576,"mtime":1646755896446,"results":"114","hashOfConfig":"59"},{"size":297,"mtime":1646755896448,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"1kfn13h",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"118"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"118"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"118"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"118"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"118"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"118"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"118"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"118"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/iouri/Desktop/Code/boum-tchak/client/src/index.js",[],["241","242"],"/Users/iouri/Desktop/Code/boum-tchak/client/src/serviceWorker.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/App.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/config/config.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/index.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/buttons.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/elements.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/layout.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/typography.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/ui-kit/musicGrid.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/context/GlobalState.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/context/types.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/Container.jsx",["243"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { ExpandedMenuItem } from \"../../ui-kit\";\nimport { TopMenu } from \"./elements/TopMenu\";\nimport { PlayControls } from \"./elements/PlayControls\";\nimport { AddInstrument } from \"./modals/AddInstrument\";\nimport { SaveSong } from \"./modals/SaveSong\";\nimport { config } from \"../../config/config\";\nimport {\n  playBeat,\n  getRandomName,\n  preparePartition,\n  prepareInstruments,\n  prepareOneInstrument,\n  playOneToneJsNote,\n} from \"../utils\";\nimport axios from \"axios\";\nimport { globalContext } from \"./context/GlobalContext\";\nimport { CreateSong as Component } from \"./Component\";\n\nexport const CreateSong = (props) => {\n  const [bottomMessage, setBottomMessage] = useState(\"\");\n  const [highlightedNote, setHighlightedNote] = useState(-1);\n\n  let musicPlaying = React.useRef(null);\n\n  const lengthOfPage = window.innerWidth >= 800 ? 16 : 12;\n\n  const {\n    tempo,\n    setTempo,\n    setIsPlaying,\n    instruments,\n    setInstruments,\n    partition,\n    setPartition,\n    setTimeoutTempo,\n    isNotePlayedOnClick,\n    isAddInstrumentVisible,\n    toggleIsAddInstrumentVisible,\n    isSaveSongVisible,\n    setIsSaveSongVisible,\n    animatedNotes,\n    timeoutTempo,\n    setAnimatedNotes,\n    currentPage,\n    setCurrentPage,\n    pages,\n    setPages,\n  } = useContext(globalContext);\n\n  useEffect(() => {\n    const songIdToLoad = props?.match?.params?.id;\n    if (songIdToLoad) {\n      prepareLoadedSong(songIdToLoad);\n    } else {\n      prepareNewMusic();\n    }\n    return () => stopPlaying();\n  }, []);\n\n  const prepareNewMusic = async () => {\n    const { data } = await axios.get(\"/api/instrument/starter\");\n    const preparedInstruments = prepareInstruments(data);\n    const newPartition = preparePartition(\n      preparedInstruments,\n      config.START_PARTITION_LENGTH\n    );\n    setInstruments(preparedInstruments);\n    setPartition(newPartition);\n  };\n\n  const prepareLoadedSong = async (songIdToLoad) => {\n    const { data: loadedSong } = await axios.get(`/api/song/${songIdToLoad}`);\n    const newInstruments = [...loadedSong.instruments];\n    const preparedInstruments = prepareInstruments(newInstruments);\n    setInstruments(preparedInstruments);\n    setPartition(loadedSong.partition);\n    setTempo(loadedSong.tempo);\n    setTimeoutTempo(60000 / loadedSong.tempo / 4);\n    const numberOfPages = Math.ceil(\n      loadedSong.partition[0].length / lengthOfPage\n    );\n    const newPages = [];\n    for (let i = 1; i <= numberOfPages; i++) {\n      newPages.push(1);\n    }\n    setPages(newPages);\n  };\n\n  const addOneBar = () => {\n    if (partition.length && partition[0].length < config.MAX_PARTITION_LENGTH) {\n      const updatedPartition = [...partition];\n      updatedPartition.forEach((el) => {\n        el.push(0);\n      });\n      const pagesCalculation = Math.ceil(\n        updatedPartition[0].length / lengthOfPage\n      );\n      const pagesUpdate =\n        pages.length < pagesCalculation ? pages.concat([1]) : pages;\n      setPartition(updatedPartition);\n      setPages(pagesUpdate);\n    }\n  };\n\n  const removeOneBar = () => {\n    if (partition[0]?.length < 2) return;\n\n    const updatedPartition = [...partition];\n    const last = updatedPartition[0].length - 1;\n    updatedPartition.forEach((el) => {\n      el.splice(last, 1);\n    });\n    const pagesCalc = Math.ceil(updatedPartition[0].length / lengthOfPage);\n    const pagesUpdate =\n      pages.length > pagesCalc ? pages.slice(0, pages.length - 1) : pages;\n    setPartition(updatedPartition);\n    setPages(pagesUpdate);\n    if (currentPage > pagesUpdate.length) setCurrentPage(pagesUpdate.length);\n  };\n\n  const playMusic = (instruments, partition, tempo) => {\n    if (!partition || !partition.length) return;\n    setIsPlaying(true);\n    setCurrentPage(1);\n    let counter = 0;\n\n    const playInterval = () => {\n      setHighlightedNote(counter);\n      setAnimatedNotes([counter - 1, counter, counter + 1]);\n      playBeat(instruments, partition, counter);\n      counter++;\n      if (counter >= partition[0].length) {\n        counter = 0;\n      }\n      if (counter % lengthOfPage === 1) {\n        const nextPage = Math.ceil(counter / lengthOfPage);\n        setCurrentPage(nextPage);\n      }\n    };\n    musicPlaying.current = setInterval(playInterval, tempo);\n  };\n\n  const onPlayBtnPress = () => {\n    playMusic(instruments, partition, timeoutTempo);\n  };\n\n  const stopPlaying = () => {\n    setIsPlaying(false);\n    clearInterval(musicPlaying.current);\n  };\n\n  const addInstrument = (instr) => {\n    const length = partition[0] ? partition[0].length : 8;\n    const newPartitionRow = [];\n    for (let i = 1; i <= length; i++) {\n      newPartitionRow.push(0);\n    }\n    const newPartition = [...partition];\n    const newInstruments = [...instruments];\n    const preparedNewInstrument = prepareOneInstrument(instr);\n    newInstruments.push(preparedNewInstrument);\n    newPartition.push(newPartitionRow);\n    setInstruments(newInstruments);\n    setPartition(newPartition);\n    stopPlaying();\n  };\n\n  const toggleActiveNote = (col, row, sounds, pitches) => {\n    const updatedPartition = [...partition];\n    const depth = sounds.length;\n    const newIndex = (updatedPartition[row][col] + 1) % depth;\n    updatedPartition[row][col] = newIndex;\n    if (sounds[newIndex] instanceof Audio && isNotePlayedOnClick) {\n      sounds[newIndex].play();\n    } else if (instruments[row].isToneJs && pitches.length) {\n      if (pitches[newIndex]) playOneToneJsNote(pitches[newIndex]);\n    }\n    setPartition(updatedPartition);\n  };\n\n  const saveTheSong = async (title) => {\n    const songInstruments = instruments.map((el) => {\n      return el.id;\n    });\n    const songData = {\n      title,\n      partition,\n      tempo,\n      instruments: songInstruments,\n      creator: props.user?._id || undefined,\n      creatorName: props.user?.username || getRandomName(),\n      posted: true,\n    };\n    await axios.post(\"api/song/\", songData);\n    setIsSaveSongVisible(false);\n    setBottomMessage(`New song \"${title}\" successfully saved!`);\n    setTimeout(() => {\n      setBottomMessage(\"\");\n    }, 1500);\n  };\n\n  return (\n    <React.Fragment>\n      {isAddInstrumentVisible && (\n        <AddInstrument addInstrument={addInstrument} />\n      )}\n      {isSaveSongVisible && (\n        <SaveSong\n          saveTheSong={saveTheSong}\n          toggleIsSaveSongVisible={() =>\n            setIsSaveSongVisible(!isSaveSongVisible)\n          }\n          user={props.user}\n        />\n      )}\n      {bottomMessage && (\n        <ExpandedMenuItem>\n          <p>{bottomMessage}</p>\n        </ExpandedMenuItem>\n      )}\n      <TopMenu />\n\n      <Component\n        partition={partition}\n        lengthOfPage={lengthOfPage}\n        currentPage={currentPage}\n        pages={pages}\n        instruments={instruments}\n        toggleActiveNote={toggleActiveNote}\n        highlightedNote={highlightedNote}\n        animatedNotes={animatedNotes}\n        toggleIsAddInstrumentVisible={toggleIsAddInstrumentVisible}\n        addOneBar={addOneBar}\n        removeOneBar={removeOneBar}\n      />\n      <PlayControls\n        onPlayBtnPress={onPlayBtnPress}\n        onStopBtnPress={stopPlaying}\n        user={props.user}\n      />\n    </React.Fragment>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/DisplaySong/SongsList.jsx",["244"],"import React, { useState, useEffect } from \"react\";\nimport { Bars } from \"svg-loaders-react\";\nimport axios from \"axios\";\nimport { DisplaySong } from \"./DisplaySong\";\nimport { prepareInstruments } from \"../utils/instruments\";\nimport { AppIntro } from \"../InfoPages/AppIntro\";\nimport { BlankSpace, MenuButton } from \"../../ui-kit\";\n\nexport const SongsList = ({ isAppIntroDisplayed = false }) => {\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [message, setMessage] = useState(\"\");\n\n  const loadSongs = async () => {\n    setLoading(true);\n    const { data: loadedSongs } = await axios.get(\n      `/api/song/posted/${currentPage}`,\n      {\n        page: 1,\n      }\n    );\n    if (!loadedSongs.length) {\n      setMessage(\"no more songs to load...\");\n      setLoading(false);\n      setTimeout(() => {\n        setMessage(\"\");\n      }, 2000);\n      return;\n    }\n    loadedSongs.forEach((song) => {\n      const preparedInstruments = prepareInstruments(song.instruments);\n      song.instruments = preparedInstruments;\n    });\n    setSongs([...songs, ...loadedSongs]);\n    setLoading(false);\n    setCurrentPage(currentPage + 1);\n  };\n\n  useEffect(() => {\n    loadSongs();\n  }, []);\n\n  const loadMore = () => {\n    loadSongs();\n  };\n\n  return (\n    <React.Fragment>\n      {isAppIntroDisplayed && <AppIntro />}\n      {songs.map((song) => {\n        return (\n          <DisplaySong\n            key={song._id}\n            title={song.title}\n            partition={song.partition}\n            musicLines={song.instruments}\n            tempo={song.tempo}\n            creatorName={song.creatorName}\n          />\n        );\n      })}\n      {loading ? (\n        <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />\n      ) : message ? (\n        <p>{message}</p>\n      ) : (\n        <MenuButton onClick={loadMore}>load more</MenuButton>\n      )}\n      <BlankSpace height=\"100px\" />\n    </React.Fragment>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/LoadSong/LoadSong.jsx",["245"],"import React, { useState, useEffect } from \"react\";\nimport { Bars } from \"svg-loaders-react\";\nimport {\n  PageLayout,\n  SelectableText,\n  Button,\n  Heading2,\n  Column,\n} from \"../../ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport const LoadSong = (props) => {\n  const [songsList, setSongsList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  const fetchData = async () => {\n    setLoading(true);\n    const { data } = await axios.get(`/api/song/creator/${props.user._id}`);\n    if (data) {\n      setSongsList(data);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const deleteSong = async (songId) => {\n    const response = await axios.delete(`/api/song/${songId}`);\n    setMessage(response.message);\n    fetchData();\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 1500);\n  };\n\n  return (\n    <PageLayout>\n      <Heading2>Load Song</Heading2>\n      {loading && (\n        <Column alignItems=\"center\">\n          <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />\n        </Column>\n      )}\n      {songsList.map((el) => {\n        return (\n          <SelectableText\n            key={el._id}\n            selected={selectedSong === el._id}\n            onClick={() => {\n              setSelectedSong(el._id);\n            }}>\n            {el.title}\n          </SelectableText>\n        );\n      })}\n      <div>{message && <p>{message}</p>}</div>\n      {selectedSong && (\n        <div style={{ paddingTop: 20 }}>\n          <Link to={`/create/${selectedSong}`}>\n            <Button>Load</Button>\n          </Link>\n          <Button onClick={() => deleteSong(selectedSong)}>Delete</Button>\n          <Link to={\"/\"}>\n            <Button>Cancel</Button>\n          </Link>\n        </div>\n      )}\n    </PageLayout>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/Auth/Signup.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/Auth/Login.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/Auth/ProtectedRoute.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/Auth/Profile.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateInstrument/CreateInstrument.jsx",["246"],"import React, { useState, useEffect } from \"react\";\nimport { Characteristics } from \"./Characteristics\";\nimport { InstrumentSoundsList } from \"./InstrumentSoundsList\";\nimport { AddSound } from \"./AddSound\";\nimport { SketchPicker } from \"react-color\";\nimport { gradientBuilder } from \"../utils\";\nimport { config } from '../../config/config';\nimport axios from \"axios\";\nimport {\n  Row,\n  Column,\n  Button,\n  PageLayout,\n  Heading2,\n  Alert,\n  CategoryBtn,\n} from \"../../ui-kit\";\n\nconst views = {\n  OVERVIEW: \"OVERVIEW\",\n  ADD_SOUND: \"ADD_SOUND\",\n};\n\nexport const CreateInstrument = (props) => {\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [sounds, setSounds] = useState([{id: config.DEFAULT_SOUND_ID}]);\n  const [view, setView] = useState(views.OVERVIEW);\n  const [loading, setLoading] = useState(false);\n  const [availableSounds, setAvailableSounds] = useState([]);\n  const [selectedSound, setSelectedSound] = useState(null);\n  const [editedColor, setEditedColor] = useState(\"start\");\n  const [colors, setColors] = useState(['#ddd']);\n  const [startColor, setStartColor] = useState(\"#aaaaaa\");\n  const [endColor, setEndColor] = useState(\"#555555\");\n  const [pickerColor, setPickerColor] = useState(\"#aaaaaa\");\n\n  const handleColorChange = (color) => {\n    setPickerColor(color.hex);\n    if (editedColor === \"start\") {\n      setStartColor(color.hex);\n    } else if (editedColor === \"end\") {\n      setEndColor(color.hex);\n    }\n  };\n\n  useEffect(()=>{\n    updateSoundsColors();\n  }, [startColor, endColor])\n\n  const updateSoundsColors = () => {\n    const updatedColors = [...colors];\n    const l = sounds.length;\n    if (l === 1) return;\n    if (l >= 2) updatedColors[1] = startColor;\n    if (l >= 3) updatedColors[l - 1] = endColor;\n    if (l > 3) {\n      const gradient = gradientBuilder(startColor, endColor, l - 3);\n      for (let i = 2; i < l - 1; i++) {\n        updatedColors[i] = gradient[i - 2];\n      }\n    }\n    setColors(updatedColors);\n  };\n\n  const openAddSoundSection = async () => {\n    setView(views.ADD_SOUND);\n    await fetchData();\n  };\n\n  const fetchData = async () => {\n    setLoading(true);\n    const { data } = await axios.get(\"/api/sound\");\n    if (data) {\n      setAvailableSounds(data);\n      setLoading(false);\n    }\n  };\n\n  const displayMessage = (mes) => {\n    setMessage(mes);\n    setInterval(() => {\n      setMessage(\"\");\n    }, 2000);\n  };\n\n  const addSound = (sound) => {\n    if ((!sound.url, !sound.color)) {\n      displayMessage(\"Please select or upload a sound and pick a color\");\n      return;\n    }\n    const newSound = {\n      id: sound.id,\n      name: sound.name,\n      url: sound.url,\n      pitch: sound.pitch || \"\",\n    };\n    const updatedSounds = [...sounds, newSound];\n    setSounds(updatedSounds);\n    setColors([...colors, '#ddd']);\n    setView(views.OVERVIEW);\n  };\n\n  const switchToOverview = () => {\n    setView(views.OVERVIEW);\n  };\n\n  const selectSound = (sound) => {\n    setSelectedSound(sound);\n  };\n\n  const resetInstrument = () => {\n    setName(\"\");\n    setCategory(\"\");\n    setSubCategory(\"\");\n    setSounds([{id: config.DEFAULT_SOUND_ID}]);\n  };\n\n  const saveInstrument = async () => {\n    if (!name || !category || !subCategory) {\n      displayMessage(`Please enter the fields: ${!name?'Name':''} ${!category?'Category':''} ${!subCategory?'Sub-category':''}`);\n      return;\n    }\n    if (sounds.length < 2) {\n      displayMessage(\"You must select at least 1 sound\");\n      return;\n    }\n    const createdInstrument = await axios.post(\"/api/instrument\", {\n      name,\n      category,\n      subCategory,\n      sounds: sounds.map(el=> el.id || null),\n      colors: colors,\n      creator: props.user._id,\n      private: false,\n    });\n    if (createdInstrument.message) {\n      displayMessage(createdInstrument.message);\n    } else if (createdInstrument.status === 200) {\n      displayMessage(`Success! You just created a new instrument!`);\n      resetInstrument();\n    }\n  };\n\n  const toggleHelp = () => {};\n\n  return (\n    <PageLayout>\n      <Row>{message && <Alert>{message}</Alert>}</Row>\n      {view === views.ADD_SOUND && (\n        <AddSound\n          switchToOverview={switchToOverview}\n          availableSounds={availableSounds}\n          selectedSound={selectedSound}\n          selectSound={selectSound}\n          loading={loading}\n          addSound={addSound}\n          fetchData={fetchData}\n          displayMessage={displayMessage}\n        />\n      )}\n      {view === views.OVERVIEW && (\n        <React.Fragment>\n          <Row>\n            <Column flex={1}>\n              <Heading2>Create Instrument</Heading2>\n            </Column>\n            <Column\n              flex={2}\n              flexDirection=\"row\"\n              alignItems=\"flex-end\"\n              justifyContent=\"flex-end\">\n              <Button onClick={saveInstrument}>Save Instrument</Button>\n              <Button onClick={resetInstrument}>Reset</Button>\n              <Button onClick={toggleHelp}>Help</Button>\n            </Column>\n          </Row>\n          <Row>\n            <Column flex={2}>\n              <Characteristics\n                name={name}\n                setName={setName}\n                category={category}\n                setCategory={setCategory}\n                subCategory={subCategory}\n                setSubCategory={setSubCategory}\n              />\n              <Row>\n                <Column>\n                  <h3>Sounds:</h3>\n                </Column>\n              </Row>\n              <Row>\n                <Column>\n                  <InstrumentSoundsList\n                    sounds={sounds}\n                    colors={colors}\n                    addSound={openAddSoundSection}\n                  />\n                </Column>\n              </Row>\n            </Column>\n            <Column flex={1}>\n              <SketchPicker\n                color={pickerColor}\n                onChangeComplete={handleColorChange}\n              />\n              <Row>\n                <Column\n                  flexDirection=\"row\"\n                  alignItems=\"center\"\n                  justifyContent=\"flex-start\">\n                  <CategoryBtn\n                    selected={editedColor === \"start\"}\n                    onClick={() => setEditedColor(\"start\")}>\n                    Pick start color\n                  </CategoryBtn>\n                  <CategoryBtn\n                    selected={editedColor === \"end\"}\n                    onClick={() => setEditedColor(\"end\")}>\n                    Pick end color\n                  </CategoryBtn>\n                </Column>\n              </Row>\n            </Column>\n          </Row>\n        </React.Fragment>\n      )}\n    </PageLayout>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/Container.jsx",["247"],"import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { djContext } from \"./context/DjContext\";\nimport axios from \"axios\";\nimport { Bars } from \"svg-loaders-react\";\nimport { MixMode as Component } from \"./Component\";\nimport { preparePartition, prepareInstruments, playBeat } from \"../utils\";\n\nlet counter;\n\nexport const MixMode = (props) => {\n  const [loading, setLoading] = useState(false);\n  const {\n    setPartition,\n    setInstruments,\n    highlightedNote,\n    setHighlightedNote,\n    loop1,\n    loop2,\n    loop3,\n    loop4,\n    tempo,\n    setIsPlaying,\n    setLoopActive,\n  } = useContext(djContext);\n\n  let musicPlaying = useRef(null);\n\n  useEffect(() => {\n    prepareLoop(\"loop1\", [\"E-Kicks 1\", \"E-Hi-Hats 1\", \"E-Cymbals\"]);\n    prepareLoop(\"loop2\", [\"Vinyls 1\", \"Congas\", \"Clap 1\"]);\n    prepareLoop(\"loop3\", [\"Tone Bass Synth Am\", \"Tone Bass Synth Em\"]);\n    prepareLoop(\"loop4\", [\n      \"Tone Synth Am Hi\",\n      \"Tone Synth Chromatic\",\n      \"Pizzicato C-Maj\",\n    ]);\n  }, []);\n\n  const toggleActiveNote = (col, row, sounds, pitches, loop) => {\n    const updatedPartition = [...loop.partition];\n    const depth = sounds.length;\n    const newIndex = (updatedPartition[row][col] + 1) % depth;\n    updatedPartition[row][col] = newIndex;\n    setPartition(updatedPartition, loop.name);\n  };\n\n  const toggleLoopActive = (loop) => {\n    const updatedStatus = [...loop.status];\n    const u = updatedStatus[0][0];\n    updatedStatus[0][0] = u === 1 ? 0 : 1;\n    setLoopActive(updatedStatus, loop.name);\n  };\n\n  const prepareLoop = async (loopName, instruments) => {\n    setLoading(true);\n    const length = loopName === \"loop3\" || loopName === \"loop4\" ? 16 : 8;\n    const { data } = await axios.get(\"/api/instrument\", {\n      params: { names: instruments },\n    });\n    const preparedInstruments = prepareInstruments(data);\n    const newPartition = preparePartition(preparedInstruments, length);\n    setInstruments(preparedInstruments, loopName);\n    setPartition(newPartition, loopName);\n    setLoading(false);\n  };\n\n  const playMusic = () => {\n    setIsPlaying(true);\n    const timeoutTempo = 60000 / tempo / 4;\n    counter = 0;\n\n    const playInterval = () => {\n      setHighlightedNote(counter);\n      [loop1, loop2, loop3, loop4].forEach((loop) => {\n        if (loop.status[0][0] === 1) {\n          playBeat(\n            loop.instruments,\n            loop.partition,\n            counter % loop.partition[0].length\n          );\n        }\n      });\n      counter++;\n    };\n\n    musicPlaying.current = setInterval(playInterval, timeoutTempo);\n  };\n\n  const onPlayBtnPress = () => {\n    playMusic();\n  };\n  const onStopBtnPress = () => {\n    setIsPlaying(false);\n    clearInterval(musicPlaying.current);\n  };\n\n  if (loading) {\n    return <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />;\n  }\n\n  return (\n    <Component\n      loop1={loop1}\n      loop2={loop2}\n      loop3={loop3}\n      loop4={loop4}\n      onPlayBtnPress={onPlayBtnPress}\n      onStopBtnPress={onStopBtnPress}\n      toggleLoopActive={toggleLoopActive}\n      setLoopActive={setLoopActive}\n      toggleActiveNote={toggleActiveNote}\n      highlightedNote={highlightedNote}\n    />\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/context/DjState.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/InfoPages/Help.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/Header/Header.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/context/GlobalReducer.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/context/GlobalContext.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/Auth/utils.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/context/types.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/utils/instruments.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/Component.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/DisplaySong/DisplaySong.jsx",["248","249"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { DisplayLine } from \"./DisplayLine\";\nimport { playBeat } from \"../utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faStop } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  MusicGrid,\n  SongPost,\n  SongPostPlay,\n  SongHeader,\n  SmallTitle,\n} from \"../../ui-kit\";\n\nconst iconsStyle = {\n  width: 40,\n  height: 40,\n  padding: \"10px 30px\",\n  border: \"solid 1px rgba(0, 0, 0, 0.6)\",\n  color: \"rgba(0, 0, 0, 0.7)\",\n  backgroundColor: \"rgba(250, 250, 250, 0.5)\",\n  borderRadius: 5,\n  zIndex: 5,\n};\n\nexport const DisplaySong = ({\n  title,\n  partition,\n  musicLines,\n  tempo,\n  creatorName,\n}) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [highlightedNote, setHighlightedNote] = useState(-1);\n  const [animatedNotes, setAnimatedNotes] = useState([-1, -1, -1]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pages, setPages] = useState([1]);\n\n  const timeoutTempo = 60000 / tempo / 4;\n  let intervalId = useRef(null);\n\n  const lengthOfPage = window.innerWidth >= 800 ? 16 : 12;\n\n  useEffect(() => {\n    const updatedPages = [];\n    const numberOfPages = Math.ceil(partition[0].length / lengthOfPage);\n    for (let i = 1; i <= numberOfPages; i++) {\n      updatedPages.push(1);\n    }\n    setPages(updatedPages);\n  }, []);\n\n  useEffect(() => {\n    return () => stopPlaying();\n  }, []);\n\n  const playMusic = (musicLines, partition, tempo) => {\n    setIsPlaying(true);\n    setCurrentPage(1);\n    let counter = 0;\n    intervalId.current = setInterval(() => {\n      setHighlightedNote(counter);\n      setAnimatedNotes([counter - 1, counter, counter + 1]);\n      playBeat(musicLines, partition, counter);\n      counter++;\n      if (counter >= partition[0].length) {\n        counter = 0;\n      }\n      if (counter % lengthOfPage === 1) {\n        const nextPage = Math.ceil(counter / lengthOfPage);\n        setCurrentPage(nextPage);\n      }\n    }, tempo);\n  };\n\n  const stopPlaying = () => {\n    setIsPlaying(false);\n    clearInterval(intervalId.current);\n  };\n\n  const onSongClick = () => {\n    if (isPlaying) {\n      stopPlaying();\n    } else {\n      playMusic(musicLines, partition, timeoutTempo);\n    }\n  };\n\n  return (\n    <SongPost>\n      <SongPostPlay onClick={onSongClick}>\n        {isPlaying ? (\n          <FontAwesomeIcon icon={faStop} color=\"black\" style={iconsStyle} />\n        ) : (\n          <FontAwesomeIcon icon={faPlay} color=\"black\" style={iconsStyle} />\n        )}\n      </SongPostPlay>\n      <SongHeader>\n        <SmallTitle b>{title}</SmallTitle>\n        <SmallTitle>by {creatorName}</SmallTitle>\n      </SongHeader>\n      <MusicGrid>\n        {musicLines.map((line, i) => {\n          return (\n            <DisplayLine\n              key={i}\n              linePosition={i}\n              notes={partition[i]}\n              noteColors={line.colors}\n              sounds={line.sounds}\n              lengthOfPage={lengthOfPage}\n              currentPage={currentPage}\n              highlightedNote={highlightedNote}\n              animatedNotes={animatedNotes}\n            />\n          );\n        })}\n      </MusicGrid>\n    </SongPost>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/InfoPages/AppIntro.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/elements/TopMenu.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/elements/PlayControls.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/modals/AddInstrument.jsx",["250"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { globalContext } from \"../context/GlobalContext\";\nimport { Bars } from \"svg-loaders-react\";\nimport { FixedSizeList } from \"react-window\";\nimport {\n  CategoryBtn,\n  ExpandedMenuItem,\n  Column,\n  Row,\n  Button,\n  SelectableRow,\n  Text,\n  Heading3,\n} from \"../../../ui-kit\";\nimport axios from \"axios\";\n\nexport const AddInstrument = ({ addInstrument }) => {\n  const [newInstruments, setNewInstruments] = useState([]);\n  const [searchCategory, setSearchCategory] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [uniqueCategories, setUniqueCategories] = useState([]);\n\n  const { toggleIsAddInstrumentVisible } = useContext(globalContext);\n\n  const fetchInstrumentsData = async (searchCat, shouldCreateBtns) => {\n    const searchParams = searchCat && {\n      params: { category: searchCat },\n    };\n    const { data } = await axios.get(\"/api/instrument\", searchParams);\n    if (data) {\n      setNewInstruments(data);\n      if (shouldCreateBtns) {\n        const allCategories = data.map((instrument) => {\n          return instrument.category;\n        });\n        const newUniqueCategories = [...new Set(allCategories)];\n        setUniqueCategories(newUniqueCategories);\n      }\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchInstrumentsData(null, true);\n  }, []);\n\n  const handleClick = (inst) => {\n    addInstrument(inst);\n    toggleIsAddInstrumentVisible();\n  };\n\n  const selectCategory = (cat) => {\n    fetchInstrumentsData(cat);\n    setSearchCategory(cat);\n  };\n\n  const ItemRow = ({ index, style }) => {\n    const instrument = newInstruments[index];\n    return (\n      <SelectableRow\n        style={style}\n        bgColor={index % 2 === 0 ? \"#eee\" : \"#fff\"}\n        padding=\"4px 0 4px 0\"\n        onClick={() => handleClick(instrument)}>\n        <Column flex={2}>\n          <Text>{instrument.name}</Text>\n        </Column>\n        <Column>\n          <Text>{instrument.category}</Text>\n        </Column>\n        <Column>\n          <Text>{instrument.subCategory}</Text>\n        </Column>\n      </SelectableRow>\n    );\n  };\n\n  return (\n    <ExpandedMenuItem>\n      <Row padding=\"10px 12px 4px 12px\">\n        <Heading3>Add Instrument</Heading3>\n      </Row>\n      <Row padding=\"10px 12px 4px 12px\">\n        <Column flexDirection=\"row\">\n          {uniqueCategories.map((cat) => {\n            if (cat !== \"default\") {\n              return (\n                <CategoryBtn\n                  key={cat}\n                  selected={searchCategory === cat}\n                  onClick={() => selectCategory(cat)}>\n                  {cat}\n                </CategoryBtn>\n              );\n            }\n          })}\n        </Column>\n      </Row>\n      {loading && (\n        <Column justifyContent=\"center\" alignItems=\"center\">\n          <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />\n        </Column>\n      )}\n      <Row padding=\"4px 12px 0 12px\">\n        <Column>\n          <FixedSizeList\n            height={260}\n            width={380}\n            itemCount={newInstruments.length}\n            itemSize={30}>\n            {ItemRow}\n          </FixedSizeList>\n        </Column>\n      </Row>\n      <Row padding=\"20px 0 10px 0\">\n        <Column alignItems=\"center\">\n          <Button hoverColor=\"red\" onClick={toggleIsAddInstrumentVisible}>\n            Cancel\n          </Button>\n        </Column>\n      </Row>\n    </ExpandedMenuItem>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/modals/SaveSong.jsx",["251"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ExpandedMenuItem, Button, Input } from \"../../../ui-kit\";\n\nexport const SaveSong = ({ saveTheSong, user, toggleIsSaveSongVisible }) => {\n  const [title, setTitle] = useState(\"\");\n\n  const handleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  return (\n    <ExpandedMenuItem>\n      {\n        <React.Fragment>\n          {user ? (\n            <p style={{ margin: 10 }}>\n              Name your song (if you modified an existing song, <br />\n              it will still be saved under as new one):\n            </p>\n          ) : (\n            <p style={{ margin: 10 }}>\n              You don't have a user account yet, therefore your song <br />\n              will be published as annonymous... to bad!\n              <br />\n              Please create a user profile before saving next time <br />\n              Name your song:\n            </p>\n          )}\n          <Input\n            type=\"text\"\n            placeholder=\"My Supa Song...\"\n            value={title}\n            width={\"260px\"}\n            onChange={handleChange}\n          />\n          <div>\n            <Button onClick={() => saveTheSong(title)}>Save</Button>\n            <Button onClick={() => toggleIsSaveSongVisible()}>Cancel</Button>\n          </div>\n        </React.Fragment>\n      }\n    </ExpandedMenuItem>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateInstrument/Characteristics.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateInstrument/InstrumentSoundsList.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateInstrument/AddSound.jsx",["252"],"import React, { useState, useEffect } from \"react\";\nimport { AvailableSoundsList } from \"./AvailableSoundsList\";\nimport { CreateSound } from \"./CreateSound\";\nimport { Row, Button, Column, Heading2, Input } from \"../../ui-kit\";\n\nconst views = {\n  ADD: \"ADD\",\n  UPLOAD: \"UPLOAD\",\n};\n\nexport const AddSound = ({\n  switchToOverview,\n  availableSounds,\n  selectedSound,\n  selectSound,\n  addSound,\n  loading,\n  fetchData,\n  displayMessage,\n}) => {\n  const [view, setView] = useState(views.ADD);\n  const [filterName, setFilterName] = useState(\"\");\n\n  useEffect(() => {\n    selectSound(null);\n  }, []);\n\n  const handleAddSoundClick = () => {\n    if (!selectedSound || !selectedSound.name || !selectedSound.url) {\n      displayMessage(\"Please select a sound first\");\n      return;\n    }\n    addSound({\n      id: selectedSound._id,\n      name: selectedSound.name,\n      color: \"#ddd\",\n      url: selectedSound.url,\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Column flexDirection=\"row\" justifyContent=\"left\">\n          <Heading2>Add Sound</Heading2>\n        </Column>\n        <Column flexDirection=\"row\" justifyContent=\"left\">\n          <Input\n            type=\"text\"\n            width=\"140px\"\n            value={filterName}\n            placeholder=\"Search...\"\n            onChange={(e) => setFilterName(e.target.value)}\n          />\n        </Column>\n        <Column flex={2} flexDirection=\"row\" justifyContent=\"flex-end\">\n          <Button backgroundColor=\"#0f0\" onClick={handleAddSoundClick}>\n            Add\n          </Button>\n          <Button backgroundColor=\"#f00\" onClick={switchToOverview}>\n            Cancel\n          </Button>\n          {view === views.ADD && (\n            <Button\n              onClick={() => {\n                setView(views.UPLOAD);\n              }}>\n              Upload own sound\n            </Button>\n          )}\n          {view === views.UPLOAD && (\n            <Button\n              onClick={() => {\n                setView(views.ADD);\n              }}>\n              Search sound\n            </Button>\n          )}\n        </Column>\n      </Row>\n      <Row>\n        <Column flex={1}>\n          {view === views.UPLOAD && (\n            <CreateSound setView={setView} fetchData={fetchData} />\n          )}\n          {view === views.ADD && (\n            <AvailableSoundsList\n              loading={loading}\n              availableSounds={availableSounds}\n              selectedSound={selectedSound}\n              selectSound={selectSound}\n              filterName={filterName}\n            />\n          )}\n        </Column>\n      </Row>\n    </React.Fragment>\n  );\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/context/DjContext.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/context/DjReducer.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/Component.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/utils/index.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/utils/playMechanics.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/utils/categories.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/utils/getRandomName.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/utils/gradientBuilder.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/elements/ToolsLine.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/elements/CreateLine.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/DisplaySong/DisplayLine.jsx",["253"],"import React from \"react\";\nimport { Note } from \"./Note\";\nimport { Line } from \"../../ui-kit\";\n\nexport const DisplayLine = ({\n  notes,\n  noteColors,\n  highlightedNote,\n  animatedNotes,\n  lengthOfPage,\n  currentPage,\n}) => {\n  const firstIndex = (currentPage - 1) * lengthOfPage;\n  const lastIndex = currentPage * lengthOfPage;\n\n  const displayNotes = notes.map((n, i) => {\n    if (i >= firstIndex && i < lastIndex) {\n      return (\n        <Note\n          key={i}\n          status={n}\n          colors={noteColors}\n          highlighted={highlightedNote === i}\n          isAnimated={animatedNotes.includes(i)}\n        />\n      );\n    }\n  });\n\n  return <Line>{displayNotes}</Line>;\n};\n","/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateInstrument/AvailableSoundsList.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateInstrument/CreateSound.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/elements/Loop.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/elements/Controls.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/MixMode/utils/randomLoops.js",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/CreateSong/elements/Note.jsx",[],"/Users/iouri/Desktop/Code/boum-tchak/client/src/modules/DisplaySong/Note.jsx",[],{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":59,"column":6,"nodeType":"260","endLine":59,"endColumn":8,"suggestions":"261"},{"ruleId":"258","severity":1,"message":"262","line":42,"column":6,"nodeType":"260","endLine":42,"endColumn":8,"suggestions":"263"},{"ruleId":"258","severity":1,"message":"264","line":30,"column":6,"nodeType":"260","endLine":30,"endColumn":8,"suggestions":"265"},{"ruleId":"258","severity":1,"message":"266","line":51,"column":6,"nodeType":"260","endLine":51,"endColumn":28,"suggestions":"267"},{"ruleId":"258","severity":1,"message":"268","line":37,"column":6,"nodeType":"260","endLine":37,"endColumn":8,"suggestions":"269"},{"ruleId":"270","severity":1,"message":"271","line":36,"column":10,"nodeType":"272","messageId":"273","endLine":36,"endColumn":15},{"ruleId":"258","severity":1,"message":"274","line":50,"column":6,"nodeType":"260","endLine":50,"endColumn":8,"suggestions":"275"},{"ruleId":"276","severity":1,"message":"277","line":86,"column":39,"nodeType":"278","messageId":"279","endLine":86,"endColumn":41},{"ruleId":"270","severity":1,"message":"280","line":2,"column":10,"nodeType":"272","messageId":"273","endLine":2,"endColumn":14},{"ruleId":"258","severity":1,"message":"281","line":26,"column":6,"nodeType":"260","endLine":26,"endColumn":8,"suggestions":"282"},{"ruleId":"276","severity":1,"message":"277","line":16,"column":41,"nodeType":"278","messageId":"279","endLine":16,"endColumn":43},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'prepareLoadedSong', 'prepareNewMusic', 'props?.match?.params?.id', and 'stopPlaying'. Either include them or remove the dependency array.","ArrayExpression",["285"],"React Hook useEffect has a missing dependency: 'loadSongs'. Either include it or remove the dependency array.",["286"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["287"],"React Hook useEffect has a missing dependency: 'updateSoundsColors'. Either include it or remove the dependency array.",["288"],"React Hook useEffect has a missing dependency: 'prepareLoop'. Either include it or remove the dependency array.",["289"],"no-unused-vars","'pages' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'lengthOfPage' and 'partition'. Either include them or remove the dependency array.",["290"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'selectSound'. Either include it or remove the dependency array. If 'selectSound' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["291"],"no-global-assign","no-unsafe-negation",{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},"Update the dependencies array to be: [prepareLoadedSong, prepareNewMusic, props?.match?.params?.id, stopPlaying]",{"range":"306","text":"307"},"Update the dependencies array to be: [loadSongs]",{"range":"308","text":"309"},"Update the dependencies array to be: [fetchData]",{"range":"310","text":"311"},"Update the dependencies array to be: [startColor, endColor, updateSoundsColors]",{"range":"312","text":"313"},"Update the dependencies array to be: [prepareLoop]",{"range":"314","text":"315"},"Update the dependencies array to be: [lengthOfPage, partition]",{"range":"316","text":"317"},"Update the dependencies array to be: [selectSound]",{"range":"318","text":"319"},[1559,1561],"[prepareLoadedSong, prepareNewMusic, props?.match?.params?.id, stopPlaying]",[1273,1275],"[loadSongs]",[754,756],"[fetchData]",[1632,1654],"[startColor, endColor, updateSoundsColors]",[1010,1012],"[prepareLoop]",[1356,1358],"[lengthOfPage, partition]",[590,592],"[selectSound]"]