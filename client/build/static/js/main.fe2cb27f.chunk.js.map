{"version":3,"sources":["ui-kit/elements.js","ui-kit/buttons.js","ui-kit/layout.js","ui-kit/typography.js","ui-kit/musicGrid.js","components/CreateSong/Note.jsx","components/CreateSong/CreateLine.jsx","components/Shared/PageSquares.jsx","components/CreateSong/PlayControls.jsx","components/CreateSong/AdvControls.jsx","components/CreateSong/AddInstrument.jsx","components/CreateSong/SaveSong.jsx","components/utils/instruments.js","components/utils/playMechanics.js","components/utils/categories.js","components/CreateSong/CreateSong.jsx","components/DisplaySong/Note.jsx","components/DisplaySong/DisplayLine.jsx","components/DisplaySong/DisplaySong.jsx","components/DisplaySong/SongsList.jsx","components/LoadSong/LoadSong.jsx","components/Auth/utils.js","components/Auth/Login.jsx","components/Auth/Signup.jsx","components/Auth/Profile.jsx","components/Auth/ProtectedRoute.jsx","components/CreateInstrument/Characteristics.jsx","components/CreateInstrument/InstrumentSoundsList.jsx","components/CreateInstrument/AvailableSoundsList.jsx","components/CreateInstrument/CreateSound.jsx","components/CreateInstrument/AddSound.jsx","components/CreateInstrument/CreateInstrument.jsx","components/InfoPages/About.jsx","components/Header/Header.jsx","App.jsx","serviceWorker.js","index.js"],"names":["ControlsPad","styled","div","Tempo","span","ExpandedMenuItem","SongPostPlay","SongPost","Input","input","props","width","Label","form","label","Select","select","Option","option","ProfilePic","img","src","ColorSquare","backgroundColor","SelectableText","p","selected","Button","button","PlayButton","StopButton","MenuButton","InstrumentBtn","DeleteButton","Row","Column","flexDirection","alignItems","justifyContent","flex","HeaderLayout","BackHeader","MainScreen","Wrapper","maxWidth","border","PageLayout","BlankSpace","height","Heading2","h2","Heading3","h3","SongHeader","SongTitle","b","LineLabel","HeaderTitle","h1","Alert","MusicGrid","Line","notesPlayingAnimation","keyframes","StyledNote","color","highlighted","clickable","animated","PageSquare","Note","notePosition","status","colors","toggleActiveNote","linePosition","sounds","onClick","CreateLine","notes","noteColors","highlightedNote","isDeleteLineVisible","animatedNotes","deleteLine","currentPage","lenghtOfPage","firstIndex","lastIndex","displayNotes","map","n","i","key","includes","PageSquares","selectPage","pages","length","el","PlayControls","onPlayBtnPress","onStopBtnPress","isPlaying","addOneBar","removeOneBar","isNotePlayedOnClick","setIsNotePlayedOnClick","tempo","setTempo","setTimeoutTempo","numberOfBars","AdvControls","toggleIsAddInstrumentVisible","toggleIsSaveSongVisible","toggleIsDeleteLineVisible","user","to","AddInstrument","addInstrument","useState","newInstruments","setNewInstruments","loading","setLoading","useEffect","a","axios","get","data","fetchInstrumentsData","fill","stroke","instrument","name","SaveSong","saveTheSong","title","setTitle","Fragment","style","margin","type","placeholder","value","onChange","e","target","preparePartition","instruments","partition","forEach","emptyLine","push","prepareInstruments","line","lineSounds","lineColors","url","Audio","id","_id","prepareOneInstrument","playBeat","lines","beatNumber","partitionLine","soundIndex","pause","currentTime","play","SOUND_CATEGORIES","SUB_CATEGORIES","default","Drums","Bass","Synth","Guitar","Ambiant","Voice","Other","getSubCategories","category","getCategories","CreateSong","state","musicPlaying","musicLines","timeoutTempo","isAddInstrumentVisible","isSaveSongVisible","bottomMessage","instr","newPartitionRow","newPartition","newMusicLines","preparedNewInstrument","setState","col","row","updatedPartition","depth","newIndex","playMusic","counter","setInterval","nextPage","stopPlaying","clearInterval","songInstruments","songData","creator","creatorName","username","posted","post","setTimeout","pagesUpdate","Math","ceil","concat","last","splice","slice","lineNumber","updatedInstruments","pageNumber","this","prepareNewMusic","prepareLoadedSong","songId","match","params","loadedSong","React","Component","isAnimated","DisplayLine","lengthOfPage","console","log","iconsStyle","padding","borderRadius","zIndex","DisplaySong","onSongClick","updatedPages","numberOfPages","icon","faStop","faPlay","SongsList","songs","setSongs","setCurrentPage","message","setMessage","loadSongs","page","loadedSongs","song","preparedInstruments","LoadSong","songsList","setSongsList","selectedSong","setSelectedSong","fetchData","deleteSong","delete","response","paddingTop","signup","password","then","catch","err","login","Login","setUsername","setPassword","handleLogin","setUser","history","handleChange","htmlFor","textDecoration","Signup","handleSignup","Profile","onLogoutBtnClick","ProtectedRoute","component","rest","render","Characteristics","setName","setCategory","subCategory","setSubCategory","instrumentCategories","cat","subCat","InstrumentSoundsList","addSound","AvailableSoundsList","availableSounds","selectedSound","selectSound","filterName","setFilterName","filterCategory","setFilterCategory","filterSubCategory","setFilterSubCategory","filteredSounds","filter","sound","toLocaleLowerCase","volumeBtnStyle","borderColor","borderWidth","borderStyle","cursor","soundCategories","faVolumeUp","CreateSound","setView","soundName","setSoundName","soundCategory","setSoundCategory","soundSubCategory","setSoundSubCategory","soundFile","setSoundFile","uploadSound","displayMessage","uploadData","FormData","append","uploadedSound","pitch","secure_url","createdSound","mes","multiple","event","selectedFile","files","views","AddSound","switchToOverview","soundColor","setSoundColor","view","onChangeComplete","hex","CreateInstrument","setSounds","setAvailableSounds","setSelectedSound","openAddSoundSection","resetInstrument","saveInstrument","private","createdInstrument","newSound","updatedSounds","About","linkStyle","Header","display","paddingRight","App","exact","path","Boolean","window","location","hostname","authResponse","ReactDOM","document","getElementById","renderApp","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.fe2cb27f.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const ControlsPad = styled.div`\n  padding: 10px;\n`;\n\nexport const Tempo = styled.span`\n  font-size: 16px;\n`;\n\nexport const ExpandedMenuItem = styled.div`\n  margin: auto;\n  min-width: 300px;\n  max-width: 700px;\n  position: absolute;\n  z-index: 10;\n  top: 150px;\n  box-shadow: 3px 3px 5px #bbb;\n  background-color: white;\n  border: solid 1px black;\n  border-radius: 3px;\n  padding: 10px;\n`;\n\nexport const SongPostPlay = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  margin-top: -8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  visibility: hidden;\n`;\n\nexport const SongPost = styled.div`\n  position: relative;\n  margin: 30px 10px;\n  border: solid 1px black;\n  border-radius: 10px;\n  padding-top: 10px;\n  width: 80%;\n  &:hover ${SongPostPlay} {\n    visibility: visible;\n  }\n`;\n\nexport const Input = styled.input`\n  height: 20px;\n  width: ${(props) => props.width || \"100px\"};\n  margin: 10px;\n`;\n\nexport const Form = styled.form`\n  border: solid black 1px;\n  width: ${(props) => (props.width ? `${props.width}px` : \"100%\")};\n`;\n\nexport const Label = styled.label`\n  margin: 0px 5px;\n`;\n\nexport const Select = styled.select`\n  margin: 10px;\n  height: 20px;\n  width: ${(props) => props.width || \"106px\"};\n`;\n\nexport const Option = styled.option`\n  font-size: 12px;\n`;\n\nexport const ProfilePic = styled.img`\n  src: ${(props) => props.src}\n  height: 260px;\n  width: 260px;\n  object-fit: cover;\n  padding: 10px;\n`;\n\nexport const ColorSquare = styled.div`\n  height: 24px;\n  width: 24px;\n  margin: 4px;\n  border: solid black 1px;\n  background-color: ${(props) => props.backgroundColor || \"white\"};\n`;\n\nexport const SelectableText = styled.p`\n  padding: 3px;\n  margin: 0;\n  cursor: pointer;\n  color: ${(props) => (props.selected ? \"white\" : \"black\")};\n  background-color: ${(props) => (props.selected ? \"black\" : \"white\")};\n  &:hover {\n    background-color: black;\n    color: white;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  height: 36px;\n  min-width: 36px;\n  margin: 8px;\n  padding: 0px 10px;\n  border-radius: 18px;\n  border: solid 1px black;\n  background-color: ${(props) => props.backgroundColor || \"white\"};\n  font-size: 16px;\n  box-shadow: 3px 3px 5px #bbb;\n  cursor: pointer;\n  &:hover {\n    background-color: black;\n    color: white;\n  }\n`;\n\nexport const PlayButton = styled(Button)`\n  width: 60px;\n  background-color: #0f0;\n  color: #fff;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const StopButton = styled(Button)`\n  width: 60px;\n  background-color: #f00;\n  color: #fff;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const MenuButton = styled.div`\n  margin: 8px;\n  border: solid 2px black;\n  border-radius: 5px;\n  padding: 6px 12px;\n  color: #000;\n  text-decoration: none;\n  cursor: pointer;\n  &:hover {\n    background-color: black;\n    color: white;\n  }\n`;\n\nexport const InstrumentBtn = styled.button`\n  height: 30px;\n  min-width: 40px;\n  margin: 8px;\n  padding: 0px 10px;\n  border-radius: 15px;\n  border: solid 1px black;\n  background-color: #fff;\n  font-size: 16px;\n  &:hover {\n    background-color: black;\n    color: white;\n  }\n`;\n\nexport const DeleteButton = styled.p`\n  line-height: 10px;\n  padding: 3px;\n  margin: 5px;\n  font-size: 25px;\n  color: red;\n  font-weight: bold;\n  cursor: pointer;\n  &:hover {\n    background-color: red;\n    color: white;\n  }\n`;\n\nconst IconButton = styled.button`\n  color: black;\n  backgroundcolor: white;\n  padding: 6px;\n  bordercolor: black;\n  border: 1px solid black;\n  border-radius: 50%;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const Row = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: ${(props) => props.flexDirection || \"column\"};\n  justify-content: center;\n  min-height: 20px;\n  align-items: ${(props) => props.alignItems || \"flex-start\"};\n  justify-content: ${(props) => props.justifyContent || \"center\"};\n  flex: ${(props) => props.flex || 1};\n`;\n\nexport const HeaderLayout = styled.div`\n  height: 90px;\n  width: 100vw;\n  z-index: 10;\n  background-color: white;\n  display: flex;\n  position: fixed;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 4px 4px 5px #eee;\n`;\n\nexport const BackHeader = styled.div`\n  height: 110px;\n`;\n\nexport const MainScreen = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: ${(props) => props.flexDirection || \"column\"};\n  align-items: ${(props) => props.alignItems || \"center\"};\n  justify-content: ${(props) => props.justifyContent || \"flex-start\"};\n  width: 100vw;\n  max-width: ${(props) => props.maxWidth || \"900px\"};\n  border-left: ${(props) =>\n    props.border === \"yes\" ? \"1px solid black\" : null};\n  border-right: ${(props) =>\n    props.border === \"yes\" ? \"1px solid black\" : null};\n`;\n\nexport const PageLayout = styled.div`\n  width: 90%;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flexStart;\n`;\n\nexport const BlankSpace = styled.div`\n  height: ${(props) => props.height || \"20px\"};\n`;\n","import styled from \"styled-components\";\n\nexport const Heading2 = styled.h2`\n  padding: 10px 0;\n  margin: 0 0 10px 0;\n`;\n\nexport const Heading3 = styled.h3`\n  padding: 10px 0;\n  margin: 0 0 4px 0;\n`;\n\nexport const SongHeader = styled.div`\n  margin-top: -32px;\n  padding: 0px 12px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const SongTitle = styled.p`\n  padding: 0px 10px;\n  background-color: white;\n  font-weight: ${(props) => (props.b ? \"bold\" : \"regular\")};\n  font-size: 12px;\n`;\n\nexport const LineLabel = styled.p`\n  font-size: 10px;\n  line-height: 10px;\n  width: 60px;\n`;\n\nexport const HeaderTitle = styled.h1`\n  padding: 0px 50px;\n  font-size: 56px;\n  text-shadow: 4px 4px #7799dd;\n`;\n\nexport const Alert = styled.p`\n  color: red;\n`;\n","import styled, { keyframes } from \"styled-components\";\n\nexport const MusicGrid = styled.div`\n  margin: 10px 20px;\n  padding-bottom: 10px;\n`;\n\nexport const Line = styled.div`\n  margin: 0;\n  display: flex;\n`;\n\nconst notesPlayingAnimation = keyframes`\n 0% { \n   height: 30px; \n   width: 30px;\n   margin: 3px; \n  }\n  20% { \n   height: 24px; \n   width: 24px;\n   margin: 6px; \n    }\n 30% { \n   height: 32px; \n    width: 32px;  \n    margin: 2px;\n}\n 100% { \n   height: 30px; \n   width: 30px;\n   margin: 3px; \n }\n`;\n\nexport const StyledNote = styled.div`\n  height: 30px;\n  width: 30px;\n  margin: 3px;\n  box-shadow: 3px 3px 5px ${(props) => props.color};\n  background-color: ${(props) => props.color};\n  opacity: ${(props) => (props.highlighted ? 0.7 : 1)};\n  cursor: pointer;\n  &:hover {\n    height: ${(props) => (props.clickable ? \"24px\" : \"30px\")};\n    width: ${(props) => (props.clickable ? \"24px\" : \"30px\")};\n    margin: ${(props) => (props.clickable ? \"6px\" : \"3px\")};\n  }\n  animation-name: ${(props) => props.animated && notesPlayingAnimation};\n  animation-duration: 0.8s;\n  animation-iteration-count: 1;\n`;\n\nexport const PageSquare = styled.div`\n  height: 8px;\n  width: 8px;\n  margin: 4px;\n  border: 2px solid black;\n  background-color: ${(props) => (props.selected ? \"black\" : \"white\")};\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { StyledNote } from \"../../ui-kit\";\n\nexport const Note = ({\n  notePosition,\n  status,\n  colors,\n  toggleActiveNote,\n  linePosition,\n  sounds,\n  highlighted,\n  animated,\n}) => {\n  const onNoteClick = () => {\n    toggleActiveNote(notePosition, linePosition, sounds);\n  };\n\n  const color = colors[status];\n\n  return (\n    <StyledNote\n      color={color}\n      highlighted={highlighted}\n      onClick={onNoteClick}\n      clickable={true}\n      animated={animated}\n    />\n  );\n};\n","import React from \"react\";\nimport { Note } from \"./Note\";\nimport { Line, LineLabel, DeleteButton } from \"../../ui-kit\";\n\nexport const CreateLine = ({\n  linePosition,\n  notes,\n  noteColors,\n  toggleActiveNote,\n  sounds,\n  highlightedNote,\n  label,\n  isDeleteLineVisible,\n  animatedNotes,\n  deleteLine,\n  currentPage,\n  lenghtOfPage,\n}) => {\n  const firstIndex = (currentPage - 1) * lenghtOfPage;\n  const lastIndex = currentPage * lenghtOfPage;\n\n  const displayNotes = notes.map((n, i) => {\n    if (i >= firstIndex && i < lastIndex) {\n      return (\n        <Note\n          key={i}\n          status={n}\n          notePosition={i}\n          colors={noteColors}\n          toggleActiveNote={toggleActiveNote}\n          linePosition={linePosition}\n          sounds={sounds}\n          highlighted={highlightedNote === i}\n          animated={animatedNotes.includes(i)}\n        />\n      );\n    }\n  });\n\n  return (\n    <Line>\n      <LineLabel>{label && label}</LineLabel>\n      {isDeleteLineVisible && (\n        <DeleteButton onClick={() => deleteLine(linePosition)}>x</DeleteButton>\n      )}\n      {displayNotes}\n    </Line>\n  );\n};\n","import React from \"react\";\nimport { Row, Column, PageSquare } from \"../../ui-kit\";\n\nexport const PageSquares = ({\n  currentPage,\n  selectPage,\n  pages,\n  clickable = true,\n}) => {\n  if (pages.length < 2) {\n    return null;\n  }\n\n  return (\n    <Row>\n      <Column flex={2}></Column>\n      <Column>\n        <Row>\n          {pages.map((el, i) => {\n            return (\n              <PageSquare\n                selected={currentPage === i + 1}\n                onClick={clickable ? () => selectPage(i + 1) : null}\n              />\n            );\n          })}\n        </Row>\n      </Column>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  PlayButton,\n  StopButton,\n  ControlsPad,\n  Tempo,\n} from \"../../ui-kit\";\n\nexport const PlayControls = ({\n  onPlayBtnPress,\n  onStopBtnPress,\n  isPlaying,\n  addOneBar,\n  removeOneBar,\n  isNotePlayedOnClick,\n  setIsNotePlayedOnClick,\n  tempo,\n  setTempo,\n  setTimeoutTempo,\n  numberOfBars,\n}) => {\n  const togglePlayOnClick = () => {\n    setIsNotePlayedOnClick(!isNotePlayedOnClick);\n  };\n\n  const onPlusTempoPress = () => {\n    setTempo(tempo + 5);\n    const calcTimeout = 60000 / tempo / 4;\n    setTimeoutTempo(calcTimeout);\n  };\n\n  const onMinusTempoPress = () => {\n    setTempo(tempo - 5);\n    const calcTimeout = 60000 / tempo / 4;\n    setTimeoutTempo(calcTimeout);\n  };\n\n  return (\n    <ControlsPad>\n      {isPlaying ? (\n        <StopButton onClick={onStopBtnPress}>[]</StopButton>\n      ) : (\n        <PlayButton onClick={onPlayBtnPress}>></PlayButton>\n      )}\n      <Button onClick={togglePlayOnClick}>\n        Play on click: {isNotePlayedOnClick ? \"yes\" : \"no\"}\n      </Button>\n      <Button onClick={removeOneBar}>-</Button>\n      <Tempo>Bars: {numberOfBars}</Tempo>\n      <Button onClick={addOneBar}>+</Button>\n      <Button onClick={onMinusTempoPress}>-</Button>\n      <Tempo>Tempo: {tempo}</Tempo>\n      <Button onClick={onPlusTempoPress}>+</Button>\n    </ControlsPad>\n  );\n};\n","import React from \"react\";\nimport { Button, ControlsPad } from \"../../ui-kit\";\nimport { Link } from \"react-router-dom\";\n\nexport const AdvControls = ({\n  toggleIsAddInstrumentVisible,\n  toggleIsSaveSongVisible,\n  toggleIsDeleteLineVisible,\n  user,\n}) => {\n  return (\n    <ControlsPad>\n      <Button onClick={toggleIsSaveSongVisible}>Save Song</Button>\n      {user && (\n        <Link to=\"/load-song\">\n          <Button>Load Song</Button>\n        </Link>\n      )}\n      <Button onClick={toggleIsAddInstrumentVisible}>Add Line</Button>\n      <Button onClick={toggleIsDeleteLineVisible}>Remove Line</Button>\n    </ControlsPad>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Bars } from \"svg-loaders-react\";\nimport { InstrumentBtn, ExpandedMenuItem } from \"../../ui-kit\";\nimport axios from \"axios\";\n\nexport const AddInstrument = ({\n  addInstrument,\n  toggleIsAddInstrumentVisible,\n}) => {\n  const [newInstruments, setNewInstruments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    const fetchInstrumentsData = async () => {\n      const { data } = await axios.get(\"/api/instrument\");\n      setNewInstruments(data);\n      setLoading(false);\n    };\n    fetchInstrumentsData();\n  }, []);\n\n  const handleClick = (inst) => {\n    addInstrument(inst);\n    toggleIsAddInstrumentVisible();\n  };\n\n  return (\n    <ExpandedMenuItem>\n      {loading && <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />}\n      {newInstruments.map((instrument) => {\n        return (\n          <InstrumentBtn\n            key={instrument.name}\n            onClick={() => handleClick(instrument)}>\n            {instrument.name}\n          </InstrumentBtn>\n        );\n      })}\n    </ExpandedMenuItem>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ExpandedMenuItem, Button, Input } from \"../../ui-kit\";\n\nexport const SaveSong = ({ saveTheSong, user, toggleIsSaveSongVisible }) => {\n  const [title, setTitle] = useState(\"\");\n\n  const handleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  return (\n    <ExpandedMenuItem>\n      {user ? (\n        <React.Fragment>\n          <p style={{ margin: 10 }}>\n            Name your song (if you modified an existing song, <br />\n            it will still be saved under as new one):\n          </p>\n          <Input\n            type=\"text\"\n            placeholder=\"Padapoum\"\n            value={title}\n            onChange={handleChange}\n          />\n          <div>\n            <Button onClick={() => saveTheSong(title)}>Save</Button>\n            <Button onClick={() => toggleIsSaveSongVisible()}>Cancel</Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <p style={{ margin: 10 }}>\n            To save a song, you need to have a profile, but let's do it! <br />\n            Please login or signup:\n          </p>\n\n          <div>\n            <Link to=\"/signup\">\n              <Button>Signup</Button>\n            </Link>\n            <Link to=\"/login\">\n              <Button>Login</Button>\n            </Link>\n          </div>\n        </React.Fragment>\n      )}\n    </ExpandedMenuItem>\n  );\n};\n","export const preparePartition = (instruments, length) => {\n  const partition = [];\n  instruments.forEach((el) => {\n    const emptyLine = [];\n    for (let i = 1; i <= length; i++) {\n      emptyLine.push(0);\n    }\n    partition.push(emptyLine);\n  });\n  return partition;\n};\n\nexport const prepareInstruments = (instruments) => {\n  const preparedInstruments = instruments.map((line) => {\n    const lineSounds = [];\n    const lineColors = [];\n    line.sounds.forEach((el) => {\n      if (el.url) {\n        lineSounds.push(new Audio(el.url));\n      } else {\n        lineSounds.push(null);\n      }\n      lineColors.push(el.color);\n    });\n    return {\n      id: line._id,\n      label: line.name,\n      colors: lineColors,\n      sounds: lineSounds,\n    };\n  });\n  return preparedInstruments;\n};\n\nexport const prepareOneInstrument = (instrument) => {\n  const lineSounds = [];\n  const lineColors = [];\n  instrument.sounds.forEach((el) => {\n    if (el.url) {\n      lineSounds.push(new Audio(el.url));\n    } else {\n      lineSounds.push(null);\n    }\n    lineColors.push(el.color);\n  });\n  return {\n    id: instrument._id,\n    label: instrument.name,\n    colors: lineColors,\n    sounds: lineSounds,\n  };\n};\n","/* Plays one beat of the music, \neach note of the beat being the note on each line corresponding \nto the selected index */\nexport const playBeat = (lines, partition, beatNumber) => {\n  partition.forEach((partitionLine, i) => {\n    if (partitionLine[beatNumber]) {\n      const soundIndex = partitionLine[beatNumber];\n      lines[i].sounds.forEach((el) => {\n        if (el) {\n          el.pause();\n          el.currentTime = 0;\n        }\n      });\n      lines[i].sounds[soundIndex].play();\n    }\n  });\n};\n","const SOUND_CATEGORIES = [\n  \"default\",\n  \"Drums\",\n  \"Bass\",\n  \"Synth\",\n  \"Guitar\",\n  \"Ambiant\",\n  \"Voice\",\n  \"Other\",\n];\n\nconst SUB_CATEGORIES = {\n  \"\": [\"\"],\n  default: [\"\"],\n  Drums: [\n    \"\",\n    \"Kick\",\n    \"Snare\",\n    \"Tom\",\n    \"Hi-hat\",\n    \"Cymbal\",\n    \"Vinnyl\",\n    \"Percussion\",\n    \"Clang\",\n    \"Other\",\n  ],\n  Bass: [\"\", \"Acoustic\", \"Fretless\", \"Electric\", \"Picked\", \"Synth\"],\n  Synth: [\"\"],\n  Guitar: [\"\", \"Acoustic\", \"Clean\", \"Overdrive\", \"Distorsion\"],\n  Ambiant: [\"\"],\n  Voice: [\"\", \"Hi-sing\", \"Mid-sing\", \"Low-sing\", \"Talk\", \"Noize\"],\n  Other: [\"\"],\n};\n\nexport const getSubCategories = (category) => {\n  return SUB_CATEGORIES[category];\n};\n\nexport const getCategories = () => {\n  return SOUND_CATEGORIES;\n};\n","import React from \"react\";\nimport { CreateLine } from \"./CreateLine\";\nimport { MusicGrid, ExpandedMenuItem } from \"../../ui-kit\";\nimport { PageSquares } from \"../Shared/PageSquares\";\nimport { PlayControls } from \"./PlayControls\";\nimport { AdvControls } from \"./AdvControls\";\nimport { AddInstrument } from \"./AddInstrument\";\nimport { SaveSong } from \"./SaveSong\";\nimport {\n  playBeat,\n  preparePartition,\n  prepareInstruments,\n  prepareOneInstrument,\n} from \"../utils\";\nimport axios from \"axios\";\n\nconst START_PARTITION_LENGTH = 8;\nconst MAX_PARTITION_LENGTH = 50;\nconst DEFAULT_TEMPO = 120;\nconst DEFAULT_TIMEOUT = 60000 / 120 / 4;\nconst LENGTH_OF_PAGE = 16;\n\nexport class CreateSong extends React.Component {\n  state = {\n    partition: [],\n    isPlaying: false,\n    musicPlaying: null,\n    highlightedNote: [-1],\n    animatedNotes: [],\n    musicLines: [],\n    tempo: DEFAULT_TEMPO,\n    timeoutTempo: DEFAULT_TIMEOUT,\n    isNotePlayedOnClick: true,\n    isAddInstrumentVisible: false,\n    isSaveSongVisible: false,\n    bottomMessage: \"\",\n    isDeleteLineVisible: false,\n    currentPage: 1,\n    pages: [1],\n  };\n\n  componentWillUnmount() {\n    this.stopPlaying();\n  }\n\n  componentDidMount() {\n    const prepareNewMusic = async () => {\n      const { data } = await axios.get(\"/api/instrument/starter\");\n      const musicLines = prepareInstruments(data);\n      const newPartition = preparePartition(musicLines, START_PARTITION_LENGTH);\n      this.setState({ musicLines, partition: newPartition });\n    };\n\n    const prepareLoadedSong = async () => {\n      const songId = this.props.match.params.id;\n      const { data: loadedSong } = await axios.get(`/api/song/${songId}`);\n      const newInstruments = [...loadedSong.instruments];\n      const musicLines = prepareInstruments(newInstruments);\n      this.setState({\n        musicLines,\n        partition: loadedSong.partition,\n        tempo: loadedSong.tempo,\n        timeoutTempo: 60000 / loadedSong.tempo / 4,\n      });\n    };\n\n    if (\n      this.props &&\n      this.props.match &&\n      this.props.match.params &&\n      this.props.match.params.id\n    ) {\n      prepareLoadedSong();\n    } else {\n      prepareNewMusic();\n    }\n  }\n\n  addInstrument = (instr) => {\n    const length = this.state.partition[0] ? this.state.partition[0].length : 8;\n    const newPartitionRow = [];\n    for (let i = 1; i <= length; i++) {\n      newPartitionRow.push(0);\n    }\n    const newPartition = [...this.state.partition];\n    const newMusicLines = [...this.state.musicLines];\n    const preparedNewInstrument = prepareOneInstrument(instr);\n    newMusicLines.push(preparedNewInstrument);\n    newPartition.push(newPartitionRow);\n    this.setState({\n      musicLines: newMusicLines,\n      partition: newPartition,\n    });\n  };\n\n  toggleActiveNote = (col, row, sounds) => {\n    const updatedPartition = [...this.state.partition];\n    const depth = sounds.length;\n    const newIndex = (updatedPartition[row][col] + 1) % depth;\n    updatedPartition[row][col] = newIndex;\n    if (sounds[newIndex] && this.state.isNotePlayedOnClick) {\n      sounds[newIndex].play();\n    }\n    this.setState({ partition: updatedPartition });\n  };\n\n  playMusic = (musicLines, partition, tempo) => {\n    this.setState({ isPlaying: true, currentPage: 1 });\n    let counter = 0;\n    this.setState({\n      musicPlaying: setInterval(() => {\n        this.setState({\n          highlightedNote: counter,\n          animatedNotes: [counter - 1, counter, counter + 1],\n        });\n        playBeat(musicLines, partition, counter);\n        counter++;\n        if (counter >= partition[0].length) {\n          counter = 0;\n        }\n        if (\n          counter > this.state.currentPage * LENGTH_OF_PAGE ||\n          counter === 0\n        ) {\n          this.nextPage();\n        }\n      }, tempo),\n    });\n  };\n\n  stopPlaying = () => {\n    this.setState({ isPlaying: false });\n    clearInterval(this.state.musicPlaying);\n  };\n\n  onStopBtnPress = () => {\n    this.stopPlaying();\n  };\n\n  onPlayBtnPress = () => {\n    this.playMusic(\n      this.state.musicLines,\n      this.state.partition,\n      this.state.timeoutTempo\n    );\n  };\n\n  saveTheSong = async (title) => {\n    const songInstruments = this.state.musicLines.map((el) => {\n      return el.id;\n    });\n    const songData = {\n      title,\n      partition: this.state.partition,\n      tempo: this.state.tempo,\n      instruments: songInstruments,\n      creator: this.props.user._id || \"anonymous\",\n      creatorName: this.props.user.username || \"anonymous\",\n      posted: true,\n    };\n    await axios.post(\"api/song/\", songData);\n    this.setState({\n      isSaveSongVisible: false,\n      bottomMessage: `New song \"${title}\" successfully saved!`,\n    });\n    setTimeout(() => {\n      this.setState({ bottomMessage: \"\" });\n    }, 1500);\n  };\n\n  addOneBar = () => {\n    if (\n      this.state.partition.length &&\n      this.state.partition[0].length < MAX_PARTITION_LENGTH\n    ) {\n      const updatedPartition = [...this.state.partition];\n      updatedPartition.forEach((el) => {\n        el.push(0);\n      });\n      const p = this.state.pages.length;\n      const pagesCalc = Math.ceil(updatedPartition[0].length / LENGTH_OF_PAGE);\n      const pagesUpdate =\n        p < pagesCalc ? this.state.pages.concat([1]) : this.state.pages;\n      this.setState({ partition: updatedPartition, pages: pagesUpdate });\n    }\n  };\n\n  removeOneBar = () => {\n    const updatedPartition = [...this.state.partition];\n    const last = updatedPartition[0].length - 1;\n    updatedPartition.forEach((el) => {\n      el.splice(last, 1);\n    });\n    const p = this.state.pages.length;\n    const pagesCalc = Math.ceil(updatedPartition[0].length / LENGTH_OF_PAGE);\n    const pagesUpdate =\n      p > pagesCalc ? this.state.pages.slice(0, p - 1) : this.state.pages;\n    this.setState({ partition: updatedPartition, pages: pagesUpdate });\n  };\n\n  deleteLine = (lineNumber) => {\n    const updatedPartition = [...this.state.partition];\n    const updatedInstruments = [...this.state.musicLines];\n    updatedPartition.splice(lineNumber, 1);\n    updatedInstruments.splice(lineNumber, 1);\n    this.setState({\n      partition: updatedPartition,\n      musicLines: updatedInstruments,\n    });\n    this.toggleIsDeleteLineVisible();\n  };\n\n  selectPage = (pageNumber) => {\n    this.setState({ currentPage: pageNumber });\n  };\n\n  nextPage = () => {\n    const current = this.state.currentPage;\n    const total = this.state.pages.length;\n    const nextPage = current >= total ? 1 : this.state.currentPage + 1;\n    this.setState({ currentPage: nextPage });\n  };\n\n  setIsNotePlayedOnClick = (value) => {\n    this.setState({ isNotePlayedOnClick: value });\n  };\n\n  setTempo = (value) => {\n    this.setState({ tempo: value });\n  };\n\n  setTimeoutTempo = (value) => {\n    this.setState({ timeoutTempo: value });\n  };\n\n  toggleIsAddInstrumentVisible = () => {\n    this.setState({\n      isAddInstrumentVisible: !this.state.isAddInstrumentVisible,\n    });\n  };\n\n  toggleIsSaveSongVisible = () => {\n    this.setState({\n      isSaveSongVisible: !this.state.isSaveSongVisible,\n    });\n  };\n\n  toggleIsDeleteLineVisible = () => {\n    this.setState({\n      isDeleteLineVisible: !this.state.isDeleteLineVisible,\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.isAddInstrumentVisible && (\n          <AddInstrument\n            addInstrument={this.addInstrument}\n            toggleIsAddInstrumentVisible={this.toggleIsAddInstrumentVisible}\n          />\n        )}\n        {this.state.isSaveSongVisible && (\n          <SaveSong\n            saveTheSong={this.saveTheSong}\n            toggleIsSaveSongVisible={this.toggleIsSaveSongVisible}\n            user={this.props.user}\n          />\n        )}\n        {this.state.bottomMessage && (\n          <ExpandedMenuItem>\n            <p>{this.state.bottomMessage}</p>\n          </ExpandedMenuItem>\n        )}\n        <PageSquares\n          pages={this.state.pages}\n          selectPage={this.selectPage}\n          currentPage={this.state.currentPage}\n        />\n        <MusicGrid>\n          {this.state.musicLines &&\n            this.state.musicLines.map((line, i) => {\n              return (\n                <CreateLine\n                  key={i}\n                  linePosition={i}\n                  label={line.label}\n                  notes={this.state.partition[i]}\n                  noteColors={line.colors}\n                  toggleActiveNote={this.toggleActiveNote}\n                  sounds={line.sounds}\n                  highlightedNote={this.state.highlightedNote}\n                  animatedNotes={this.state.animatedNotes}\n                  isDeleteLineVisible={this.state.isDeleteLineVisible}\n                  deleteLine={this.deleteLine}\n                  currentPage={this.state.currentPage}\n                  lenghtOfPage={LENGTH_OF_PAGE}\n                />\n              );\n            })}\n        </MusicGrid>\n        <PlayControls\n          onPlayBtnPress={this.onPlayBtnPress}\n          onStopBtnPress={this.onStopBtnPress}\n          addOneBar={this.addOneBar}\n          removeOneBar={this.removeOneBar}\n          isPlaying={this.state.isPlaying}\n          tempo={this.state.tempo}\n          setTempo={this.setTempo}\n          setTimeoutTempo={this.setTimeoutTempo}\n          numberOfBars={\n            this.state.partition[0] ? this.state.partition[0].length : 0\n          }\n          isNotePlayedOnClick={this.state.isNotePlayedOnClick}\n          setIsNotePlayedOnClick={this.setIsNotePlayedOnClick}\n        />\n        <AdvControls\n          toggleIsAddInstrumentVisible={this.toggleIsAddInstrumentVisible}\n          toggleIsSaveSongVisible={this.toggleIsSaveSongVisible}\n          toggleIsDeleteLineVisible={this.toggleIsDeleteLineVisible}\n          user={this.props.user}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport { StyledNote } from \"../../ui-kit\";\n\nexport const Note = ({ status, colors, highlighted, isAnimated }) => {\n  const color = colors[status];\n\n  return (\n    <StyledNote\n      color={color}\n      highlighted={highlighted}\n      animated={isAnimated}\n    />\n  );\n};\n","import React from \"react\";\nimport { Note } from \"./Note\";\nimport { Line } from \"../../ui-kit\";\n\nexport const DisplayLine = ({\n  notes,\n  noteColors,\n  highlightedNote,\n  animatedNotes,\n  lengthOfPage,\n  currentPage,\n}) => {\n  const firstIndex = (currentPage - 1) * lengthOfPage;\n  const lastIndex = currentPage * lengthOfPage;\n\n  const displayNotes = notes.map((n, i) => {\n    console.log('FIRST LAST CURRENT', firstIndex, lastIndex, i)\n    if (i >= firstIndex && i < lastIndex) {\n      return (\n        <Note\n          key={i}\n          status={n}\n          colors={noteColors}\n          highlighted={highlightedNote === i}\n          isAnimated={animatedNotes.includes(i)}\n        />\n      );\n    }\n  });\n\n  return <Line>{displayNotes}</Line>;\n};\n","import React from \"react\";\nimport { DisplayLine } from \"./DisplayLine\";\nimport { PageSquares } from \"../Shared/PageSquares\";\nimport { playBeat } from \"../utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStop } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  MusicGrid,\n  SongPost,\n  SongPostPlay,\n  SongHeader,\n  SongTitle,\n  Row,\n} from \"../../ui-kit\";\n\nconst LENGTH_OF_PAGE = 16;\n\nconst iconsStyle = {\n  width: 40,\n  height: 40,\n  padding: \"10px 30px\",\n  border: \"solid 1px rgba(0, 0, 0, 0.7)\",\n  color: \"rgba(0, 0, 0, 0.7)\",\n  backgroundColor: \"rgba(50, 50, 50, 0.2)\",\n  borderRadius: 5,\n  zIndex: 5,\n};\n\nexport class DisplaySong extends React.Component {\n  state = {\n    isPlaying: false,\n    musicPlaying: null,\n    highlightedNote: -1,\n    animatedNotes: [-1, -1, -1],\n    timeoutTempo: 60000 / this.props.tempo / 4,\n    currentPage: 1,\n    pages: [1],\n  };\n\n  componentDidMount() {\n    const updatedPages = [];\n    const numberOfPages = Math.ceil(\n      this.props.partition[0].length / LENGTH_OF_PAGE\n    );\n    for (let i = 1; i <= numberOfPages; i++) {\n      updatedPages.push(1);\n    }\n    this.setState({ pages: updatedPages });\n  }\n\n  componentWillUnmount() {\n    this.stopPlaying();\n  }\n\n  playMusic = (musicLines, partition, tempo) => {\n    this.setState({ isPlaying: true, currentPage: 1 });\n    let counter = 0;\n    this.setState({\n      musicPlaying: setInterval(() => {\n        this.setState({\n          highlightedNote: counter,\n          animatedNotes: [counter - 1, counter, counter + 1],\n        });\n        playBeat(musicLines, partition, counter);\n        counter++;\n        if (counter >= partition[0].length) {\n          counter = 0;\n        }\n        if (\n          counter > this.state.currentPage * LENGTH_OF_PAGE ||\n          counter === 0\n        ) {\n          this.nextPage();\n        }\n      }, tempo),\n    });\n  };\n\n  stopPlaying = () => {\n    this.setState({ isPlaying: false });\n    clearInterval(this.state.musicPlaying);\n  };\n\n  nextPage = () => {\n    const current = this.state.currentPage;\n    const total = this.state.pages.length;\n    const nextPage = current >= total ? 1 : this.state.currentPage + 1;\n    this.setState({ currentPage: nextPage });\n  };\n\n  onSongClick = () => {\n    if (this.state.isPlaying) {\n      this.stopPlaying();\n    } else {\n      this.playMusic(\n        this.props.musicLines,\n        this.props.partition,\n        this.state.timeoutTempo\n      );\n    }\n  };\n\n  render() {\n    return (\n      <SongPost>\n        <SongPostPlay onClick={this.onSongClick}>\n          {this.state.isPlaying ? (\n            <FontAwesomeIcon icon={faStop} color=\"black\" style={iconsStyle} />\n          ) : (\n            <FontAwesomeIcon icon={faPlay} color=\"black\" style={iconsStyle} />\n          )}\n        </SongPostPlay>\n        <SongHeader>\n          <SongTitle b={true}>{this.props.title}</SongTitle>\n          <SongTitle>by {this.props.creatorName}</SongTitle>\n        </SongHeader>\n        <Row>\n          <PageSquares\n            pages={this.state.pages}\n            selectPage={this.selectPage}\n            currentPage={this.state.currentPage}\n            clickable={false}\n          />\n        </Row>\n        <MusicGrid>\n          {this.props.musicLines.map((line, i) => {\n            return (\n              <DisplayLine\n                key={i}\n                linePosition={i}\n                notes={this.props.partition[i]}\n                noteColors={line.colors}\n                sounds={line.sounds}\n                lengthOfPage={LENGTH_OF_PAGE}\n                currentPage={this.state.currentPage}\n                highlightedNote={this.state.highlightedNote}\n                animatedNotes={this.state.animatedNotes}\n              />\n            );\n          })}\n        </MusicGrid>\n      </SongPost>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Bars } from \"svg-loaders-react\";\nimport axios from \"axios\";\nimport { DisplaySong } from \"./DisplaySong\";\nimport { prepareInstruments } from \"../utils/instruments\";\nimport { BlankSpace } from \"../../ui-kit\";\n\nexport const SongsList = () => {\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [message, setMessage] = useState(\"\");\n\n  const loadSongs = async () => {\n    setLoading(true);\n    const { data: loadedSongs } = await axios.get(\n      `/api/song/posted/${currentPage}`,\n      {\n        page: 1,\n      }\n    );\n    if (!loadedSongs.length) {\n      setMessage(\"no more songs to load...\");\n      setLoading(false);\n      setTimeout(() => {\n        setMessage(\"\");\n      }, 2000);\n      return;\n    }\n    loadedSongs.forEach((song) => {\n      const preparedInstruments = prepareInstruments(song.instruments);\n      song.instruments = preparedInstruments;\n    });\n    setSongs([...songs, ...loadedSongs]);\n    setLoading(false);\n    setCurrentPage(currentPage + 1);\n  };\n\n  useEffect(() => {\n    loadSongs();\n  }, []);\n\n  const loadMore = () => {\n    loadSongs();\n  };\n\n  return (\n    <React.Fragment>\n      {songs.map((song) => {\n        return (\n          <DisplaySong\n            title={song.title}\n            partition={song.partition}\n            musicLines={song.instruments}\n            tempo={song.tempo}\n            creatorName={song.creatorName}\n          />\n        );\n      })}\n      {loading ? (\n        <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />\n      ) : message ? (\n        <p>{message}</p>\n      ) : (\n        <p onClick={loadMore}>loadMore</p>\n      )}\n      <BlankSpace height=\"100px\" />\n    </React.Fragment>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Bars } from \"svg-loaders-react\";\nimport { PageLayout, SelectableText, Button, Heading2, Column } from \"../../ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport const LoadSong = (props) => {\n  const [songsList, setSongsList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  const fetchData = async () => {\n    setLoading(true);\n    const { data } = await axios.get(`/api/song/creator/${props.user._id}`);\n    if (data) {\n      setSongsList(data);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const deleteSong = async (songId) => {\n    const response = await axios.delete(`/api/song/${songId}`);\n    setMessage(response.message);\n    fetchData();\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 1500);\n  };\n\n  return (\n    <PageLayout>\n      <Heading2>Load Song</Heading2>\n      {loading && (\n        <Column alignItems=\"center\">\n          <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />\n        </Column>\n      )}\n      {songsList.map((el) => {\n        return (\n          <SelectableText\n            key={el._id}\n            selected={selectedSong === el._id}\n            onClick={() => {\n              setSelectedSong(el._id);\n            }}>\n            {el.title}\n          </SelectableText>\n        );\n      })}\n      <div>{message && <p>{message}</p>}</div>\n      {selectedSong && (\n        <div style={{ paddingTop: 20 }}>\n          <Link to={`song/${selectedSong}`}>\n            <Button>Load</Button>\n          </Link>\n          <Button onClick={() => deleteSong(selectedSong)}>Delete</Button>\n          <Link to={\"/\"}>\n            <Button>Cancel</Button>\n          </Link>\n        </div>\n      )}\n    </PageLayout>\n  );\n};\n","import axios from \"axios\";\n\nexport const signup = (username, password) => {\n  console.log(username, password);\n  return axios\n    .post(\"/api/auth/signup\", { username, password })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((err) => {\n      return err.response.data;\n    });\n};\n\nexport const login = (username, password) => {\n  console.log(username, password);\n  return axios\n    .post(\"/api/auth/login\", { username, password })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((err) => {\n      return err.response.data;\n    });\n};\n\nexport const logout = () => {\n  return axios\n    .delete(\"/api/auth/logout\")\n    .then((response) => {\n      return response.data;\n    })\n    .catch((err) => {\n      return err.response.data;\n    });\n};\n","import React, { useState } from \"react\";\nimport { login } from \"./utils\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Input,\n  Button,\n  PageLayout,\n  Label,\n  Row,\n  Column,\n  Alert,\n  Heading2,\n  BlankSpace,\n} from \"../../ui-kit\";\n\nexport const Login = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const linkStyle = {\n    textDecoration: \"none\",\n    color: \"black\",\n  };\n\n  const handleLogin = async () => {\n    const data = await login(username, password);\n    if (data.message) {\n      setMessage(data.message);\n    } else {\n      props.setUser(data);\n      props.history.push(\"/\");\n    }\n  };\n\n  const handleChange = (e) => {\n    if (e.target.name === \"username\") {\n      setUsername(e.target.value);\n    }\n    if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  return (\n    <PageLayout>\n      <Row>\n        <Column />\n        <Column flex={1}>\n          <Heading2>Login</Heading2>\n          <Row>\n            <Column>\n              <Label htmlFor=\"username\">Username:</Label>\n            </Column>\n            <Column flex={2}>\n              <Input\n                type=\"text\"\n                name=\"username\"\n                width={\"100%\"}\n                id=\"username\"\n                value={username}\n                onChange={handleChange}\n              />\n            </Column>\n          </Row>\n          <Row>\n            <Column flex={1}>\n              <Label htmlFor=\"password\">Password:</Label>\n            </Column>\n            <Column flex={2}>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                width={\"100%\"}\n                id=\"password\"\n                value={password}\n                onChange={handleChange}\n              />\n            </Column>\n          </Row>\n          <BlankSpace />\n          <Row>\n            <Column alignItems={\"center\"}>\n              {message && <Alert>{message}</Alert>}\n              <Button onClick={handleLogin}>Login</Button>\n              <p>No profile yet?</p>\n              <Link to=\"/signup\" style={linkStyle}>\n                signup\n              </Link>\n            </Column>\n          </Row>\n        </Column>\n        <Column />\n      </Row>\n    </PageLayout>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  Input,\n  Button,\n  Label,\n  Row,\n  Column,\n  Alert,\n  PageLayout,\n  BlankSpace,\n  Heading2,\n} from \"../../ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport { signup } from \"./utils\";\n\nexport const Signup = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const linkStyle = {\n    textDecoration: \"none\",\n    color: \"black\",\n  };\n\n  const handleSignup = async (e) => {\n    const data = await signup(username, password);\n    if (data.message) {\n      setMessage(data.message);\n    } else {\n      props.setUser(data);\n      props.history.push(\"/\");\n    }\n  };\n\n  const handleChange = (e) => {\n    if (e.target.name === \"username\") {\n      setUsername(e.target.value);\n    }\n    if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  return (\n    <PageLayout>\n      <Row>\n        <Column />\n        <Column flex={1}>\n          <Heading2>Signup</Heading2>\n          <Row>\n            <Column>\n              <Label htmlFor=\"username\">Username:</Label>\n            </Column>\n            <Column flex={2}>\n              <Input\n                type=\"text\"\n                name=\"username\"\n                width={\"100%\"}\n                id=\"username\"\n                value={username}\n                onChange={handleChange}\n              />\n            </Column>\n          </Row>\n          <Row>\n            <Column flex={1}>\n              <Label htmlFor=\"password\">Password:</Label>\n            </Column>\n            <Column flex={2}>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                width={\"100%\"}\n                id=\"password\"\n                value={password}\n                onChange={handleChange}\n              />\n            </Column>\n          </Row>\n          <BlankSpace />\n          <Row>\n            <Column alignItems={\"center\"}>\n              {message && <Alert>{message}</Alert>}\n              <Button onClick={handleSignup}>Submit</Button>\n              <p>Already have a profile?</p>\n              <Link to=\"/login\" style={linkStyle}>\n                login\n              </Link>\n            </Column>\n          </Row>\n        </Column>\n        <Column />\n      </Row>\n    </PageLayout>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"./utils\";\nimport { Row, Column, Button, PageLayout, ProfilePic, Heading2 } from \"../../ui-kit\";\n\nexport const Profile = (props) => {\n  const [message, setMessage] = useState(\"\");\n\n  const onLogoutBtnClick = async () => {\n    await logout();\n    props.setUser(null);\n    props.history.push(\"/\");\n  };\n\n  const onCreateInstrumentBtnClick = () => {\n    setMessage(\"Coming soon, stay tuned...\");\n    setInterval(() => {\n      setMessage(\"\");\n    }, 2000);\n  };\n\n  if (!props.user) {\n    return (\n      <PageLayout>\n        <Heading2>No Profile...</Heading2>\n        <Row>\n          <Column>Please login or signup to access the profile page</Column>\n        </Row>\n      </PageLayout>\n    );\n  }\n\n  return (\n    <PageLayout>\n      <Row>\n        <Column>\n          <Heading2>Profile</Heading2>\n        </Column>\n      </Row>\n      <Row>\n        <Column flex={2}>\n          <ProfilePic\n            src={\n              \"https://images.unsplash.com/photo-1502377429547-835a416e4a90?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=667&q=80\"\n            }\n          />\n        </Column>\n        <Column justifyContent=\"flex-start\" flex={3}>\n          <h3>Hello, {props.user.username}</h3>\n          <p>Are you ready to create some funky beats today?</p>\n          <Row>\n            <Link to=\"/load-song\">\n              <Button>Load Song</Button>\n            </Link>\n            <Button onClick={onCreateInstrumentBtnClick}>\n              Create Instrument\n            </Button>\n            <Button onClick={onLogoutBtnClick}>Logout</Button>\n          </Row>\n          <Row>\n            <Column>{message && <p>{message}</p>}</Column>\n          </Row>\n        </Column>\n      </Row>\n    </PageLayout>\n  );\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const ProtectedRoute = ({ component: Component, user, ...rest }) => {\n  return (\n    <Route\n      user={user}\n      {...rest}\n      render={(props) => {\n        if (user) {\n          return <Component user={user} {...rest} {...props} />;\n        } else {\n          return <Redirect to=\"/\" />;\n        }\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport { getCategories, getSubCategories } from \"../utils\";\nimport { Row, Column, Input, Select, Option } from \"../../ui-kit\";\n\nexport const Characteristics = ({\n  name,\n  setName,\n  category,\n  setCategory,\n  subCategory,\n  setSubCategory,\n}) => {\n  const instrumentCategories = getCategories();\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Column flex={1}>Name:</Column>\n        <Column justifyContent=\"flex-start\" flex={2}>\n          <Input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Column>\n      </Row>\n      <Row>\n        <Column flex={1}>Category:</Column>\n        <Column justifyContent=\"flex-start\" flex={2}>\n          <Select\n            name=\"category\"\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}>\n            {instrumentCategories.map((cat, i) => {\n              return (\n                <Option key={i} value={cat}>\n                  {cat !== \"default\" && cat}\n                </Option>\n              );\n            })}\n          </Select>\n        </Column>\n      </Row>\n      <Row>\n        <Column flex={1}>Sub-category:</Column>\n        <Column justifyContent=\"flex-start\" flex={2}>\n          <Select\n            name=\"sub-category\"\n            value={subCategory}\n            onChange={(e) => setSubCategory(e.target.value)}>\n            {getSubCategories(category).map((subCat, i) => {\n              return (\n                <Option key={i} value={subCat}>\n                  {subCat}\n                </Option>\n              );\n            })}\n          </Select>\n        </Column>\n      </Row>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { Row, Column, ColorSquare, Button } from \"../../ui-kit\";\n\nexport const InstrumentSoundsList = ({ sounds, addSound }) => {\n  const playSound = (url) => {\n    new Audio(url).play();\n  };\n\n  return (\n    <React.Fragment>\n      {sounds &&\n        sounds.map((el, i) => {\n          return (\n            <Row key={i}>\n              <Column>\n                <p style={{ margin: 0, padding: \"5px 0\" }}>\n                  {i === 0 ? \"Default\" : `${i}`}\n                </p>\n              </Column>\n              <Column>\n                <ColorSquare backgroundColor={el.color} />\n              </Column>\n              <Column flex={5}>\n                {el.url ? (\n                  <Button onClick={() => playSound(el.url)}>{el.name}</Button>\n                ) : (\n                  <p style={{ margin: 0, padding: \"5px 18px\" }}>No sound</p>\n                )}\n              </Column>\n            </Row>\n          );\n        })}\n      <Row>\n        <Column flex={2}></Column>\n        <Column justifyContent=\"flex-start\" flex={5}>\n          <Button backgroundColor=\"#0f0\" onClick={addSound}>\n            Add Sound\n          </Button>\n        </Column>\n      </Row>\n    </React.Fragment>\n  );\n};\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { Bars } from \"svg-loaders-react\";\nimport { getCategories, getSubCategories } from \"../utils\";\nimport {\n  Row,\n  Column,\n  SelectableText,\n  Heading3,\n  Select,\n  Option,\n  Input,\n} from \"../../ui-kit\";\n\nexport const AvailableSoundsList = ({\n  loading,\n  availableSounds,\n  selectedSound,\n  selectSound,\n}) => {\n  const [filterName, setFilterName] = useState(\"\");\n  const [filterCategory, setFilterCategory] = useState(\"default\");\n  const [filterSubCategory, setFilterSubCategory] = useState(\"\");\n\n  const filteredSounds = availableSounds.filter((sound) => {\n    return (\n      (!filterName ||\n        sound.name\n          .toLocaleLowerCase()\n          .includes(filterName.toLocaleLowerCase())) &&\n      (filterCategory === \"default\" || filterCategory === sound.category) &&\n      (!filterSubCategory || filterSubCategory === sound.subCategory)\n    );\n  });\n\n  const volumeBtnStyle = {\n    margin: 2,\n    color: \"black\",\n    backgroundColor: \"white\",\n    padding: 6,\n    borderColor: \"black\",\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n  };\n\n  const soundCategories = getCategories();\n\n  if (loading) {\n    return (\n      <Column alignItems=\"center\">\n        <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />\n      </Column>\n    );\n  }\n  return (\n    <React.Fragment>\n      <Row>\n        <Column></Column>\n        <Column flex={3}>\n          <Heading3>Name</Heading3>\n          <Input\n            type=\"text\"\n            value={filterName}\n            placeholder=\"Search...\"\n            onChange={(e) => setFilterName(e.target.value)}\n          />\n        </Column>\n        <Column flex={2}>\n          <Heading3>Category</Heading3>\n          <Select\n            name=\"category\"\n            value={filterCategory}\n            onChange={(e) => setFilterCategory(e.target.value)}>\n            {soundCategories.map((cat, i) => {\n              return (\n                <Option key={i} value={cat}>\n                  {cat === \"default\" ? \"all\" : cat}\n                </Option>\n              );\n            })}\n          </Select>\n        </Column>\n        <Column flex={2}>\n          <Heading3>Sub-cat.</Heading3>\n          <Select\n            name=\"sub-category\"\n            value={filterSubCategory}\n            onChange={(e) => setFilterSubCategory(e.target.value)}>\n            {getSubCategories(filterCategory).map((subCat, i) => {\n              return (\n                <Option key={i} value={subCat}>\n                  {subCat || \"all\"}\n                </Option>\n              );\n            })}\n          </Select>\n        </Column>\n      </Row>\n      {filteredSounds.map((el) => {\n        const playSound = () => {\n          return new Audio(el.url).play();\n        };\n        return (\n          <Row key={el._id}>\n            <Column>\n              <FontAwesomeIcon\n                icon={faVolumeUp}\n                style={volumeBtnStyle}\n                onClick={playSound}\n              />\n            </Column>\n            <Column flex={3}>\n              <SelectableText\n                selected={selectedSound && selectedSound.url === el.url}\n                onClick={() => selectSound(el)}>\n                {el.name}\n              </SelectableText>\n            </Column>\n            <Column flex={2}>\n              <SelectableText\n                selected={selectedSound && selectedSound.url === el.url}\n                onClick={() => selectSound(el)}>\n                {el.category}\n              </SelectableText>\n            </Column>\n            <Column flex={2}>\n              <SelectableText\n                selected={selectedSound && selectedSound.url === el.url}\n                onClick={() => selectSound(el)}>\n                {el.subCategory}\n              </SelectableText>\n            </Column>\n          </Row>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { getCategories, getSubCategories } from \"../utils\";\nimport { Row, Column, Input, Button, Select, Option } from \"../../ui-kit\";\n\nexport const CreateSound = ({ setView, fetchData }) => {\n  const [soundName, setSoundName] = useState(\"\");\n  const [soundCategory, setSoundCategory] = useState(\"\");\n  const [soundSubCategory, setSoundSubCategory] = useState(\"\");\n  const [soundFile, setSoundFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  const fileSelectorHandler = (event) => {\n    const selectedFile = event.target.files[0];\n    setSoundFile(selectedFile);\n  };\n\n  const uploadSound = async () => {\n    if (!soundName || !soundCategory || !soundSubCategory) {\n      displayMessage(\"Please chose a name and select categories\");\n      return;\n    } else if (soundName.length < 5) {\n      displayMessage(\"The sound name must be at least 5 char.\");\n    } else if (!soundFile) {\n      displayMessage(\"please select a file to upload\");\n      return;\n    }\n    const uploadData = new FormData();\n    uploadData.append(\"sounds\", soundFile);\n    const uploadedSound = await axios.post(\"/api/sound/upload\", uploadData);\n    const createdSound = await axios.post(\"/api/sound\", {\n      name: soundName,\n      category: soundCategory,\n      subCategory: soundSubCategory,\n      pitch: \"\",\n      url: uploadedSound.data.secure_url,\n    });\n    if (createdSound.message) {\n      displayMessage(createdSound.message);\n      return;\n    }\n    setView(\"ADD\");\n    fetchData();\n  };\n\n  const soundCategories = getCategories();\n\n  const displayMessage = (mes) => {\n    setMessage(mes);\n    setInterval(() => {\n      setMessage(\"\");\n    }, 3000);\n  };\n  console.log(soundFile);\n  return (\n    <React.Fragment>\n      <Row>\n        <Column>Select file:</Column>\n        <Column flex={2}>\n          <Input\n            id=\"file\"\n            name=\"file\"\n            type=\"file\"\n            multiple=\"false\"\n            onChange={fileSelectorHandler}\n          />\n        </Column>\n      </Row>\n      <Row>\n        <Column>Name:</Column>\n        <Column flex={2}>\n          <Input\n            type=\"text\"\n            value={soundName}\n            onChange={(e) => setSoundName(e.target.value)}\n          />\n        </Column>\n      </Row>\n      <Row>\n        <Column>Category:</Column>\n        <Column flex={2}>\n          <Select\n            name=\"category\"\n            onChange={(e) => setSoundCategory(e.target.value)}>\n            {soundCategories.map((cat, i) => {\n              return (\n                <Option key={i} value={cat}>\n                  {cat !== \"default\" && cat}\n                </Option>\n              );\n            })}\n          </Select>\n        </Column>\n      </Row>\n      <Row>\n        <Column>Sub-Category:</Column>\n        <Column flex={2}>\n          <Select\n            name=\"sub-category\"\n            onChange={(e) => setSoundSubCategory(e.target.value)}>\n            {getSubCategories(soundCategory).map((subCat, i) => {\n              return (\n                <Option key={i} value={subCat}>\n                  {subCat}\n                </Option>\n              );\n            })}\n          </Select>\n        </Column>\n      </Row>\n      <Row>\n        <Column></Column>\n        <Column flex={2}>{soundFile && soundFile.name}</Column>\n      </Row>\n      <Row>\n        <Column>{message && message}</Column>\n      </Row>\n      <Row>\n        <Column flex={1}>\n          <Button onClick={uploadSound}>Create Sound</Button>\n        </Column>\n      </Row>\n    </React.Fragment>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { AvailableSoundsList } from \"./AvailableSoundsList\";\nimport { SketchPicker } from \"react-color\";\nimport { CreateSound } from \"./CreateSound\";\nimport { Row, Button, Column, ColorSquare, Heading2 } from \"../../ui-kit\";\n\nconst views = {\n  ADD: \"ADD\",\n  UPLOAD: \"UPLOAD\",\n};\n\nexport const AddSound = ({\n  switchToOverview,\n  availableSounds,\n  selectedSound,\n  selectSound,\n  addSound,\n  loading,\n  fetchData,\n  displayMessage,\n}) => {\n  const [soundColor, setSoundColor] = useState(\"#aaa\");\n  const [view, setView] = useState(views.ADD);\n  const handleColorChange = (color) => {\n    setSoundColor(color.hex);\n  };\n\n  useEffect(() => {\n    selectSound(null);\n  }, []);\n\n  const handleAddSoundClick = () => {\n    if (!selectedSound || !selectedSound.name || !selectedSound.url) {\n      displayMessage(\"Please select a sound first\");\n      return;\n    }\n    addSound({\n      name: selectedSound.name,\n      color: soundColor,\n      url: selectedSound.url,\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Column>\n          <Heading2>Add Sound:</Heading2>\n        </Column>\n        <Column flexDirection=\"row\" justifyContent=\"flex-end\">\n          {view === views.ADD && (\n            <Button\n              onClick={() => {\n                setView(views.UPLOAD);\n              }}>\n              Upload own sound\n            </Button>\n          )}\n          {view === views.UPLOAD && (\n            <Button\n              onClick={() => {\n                setView(views.ADD);\n              }}>\n              Search sound\n            </Button>\n          )}\n\n          <Button backgroundColor=\"#0f0\" onClick={handleAddSoundClick}>\n            Add\n          </Button>\n          <Button backgroundColor=\"#f00\" onClick={switchToOverview}>\n            Cancel\n          </Button>\n        </Column>\n      </Row>\n      <Row>\n        <Column flex={2} justifyContent=\"flex-start\">\n          {view === views.ADD && (\n            <React.Fragment>\n              <Row>\n                <Column\n                  flexDirection=\"row\"\n                  alignItems=\"center\"\n                  justifyContent=\"flex-start\">\n                  <p>Color:</p>\n                  <ColorSquare backgroundColor={soundColor} />\n                </Column>\n              </Row>\n              <SketchPicker\n                color={soundColor}\n                onChangeComplete={handleColorChange}\n              />\n            </React.Fragment>\n          )}\n        </Column>\n        <Column flex={3}>\n          {view === views.UPLOAD && (\n            <CreateSound setView={setView} fetchData={fetchData} />\n          )}\n          {view === views.ADD && (\n            <AvailableSoundsList\n              loading={loading}\n              availableSounds={availableSounds}\n              selectedSound={selectedSound}\n              selectSound={selectSound}\n            />\n          )}\n        </Column>\n      </Row>\n    </React.Fragment>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Characteristics } from \"./Characteristics\";\nimport { InstrumentSoundsList } from \"./InstrumentSoundsList\";\nimport { AddSound } from \"./AddSound\";\nimport axios from \"axios\";\nimport { Row, Column, Button, PageLayout, Heading2, Alert } from \"../../ui-kit\";\n\nconst views = {\n  OVERVIEW: \"OVERVIEW\",\n  ADD_SOUND: \"ADD_SOUND\",\n};\n\nexport const CreateInstrument = (props) => {\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [sounds, setSounds] = useState([\n    { name: \"default\", color: \"#ddd\", url: \"\" },\n  ]);\n  const [view, setView] = useState(views.OVERVIEW);\n  const [loading, setLoading] = useState(false);\n  const [availableSounds, setAvailableSounds] = useState([]);\n  const [selectedSound, setSelectedSound] = useState(null);\n\n  const openAddSoundSection = async () => {\n    setView(views.ADD_SOUND);\n    await fetchData();\n  };\n\n  const fetchData = async () => {\n    setLoading(true);\n    const { data } = await axios.get(\"/api/sound\");\n    if (data) {\n      setAvailableSounds(data);\n      setLoading(false);\n    }\n  };\n\n  const displayMessage = (mes) => {\n    setMessage(mes);\n    setInterval(() => {\n      setMessage(\"\");\n    }, 2000);\n  };\n\n  const addSound = (sound) => {\n    if ((!sound.url, !sound.color)) {\n      displayMessage(\"Please select or upload a sound and pick a color\");\n      return;\n    }\n    const newSound = {\n      name: sound.name,\n      color: sound.color,\n      url: sound.url,\n    };\n    const updatedSounds = [...sounds, newSound];\n    setSounds(updatedSounds);\n    setView(views.OVERVIEW);\n  };\n\n  const switchToOverview = () => {\n    setView(views.OVERVIEW);\n  };\n\n  const selectSound = (sound) => {\n    setSelectedSound(sound);\n  };\n\n  const resetInstrument = () => {\n    setName(\"\");\n    setCategory(\"\");\n    setSubCategory(\"\");\n    setSounds([{ name: \"default\", color: \"#ddd\", url: \"\" }]);\n  };\n\n  const saveInstrument = async () => {\n    if (!name || !category || !subCategory) {\n      displayMessage(\"All fields must be filled\");\n      return;\n    }\n    if (sounds.length < 2) {\n      displayMessage(\"You must select at least 1 sound\");\n      return;\n    }\n    const createdInstrument = await axios.post(\"/api/instrument\", {\n      name,\n      category,\n      subCategory,\n      sounds,\n      creator: props.user._id,\n      private: false,\n    });\n    if (createdInstrument.message) {\n      displayMessage(createdInstrument.message);\n    } else if (createdInstrument.status === 200) {\n      displayMessage(`Success! You just created a new instrument!`);\n      resetInstrument();\n    }\n  };\n\n  const toggleHelp = () => {};\n\n  return (\n    <PageLayout>\n      <Row>{message && <Alert>{message}</Alert>}</Row>\n      {view === views.ADD_SOUND && (\n        <AddSound\n          switchToOverview={switchToOverview}\n          availableSounds={availableSounds}\n          selectedSound={selectedSound}\n          selectSound={selectSound}\n          loading={loading}\n          addSound={addSound}\n          fetchData={fetchData}\n          displayMessage={displayMessage}\n        />\n      )}\n      {view === views.OVERVIEW && (\n        <React.Fragment>\n          <Row>\n            <Column flex={1}>\n              <Heading2>Create Instrument</Heading2>\n            </Column>\n            <Column\n              flex={2}\n              flexDirection=\"row\"\n              alignItems=\"flex-end\"\n              justifyContent=\"flex-end\">\n              <Button onClick={saveInstrument}>Save Instrument</Button>\n              <Button onClick={resetInstrument}>Reset</Button>\n              <Button onClick={toggleHelp}>Help</Button>\n            </Column>\n          </Row>\n          <Row>\n            <Column flex={2}>\n              <Characteristics\n                name={name}\n                setName={setName}\n                category={category}\n                setCategory={setCategory}\n                subCategory={subCategory}\n                setSubCategory={setSubCategory}\n              />\n            </Column>\n            <Column flex={1}></Column>\n          </Row>\n          <Row>\n            <Column>\n              <h3>Sounds:</h3>\n            </Column>\n          </Row>\n          <Row>\n            <Column>\n              <InstrumentSoundsList\n                sounds={sounds}\n                addSound={openAddSoundSection}\n              />\n            </Column>\n          </Row>\n        </React.Fragment>\n      )}\n    </PageLayout>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Column,\n  Button,\n  PageLayout,\n  ProfilePic,\n  Heading2,\n} from \"../../ui-kit\";\n\nexport const About = () => {\n  return (\n    <PageLayout>\n      <Row>\n        <Column>\n          <Heading2>About the app</Heading2>\n        </Column>\n      </Row>\n      <Row>\n        <Column></Column>\n      </Row>\n    </PageLayout>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { HeaderLayout, HeaderTitle, MenuButton, Wrapper } from \"../../ui-kit\";\n\nconst linkStyle = {\n  textDecoration: \"none\",\n  color: \"black\",\n};\n\nexport const Header = (props) => {\n  return (\n    <HeaderLayout>\n      <Wrapper flexDirection=\"row\" justifyContent=\"space-between\">\n        <Link style={linkStyle} to=\"/\">\n          <HeaderTitle>Bum-Tchak!</HeaderTitle>\n        </Link>\n        <div\n          style={{ display: \"flex\", paddingRight: 20, alignItems: \"center\" }}>\n          <Link style={linkStyle} to=\"/\">\n            <MenuButton>Listen</MenuButton>\n          </Link>\n          <Link style={linkStyle} to=\"/create\">\n            <MenuButton>Create</MenuButton>\n          </Link>\n          {props.user ? (\n            <Link style={linkStyle} to=\"/profile\">\n              <MenuButton>Profile</MenuButton>\n            </Link>\n          ) : (\n            <React.Fragment>\n              <Link style={linkStyle} to=\"/signup\">\n                <MenuButton>Signup</MenuButton>\n              </Link>\n              <Link style={linkStyle} to=\"/login\">\n                Login\n              </Link>\n            </React.Fragment>\n          )}\n          <Link style={linkStyle} to=\"/about\">\n            About\n          </Link>\n        </div>\n      </Wrapper>\n    </HeaderLayout>\n  );\n};\n","import React from \"react\";\nimport { CreateSong } from \"./components/CreateSong/CreateSong\";\nimport { SongsList } from \"./components/DisplaySong/SongsList\";\nimport { LoadSong } from \"./components/LoadSong/LoadSong\";\nimport { Login } from \"./components/Auth/Login\";\nimport { Signup } from \"./components/Auth/Signup\";\nimport { Profile } from \"./components/Auth/Profile\";\nimport { ProtectedRoute } from \"./components/Auth/ProtectedRoute\";\nimport { CreateInstrument } from \"./components/CreateInstrument/CreateInstrument\";\nimport { About } from \"./components/InfoPages/About\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { MainScreen, Wrapper, BackHeader } from \"./ui-kit\";\nimport { Header } from \"./components/Header/Header\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user,\n  };\n\n  setUser = (user) => {\n    this.setState({\n      user: user,\n    });\n  };\n\n  render() {\n    return (\n      <MainScreen>\n        <Header user={this.state.user} />\n        <Wrapper border=\"yes\">\n          <BackHeader />\n          <Switch>\n            <Route\n              exact\n              path=\"/create\"\n              render={(props) => (\n                <CreateSong user={this.state.user} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/about\"\n              render={(props) => <About {...props} />}\n            />\n            <Route\n              exact\n              path=\"/song/:id\"\n              render={(props) => (\n                <CreateSong user={this.state.user} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) => {\n                if (!this.state.user) {\n                  return <Login setUser={this.setUser} {...props} />;\n                } else {\n                  return <Redirect to=\"/\" />;\n                }\n              }}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={(props) => {\n                if (!this.state.user) {\n                  return <Signup setUser={this.setUser} {...props} />;\n                } else {\n                  return <Redirect to=\"/\" />;\n                }\n              }}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/profile\"\n              user={this.state.user}\n              setUser={this.setUser}\n              component={Profile}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/create-instrument\"\n              user={this.state.user}\n              setUser={this.setUser}\n              component={CreateInstrument}\n            />\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => <SongsList {...props} />}\n            />\n            <Route\n              exact\n              path=\"/load-song\"\n              render={(props) => {\n                if (this.state.user) {\n                  return <LoadSong user={this.state.user} {...props} />;\n                } else {\n                  return <Redirect to=\"/\" />;\n                }\n              }}\n            />\n          </Switch>\n        </Wrapper>\n      </MainScreen>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst renderApp = async () => {\n  const authResponse = await axios.get(\"/api/auth/loggedin\");\n  const user = authResponse.data;\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={user} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n};\nrenderApp();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}