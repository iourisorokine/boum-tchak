{"version":3,"sources":["context/GlobalContext.jsx","ui-kit/elements.js","ui-kit/buttons.js","ui-kit/layout.js","ui-kit/typography.js","ui-kit/musicGrid.js","components/CreateSong/Note.jsx","components/CreateSong/CreateLine.jsx","components/Shared/PageSquares.jsx","components/CreateSong/PlayControls.jsx","components/CreateSong/AdvControls.jsx","components/CreateSong/AddInstrument.jsx","components/CreateSong/SaveSong.jsx","components/CreateSong/ToolsLine.jsx","config/config.js","components/utils/instruments.js","components/utils/playMechanics.js","components/utils/categories.js","components/CreateSong/CreateSong.jsx","components/DisplaySong/Note.jsx","components/DisplaySong/DisplayLine.jsx","components/DisplaySong/DisplaySong.jsx","components/InfoPages/AppIntro.jsx","components/DisplaySong/SongsList.jsx","components/LoadSong/LoadSong.jsx","components/Auth/utils.js","components/Auth/Login.jsx","components/Auth/Signup.jsx","components/Auth/Profile.jsx","components/Auth/ProtectedRoute.jsx","components/CreateInstrument/Characteristics.jsx","components/CreateInstrument/InstrumentSoundsList.jsx","components/CreateInstrument/AvailableSoundsList.jsx","components/CreateInstrument/CreateSound.jsx","components/CreateInstrument/AddSound.jsx","components/CreateInstrument/CreateInstrument.jsx","components/InfoPages/Help.jsx","components/Header/Header.jsx","App.jsx","serviceWorker.js","context/GlobalReducer.jsx","context/types.js","context/GlobalState.jsx","index.js"],"names":["globalContext","createContext","ControlsPad","styled","div","Tempo","span","ExpandedMenuItem","SongPostPlay","SongPost","Input","input","props","width","Label","form","label","Select","select","Option","option","ProfilePic","img","src","ColorSquare","backgroundColor","SelectableText","p","selected","Button","button","hoverColor","PlayButton","StopButton","MenuButton","CategoryBtn","DeleteButton","Row","padding","SelectableRow","AppIntroLayout","Column","flexDirection","alignItems","justifyContent","flex","HeaderLayout","BackHeader","MainScreen","Wrapper","maxWidth","PageLayout","BlankSpace","height","Heading2","h2","Heading3","h3","SongHeader","SongTitle","b","LineLabel","Text","HeaderTitle","h1","Alert","MusicGrid","Line","notesPlayingAnimation","keyframes","StyledNote","color","highlighted","clickable","animated","PageSquare","Note","notePosition","status","colors","toggleActiveNote","linePosition","sounds","onClick","CreateLine","notes","noteColors","highlightedNote","animatedNotes","deleteLine","currentPage","lenghtOfPage","isRemoveInstrumentVisible","useContext","firstIndex","lastIndex","displayNotes","length","map","n","i","key","includes","PageSquares","selectPage","pages","createMode","el","iconStyle","PlayControls","onPlayBtnPress","onStopBtnPress","addOneBar","removeOneBar","numberOfBars","tempo","setTempo","isPlaying","setTimeoutTempo","isNotePlayedOnClick","setIsNotePlayedOnClick","icon","faStop","style","faPlay","AdvControls","toggleIsSaveSongVisible","user","toggleIsRemoveInstrumentVisible","toggleIsAddInstrumentVisible","to","AddInstrument","addInstrument","useState","newInstruments","setNewInstruments","searchCategory","setSearchCategory","loading","setLoading","uniqueCategories","setUniqueCategories","setIsRemoveInstrumentVisible","fetchInstrumentsData","searchCat","shouldCreateBtns","a","searchParams","params","category","axios","get","data","allCategories","instrument","newUniqueCategories","Set","useEffect","cat","selectCategory","fill","stroke","name","subCategory","SaveSong","saveTheSong","title","setTitle","Fragment","margin","type","placeholder","value","onChange","e","target","ToolsLine","lengthOfPage","isLastPage","displayBarsLength","lastPageFull","maxLength","maxLength2","push","borderBottom","marginRight","marginLeft","marginBottom","fontSize","config","START_PARTITION_LENGTH","MAX_PARTITION_LENGTH","DEFAULT_TEMPO","DEFAULT_TIMEOUT","preparePartition","instruments","partition","forEach","emptyLine","prepareInstruments","line","lineSounds","lineColors","url","Audio","id","_id","playBeat","lines","beatNumber","partitionLine","soundIndex","pause","currentTime","play","SOUND_CATEGORIES","SUB_CATEGORIES","default","Drums","Bass","Synth","Guitar","Piano","Brass","Strings","Flute","Effects","Voice","Other","getSubCategories","getCategories","CreateSong","setHighlightedNote","setAnimatedNotes","bottomMessage","setBottomMessage","setCurrentPage","setPages","musicPlaying","React","useRef","window","innerWidth","setIsPlaying","timeoutTempo","setInstruments","setPartition","isAddInstrumentVisible","isDeleteLineVisible","isSaveSongVisible","setIsSaveSongVisible","songIdToLoad","match","prepareLoadedSong","prepareNewMusic","stopPlaying","preparedInstruments","newPartition","loadedSong","numberOfPages","Math","ceil","newPages","lineNumber","updatedPartition","updatedInstruments","splice","clearInterval","current","col","row","depth","newIndex","songInstruments","songData","creator","creatorName","username","posted","post","setTimeout","instr","newPartitionRow","preparedNewInstrument","prepareOneInstrument","minHeight","display","counter","setInterval","nextPage","playMusic","pagesCalculation","pagesUpdate","concat","last","pagesCalc","slice","isAnimated","DisplayLine","iconsStyle","border","borderRadius","zIndex","DisplaySong","intervalId","updatedPages","musicLines","AppIntro","chevronStyle","paddingTop","faChevronDown","SongsList","isAppIntroDisplayed","songs","setSongs","message","setMessage","loadSongs","page","loadedSongs","song","LoadSong","songsList","setSongsList","selectedSong","setSelectedSong","fetchData","deleteSong","songId","delete","response","signup","password","then","catch","err","login","Login","setUsername","setPassword","handleLogin","setUser","history","handleChange","htmlFor","textDecoration","Signup","handleSignup","Profile","onLogoutBtnClick","admin","ProtectedRoute","Component","component","rest","render","Characteristics","setName","setCategory","setSubCategory","instrumentCategories","subCat","InstrumentSoundsList","addSound","AvailableSoundsList","availableSounds","selectedSound","selectSound","filterName","setFilterName","filterCategory","setFilterCategory","filterSubCategory","setFilterSubCategory","filteredSounds","filter","sound","toLocaleLowerCase","volumeBtnStyle","borderColor","borderWidth","borderStyle","cursor","soundCategories","faVolumeUp","CreateSound","setView","soundName","setSoundName","soundCategory","setSoundCategory","soundSubCategory","setSoundSubCategory","soundPitch","setSoundPitch","soundFile","setSoundFile","uploadSound","displayMessage","uploadData","FormData","append","uploadedSound","pitch","secure_url","createdSound","mes","multiple","event","selectedFile","files","views","AddSound","switchToOverview","soundColor","setSoundColor","view","onChangeComplete","hex","CreateInstrument","setSounds","setAvailableSounds","setSelectedSound","openAddSoundSection","resetInstrument","saveInstrument","private","createdInstrument","newSound","updatedSounds","Help","alt","linkStyle","textLinkStyle","Header","paddingRight","App","state","setState","this","exact","path","Boolean","location","hostname","action","payload","GlobalState","initialState","isPLaying","partitionLength","maxPartitionLength","useReducer","GlobalReducer","dispatch","GlobalContext","Provider","console","log","newValue","children","authResponse","ReactDOM","document","getElementById","renderApp","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.9f41e764.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const globalContext = createContext();\n\nexport default globalContext;\n","import styled from \"styled-components\";\n\nexport const ControlsPad = styled.div`\n  padding: 10px;\n`;\n\nexport const Tempo = styled.span`\n  font-size: 16px;\n`;\n\nexport const ExpandedMenuItem = styled.div`\n  margin: auto;\n  min-width: 400px;\n  max-width: 700px;\n  position: absolute;\n  z-index: 10;\n  top: 150px;\n  box-shadow: 3px 3px 5px #bbb;\n  background-color: white;\n  border: solid 1px black;\n  border-radius: 3px;\n  padding: 10px;\n`;\n\nexport const SongPostPlay = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  margin-top: -8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  visibility: hidden;\n`;\n\nexport const SongPost = styled.div`\n  position: relative;\n  margin: 30px 10px;\n  border: solid 1px black;\n  border-radius: 10px;\n  padding-top: 10px;\n  width: 80%;\n  &:hover ${SongPostPlay} {\n    visibility: visible;\n  }\n`;\n\nexport const Input = styled.input`\n  height: 20px;\n  width: ${(props) => props.width || \"100px\"};\n  margin: 10px;\n`;\n\nexport const Form = styled.form`\n  border: solid black 1px;\n  width: ${(props) => (props.width ? `${props.width}px` : \"100%\")};\n`;\n\nexport const Label = styled.label`\n  margin: 0px 5px;\n`;\n\nexport const Select = styled.select`\n  margin: 8px;\n  height: 26px;\n  width: ${(props) => props.width || \"110px\"};\n`;\n\nexport const Option = styled.option`\n  font-size: 12px;\n`;\n\nexport const ProfilePic = styled.img`\n  src: ${(props) => props.src}\n  height: 260px;\n  width: 260px;\n  object-fit: cover;\n  padding: 10px;\n`;\n\nexport const ColorSquare = styled.div`\n  height: 24px;\n  width: 24px;\n  margin: 4px;\n  border: solid black 1px;\n  background-color: ${(props) => props.backgroundColor || \"white\"};\n`;\n\nexport const SelectableText = styled.p`\n  padding: 3px;\n  margin: 0px;\n  cursor: pointer;\n  color: ${(props) => (props.selected ? \"white\" : \"black\")};\n  background-color: ${(props) => (props.selected ? \"black\" : \"white\")};\n  &:hover {\n    background-color: black;\n    color: white;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  height: 36px;\n  min-width: 36px;\n  margin: 8px;\n  padding: 0px 10px;\n  border-radius: 18px;\n  border: solid 1px black;\n  background-color: ${(props) => props.backgroundColor || \"white\"};\n  font-size: 16px;\n  box-shadow: 3px 3px 5px #bbb;\n  cursor: pointer;\n  &:hover {\n    background-color: ${(props) => props.hoverColor || \"black\"};\n    color: white;\n  }\n`;\n\nexport const PlayButton = styled(Button)`\n  width: 60px;\n  background-color: #0f0;\n  color: #fff;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const StopButton = styled(Button)`\n  width: 60px;\n  background-color: #f00;\n  color: #fff;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const MenuButton = styled.div`\n  margin: 8px;\n  border: solid 2px black;\n  border-radius: 5px;\n  padding: 6px 12px;\n  color: #000;\n  text-decoration: none;\n  cursor: pointer;\n  &:hover {\n    background-color: black;\n    color: white;\n  }\n`;\n\nexport const CategoryBtn = styled.button`\n  height: 30px;\n  min-width: 40px;\n  margin: 8px;\n  padding: 0px 10px;\n  border-radius: 15px;\n  border: solid 1px black;\n  color: ${(props) => (props.selected ? \"white\" : \"black\")};\n  background-color: ${(props) => (props.selected ? \"black\" : \"white\")};\n  font-size: 12px;\n  &:hover {\n    background-color: black;\n    color: white;\n    opacity: ${(props) => (props.selected ? 0.5 : 1)};\n  }\n`;\n\nexport const DeleteButton = styled.p`\n  line-height: 10px;\n  padding: 3px;\n  margin: 5px;\n  font-size: 25px;\n  color: red;\n  font-weight: bold;\n  cursor: pointer;\n  &:hover {\n    background-color: red;\n    color: white;\n  }\n`;\n\nconst IconButton = styled.button`\n  color: black;\n  backgroundcolor: white;\n  padding: 6px;\n  bordercolor: black;\n  border: 1px solid black;\n  border-radius: 50%;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const Row = styled.div`\n  padding: ${(props) => props.padding || 0};\n  display: flex;\n  width: 100%;\n`;\n\nexport const SelectableRow = styled(Row)`\n  padding: ${(props) => props.padding || 0};\n  cursor: pointer;\n  &:hover {\n    background-color: black;\n    color: white;\n    opacity: ${(props) => (props.selected ? 0.5 : 1)};\n  }\n`;\n\nexport const AppIntroLayout = styled.div`\n  min-height: 60vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: ${(props) => props.flexDirection || \"column\"};\n  justify-content: center;\n  min-height: 20px;\n  padding: ${(props) => props.padding || 0};\n  align-items: ${(props) => props.alignItems || \"flex-start\"};\n  justify-content: ${(props) => props.justifyContent || \"center\"};\n  flex: ${(props) => props.flex || 1};\n`;\n\nexport const HeaderLayout = styled.div`\n  height: 90px;\n  width: 100vw;\n  z-index: 10;\n  background-color: white;\n  display: flex;\n  position: fixed;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 4px 4px 5px #eee;\n`;\n\nexport const BackHeader = styled.div`\n  height: 110px;\n`;\n\nexport const MainScreen = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: ${(props) => props.flexDirection || \"column\"};\n  align-items: ${(props) => props.alignItems || \"center\"};\n  justify-content: ${(props) => props.justifyContent || \"flex-start\"};\n  width: 100vw;\n  max-width: ${(props) => props.maxWidth || \"900px\"};\n`;\n\nexport const PageLayout = styled.div`\n  width: 90%;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flexStart;\n`;\n\nexport const BlankSpace = styled.div`\n  height: ${(props) => props.height || \"20px\"};\n`;\n","import styled from \"styled-components\";\n\nexport const Heading2 = styled.h2`\n  padding: 10px 0;\n  margin: 0 0 10px 0;\n`;\n\nexport const Heading3 = styled.h3`\n  padding: 10px 0;\n  margin: 0 0 4px 0;\n`;\n\nexport const SongHeader = styled.div`\n  margin-top: -32px;\n  padding: 0px 12px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const SongTitle = styled.p`\n  padding: 0px 10px;\n  background-color: white;\n  font-weight: ${(props) => (props.b ? \"bold\" : \"regular\")};\n  font-size: 12px;\n`;\n\nexport const LineLabel = styled.p`\n  font-size: 10px;\n  line-height: 10px;\n  width: 70px;\n`;\n\nexport const Text = styled.p`\n  font-size: 12px;\n  line-height: 12px;\n  padding: ${(props) => props.padding || 2};\n  margin: 0;\n`;\n\nexport const HeaderTitle = styled.h1`\n  padding: 0px 50px;\n  font-size: 56px;\n  text-shadow: 4px 4px #7799dd;\n`;\n\nexport const Alert = styled.p`\n  color: red;\n`;\n","import styled, { keyframes } from \"styled-components\";\n\nexport const MusicGrid = styled.div`\n  margin: 10px 20px;\n  padding-bottom: 10px;\n`;\n\nexport const Line = styled.div`\n  margin: 0;\n  display: flex;\n`;\n\nconst notesPlayingAnimation = keyframes`\n 0% { \n   height: 30px; \n   width: 30px;\n   margin: 3px; \n  }\n  20% { \n   height: 24px; \n   width: 24px;\n   margin: 6px; \n    }\n 30% { \n   height: 32px; \n    width: 32px;  \n    margin: 2px;\n}\n 100% { \n   height: 30px; \n   width: 30px;\n   margin: 3px; \n }\n`;\n\nexport const StyledNote = styled.div`\n  height: 30px;\n  width: 30px;\n  margin: 3px;\n  box-shadow: 3px 3px 5px ${(props) => props.color};\n  background-color: ${(props) => props.color};\n  opacity: ${(props) => (props.highlighted ? 0.7 : 1)};\n  cursor: pointer;\n  &:hover {\n    height: ${(props) => (props.clickable ? \"24px\" : \"30px\")};\n    width: ${(props) => (props.clickable ? \"24px\" : \"30px\")};\n    margin: ${(props) => (props.clickable ? \"6px\" : \"3px\")};\n  }\n  animation-name: ${(props) => props.animated && notesPlayingAnimation};\n  animation-duration: 0.8s;\n  animation-iteration-count: 1;\n`;\n\nexport const PageSquare = styled.div`\n  height: 8px;\n  width: 8px;\n  margin: 4px;\n  border-width: 2px;\n  border-style: solid;\n  border-color: ${(props) => props.color || \"black\"};\n  background-color: ${(props) =>\n    props.selected ? props.color || \"black\" : \"white\"};\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { StyledNote } from \"../../ui-kit\";\n\nexport const Note = ({\n  notePosition,\n  status,\n  colors,\n  toggleActiveNote,\n  linePosition,\n  sounds,\n  highlighted,\n  animated,\n}) => {\n  const onNoteClick = () => {\n    toggleActiveNote(notePosition, linePosition, sounds);\n  };\n\n  const color = colors[status];\n\n  return (\n    <StyledNote\n      color={color}\n      highlighted={highlighted}\n      onClick={onNoteClick}\n      clickable={true}\n      animated={animated}\n    />\n  );\n};\n","import React, { useContext } from \"react\";\nimport { globalContext } from \"../../context/GlobalContext\";\nimport { Note } from \"./Note\";\nimport { Line, LineLabel, DeleteButton } from \"../../ui-kit\";\n\nexport const CreateLine = ({\n  linePosition,\n  notes,\n  noteColors,\n  toggleActiveNote,\n  sounds,\n  highlightedNote,\n  label,\n  animatedNotes,\n  deleteLine,\n  currentPage,\n  lenghtOfPage,\n}) => {\n  const { isRemoveInstrumentVisible } = useContext(globalContext);\n\n  const firstIndex = (currentPage - 1) * lenghtOfPage;\n  const lastIndex = currentPage * lenghtOfPage;\n\n  const displayNotes = notes?.length\n    ? notes.map((n, i) => {\n        if (i >= firstIndex && i < lastIndex) {\n          return (\n            <Note\n              key={i}\n              status={n}\n              notePosition={i}\n              colors={noteColors}\n              toggleActiveNote={toggleActiveNote}\n              linePosition={linePosition}\n              sounds={sounds}\n              highlighted={highlightedNote === i}\n              animated={animatedNotes.includes(i)}\n            />\n          );\n        }\n        return null;\n      })\n    : [];\n\n  return (\n    <Line>\n      <LineLabel>{label && label}</LineLabel>\n      {isRemoveInstrumentVisible && (\n        <DeleteButton onClick={() => deleteLine(linePosition)}>x</DeleteButton>\n      )}\n      {displayNotes}\n    </Line>\n  );\n};\n","import React from \"react\";\nimport { Row, Column, PageSquare } from \"../../ui-kit\";\n\nexport const PageSquares = ({\n  currentPage,\n  selectPage,\n  pages,\n  clickable = true,\n  createMode,\n}) => {\n  if (pages.length < 2 && !createMode) {\n    return null;\n  }\n\n  return (\n    <Row>\n      <Column flex={2}></Column>\n      <Column>\n        <Row>\n          {pages.map((el, i) => {\n            return (\n              <PageSquare\n                key={i}\n                selected={currentPage === i + 1}\n                onClick={clickable ? () => selectPage(i + 1) : null}\n              />\n            );\n          })}\n        </Row>\n      </Column>\n    </Row>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { globalContext } from \"../../context/GlobalContext\";\nimport {\n  Button,\n  PlayButton,\n  StopButton,\n  ControlsPad,\n  Tempo,\n} from \"../../ui-kit\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faStop } from \"@fortawesome/free-solid-svg-icons\";\n\nconst iconStyle = { width: 16, height: 16 };\n\nexport const PlayControls = ({\n  onPlayBtnPress,\n  onStopBtnPress,\n  addOneBar,\n  removeOneBar,\n  numberOfBars,\n}) => {\n  const {\n    tempo,\n    setTempo,\n    isPlaying,\n    setTimeoutTempo,\n    isNotePlayedOnClick,\n    setIsNotePlayedOnClick,\n  } = useContext(globalContext);\n\n  const togglePlayOnClick = () => {\n    setIsNotePlayedOnClick(!isNotePlayedOnClick);\n  };\n\n  const onPlusTempoPress = () => {\n    setTempo(tempo + 5);\n    const newTimeout = 60000 / tempo / 4;\n    setTimeoutTempo(newTimeout);\n  };\n\n  const onMinusTempoPress = () => {\n    setTempo(tempo - 5);\n    const newTimeout = 60000 / tempo / 4;\n    setTimeoutTempo(newTimeout);\n  };\n\n  return (\n    <ControlsPad>\n      {isPlaying ? (\n        <StopButton onClick={onStopBtnPress}>\n          <FontAwesomeIcon icon={faStop} color=\"white\" style={iconStyle} />\n        </StopButton>\n      ) : (\n        <PlayButton onClick={onPlayBtnPress}>\n          <FontAwesomeIcon icon={faPlay} color=\"white\" style={iconStyle} />\n        </PlayButton>\n      )}\n      <Button onClick={togglePlayOnClick}>\n        Play on click: {isNotePlayedOnClick ? \"yes\" : \"no\"}\n      </Button>\n      <Button onClick={removeOneBar}>-</Button>\n      <Tempo>Bars: {numberOfBars}</Tempo>\n      <Button onClick={addOneBar}>+</Button>\n      <Button onClick={onMinusTempoPress}>-</Button>\n      <Tempo>Tempo: {tempo}</Tempo>\n      <Button onClick={onPlusTempoPress}>+</Button>\n    </ControlsPad>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { globalContext } from \"../../context/GlobalContext\";\nimport { Button, ControlsPad } from \"../../ui-kit\";\nimport { Link } from \"react-router-dom\";\n\nexport const AdvControls = ({ toggleIsSaveSongVisible, user }) => {\n  const {\n    toggleIsRemoveInstrumentVisible,\n    toggleIsAddInstrumentVisible,\n  } = useContext(globalContext);\n\n  return (\n    <ControlsPad>\n      <Button onClick={toggleIsSaveSongVisible}>Save Song</Button>\n      {user && (\n        <Link to=\"/load-song\">\n          <Button>Load Song</Button>\n        </Link>\n      )}\n      <Button onClick={toggleIsAddInstrumentVisible}>Add Instrument</Button>\n      <Button onClick={toggleIsRemoveInstrumentVisible}>\n        Remove Instrument\n      </Button>\n    </ControlsPad>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { globalContext } from \"../../context/GlobalContext\";\nimport { Bars } from \"svg-loaders-react\";\nimport {\n  CategoryBtn,\n  ExpandedMenuItem,\n  Column,\n  Row,\n  Button,\n  SelectableRow,\n  Text,\n} from \"../../ui-kit\";\nimport axios from \"axios\";\n\nexport const AddInstrument = ({ addInstrument }) => {\n  const [newInstruments, setNewInstruments] = useState([]);\n  const [searchCategory, setSearchCategory] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [uniqueCategories, setUniqueCategories] = useState([]);\n\n  const {\n    setIsRemoveInstrumentVisible,\n    toggleIsAddInstrumentVisible,\n  } = useContext(globalContext);\n\n  const fetchInstrumentsData = async (searchCat, shouldCreateBtns) => {\n    const searchParams = searchCat && {\n      params: { category: searchCat },\n    };\n    const { data } = await axios.get(\"/api/instrument\", searchParams);\n    if (data) {\n      setNewInstruments(data);\n      if (shouldCreateBtns) {\n        const allCategories = data.map((instrument) => {\n          return instrument.category;\n        });\n        const newUniqueCategories = [...new Set(allCategories)];\n        setUniqueCategories(newUniqueCategories);\n      }\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchInstrumentsData(null, true);\n  }, []);\n\n  const handleClick = (inst) => {\n    addInstrument(inst);\n    toggleIsAddInstrumentVisible();\n  };\n\n  const selectCategory = (cat) => {\n    fetchInstrumentsData(cat);\n    setSearchCategory(cat);\n  };\n\n  return (\n    <ExpandedMenuItem>\n      <Row padding=\"10px 12px 4px 12px\">\n        <Column flexDirection=\"row\">\n          {uniqueCategories.map((cat) => {\n            if (cat !== \"default\") {\n              return (\n                <CategoryBtn\n                  key={cat}\n                  selected={searchCategory === cat}\n                  onClick={() => selectCategory(cat)}>\n                  {cat}\n                </CategoryBtn>\n              );\n            }\n          })}\n        </Column>\n      </Row>\n      {loading && (\n        <Column justifyContent=\"center\" alignItems=\"center\">\n          <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />\n        </Column>\n      )}\n      <Row padding=\"4px 12px 0 12px\">\n        <Column>\n          {newInstruments.map((instrument) => {\n            return (\n              <SelectableRow\n                key={instrument.name}\n                padding=\"4px 0 4px 0\"\n                onClick={() => handleClick(instrument)}>\n                <Column flex={2}>\n                  <Text>{instrument.name}</Text>\n                </Column>\n                <Column>\n                  <Text>{instrument.category}</Text>\n                </Column>\n                <Column>\n                  <Text>{instrument.subCategory}</Text>\n                </Column>\n              </SelectableRow>\n            );\n          })}\n        </Column>\n      </Row>\n      <Row padding=\"20px 0 10px 0\">\n        <Column alignItems=\"center\">\n          <Button\n            hoverColor=\"red\"\n            onClick={() => setIsRemoveInstrumentVisible(false)}>\n            Cancel\n          </Button>\n        </Column>\n      </Row>\n    </ExpandedMenuItem>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ExpandedMenuItem, Button, Input } from \"../../ui-kit\";\n\nexport const SaveSong = ({ saveTheSong, user, toggleIsSaveSongVisible }) => {\n  const [title, setTitle] = useState(\"\");\n\n  const handleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  return (\n    <ExpandedMenuItem>\n      {user ? (\n        <React.Fragment>\n          <p style={{ margin: 10 }}>\n            Name your song (if you modified an existing song, <br />\n            it will still be saved under as new one):\n          </p>\n          <Input\n            type=\"text\"\n            placeholder=\"Padapoum\"\n            value={title}\n            onChange={handleChange}\n          />\n          <div>\n            <Button onClick={() => saveTheSong(title)}>Save</Button>\n            <Button onClick={() => toggleIsSaveSongVisible()}>Cancel</Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <p style={{ margin: 10 }}>\n            To save a song, you need to have a profile, but let's do it! <br />\n            Please login or signup:\n          </p>\n\n          <div>\n            <Link to=\"/signup\">\n              <Button>Signup</Button>\n            </Link>\n            <Link to=\"/login\">\n              <Button>Login</Button>\n            </Link>\n          </div>\n        </React.Fragment>\n      )}\n    </ExpandedMenuItem>\n  );\n};\n","import React from \"react\";\nimport { Line, LineLabel, Row } from \"../../ui-kit\";\n\nexport const ToolsLine = ({ notes, lengthOfPage, isLastPage }) => {\n  const displayBarsLength = [];\n  const lastPageFull = notes?.length && notes?.length % lengthOfPage === 0;\n  const maxLength = notes?.length > lengthOfPage ? lengthOfPage : notes?.length;\n  const maxLength2 =\n    isLastPage && lastPageFull\n      ? maxLength\n      : isLastPage\n      ? notes?.length % lengthOfPage\n      : maxLength;\n\n  if (lengthOfPage && lengthOfPage >= 4) {\n    for (let i = 4; i <= maxLength2; i += 4) {\n      displayBarsLength.push(\n        <div\n          key={i}\n          style={{\n            borderBottom: \"1px solid #888\",\n            width: 138,\n            marginRight: 3,\n            marginLeft: 3,\n            marginBottom: 12,\n            fontSize: 10,\n            color: \"#888\",\n          }}>\n          1 bar\n        </div>\n      );\n    }\n  }\n  return (\n    <Row>\n      <LineLabel />\n      {displayBarsLength}\n    </Row>\n  );\n};\n","export const config = {\n  START_PARTITION_LENGTH: 8,\n  MAX_PARTITION_LENGTH: 64,\n  DEFAULT_TEMPO: 120,\n  DEFAULT_TIMEOUT: 60000 / 120 / 4,\n};\n","export const preparePartition = (instruments, length) => {\n  if (!instruments) return [];\n  const partition = [];\n  instruments.forEach((el) => {\n    const emptyLine = [];\n    for (let i = 1; i <= length; i++) {\n      emptyLine.push(0);\n    }\n    partition.push(emptyLine);\n  });\n  return partition;\n};\n\nexport const prepareInstruments = (instruments) => {\n  const preparedInstruments = instruments.map((line) => {\n    const lineSounds = [];\n    const lineColors = [];\n    line.sounds.forEach((el) => {\n      if (el.url) {\n        lineSounds.push(new Audio(el.url));\n      } else {\n        lineSounds.push(null);\n      }\n      lineColors.push(el.color);\n    });\n    return {\n      id: line._id,\n      label: line.name,\n      colors: lineColors,\n      sounds: lineSounds,\n    };\n  });\n  return preparedInstruments;\n};\n\nexport const prepareOneInstrument = (instrument) => {\n  const lineSounds = [];\n  const lineColors = [];\n  instrument.sounds.forEach((el) => {\n    if (el.url) {\n      lineSounds.push(new Audio(el.url));\n    } else {\n      lineSounds.push(null);\n    }\n    lineColors.push(el.color);\n  });\n  return {\n    id: instrument._id,\n    label: instrument.name,\n    colors: lineColors,\n    sounds: lineSounds,\n  };\n};\n","/* Plays one beat of the music, \neach note of the beat being the note on each line corresponding \nto the selected index */\nexport const playBeat = (lines, partition, beatNumber) => {\n  partition.forEach((partitionLine, i) => {\n    if (partitionLine[beatNumber]) {\n      const soundIndex = partitionLine[beatNumber];\n      lines[i].sounds.forEach((el) => {\n        if (el) {\n          el.pause();\n          el.currentTime = 0;\n        }\n      });\n      lines[i].sounds[soundIndex].play();\n    }\n  });\n};\n","const SOUND_CATEGORIES = [\n  \"default\",\n  \"Drums\",\n  \"Bass\",\n  \"Synth\",\n  \"Guitar\",\n  \"Piano\",\n  \"Brass\",\n  \"Strings\",\n  \"Flute\",\n  \"Effects\",\n  \"Voice\",\n  \"Other\",\n];\n\nconst SUB_CATEGORIES = {\n  \"\": [\"\"],\n  default: [\"\"],\n  Drums: [\n    \"\",\n    \"Kick\",\n    \"Snare\",\n    \"Tom\",\n    \"Hi-hat\",\n    \"Cymbal\",\n    \"Vinnyl\",\n    \"Percussion\",\n    \"Clang\",\n    \"Other\",\n  ],\n  Bass: [\"\", \"Acoustic\", \"Fretless\", \"Electric\", \"Picked\", \"Synth\", \"Slap\"],\n  Synth: [\"\", \"Piano\", \"Ambiant\", \"Lead\", \"Pad\", \"Effect\", \"Electronic\"],\n  Guitar: [\n    \"\",\n    \"Acoustic\",\n    \"Clean\",\n    \"Overdrive\",\n    \"Distorsion\",\n    \"Muted\",\n    \"Jazz\",\n    \"Fuzz\",\n    \"Wah\",\n    \"Funk\",\n  ],\n  Piano: [\"\", \"Grand\", \"Acoustic\", \"Clavesin\"],\n  Brass: [\"\", \"Horn\", \"Trumpet\", \"Tuba\", \"Trombone\"],\n  Strings: [\"\", \"Violin\", \"Cello\", \"Double Bass\", \"Harp\", \"Mixed-strings\"],\n  Flute: [\"\", \"Flute\", \"Clarinet\", \"Pipeau\", \"Peruvian\", \"Bass\", \"Recorder\"],\n  Effects: [\"\", \"Scratch\", \"Noise\", \"Clang\", \"Electronic\", \"Mystic\"],\n  Voice: [\"\", \"Hi-sing\", \"Mid-sing\", \"Low-sing\", \"Talk\", \"Noize\"],\n  Other: [\"\"],\n};\n\nexport const getSubCategories = (category) => {\n  return SUB_CATEGORIES[category];\n};\n\nexport const getCategories = () => {\n  return SOUND_CATEGORIES;\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { CreateLine } from \"./CreateLine\";\nimport { MusicGrid, ExpandedMenuItem, Button } from \"../../ui-kit\";\nimport { PageSquares } from \"../Shared/PageSquares\";\nimport { PlayControls } from \"./PlayControls\";\nimport { AdvControls } from \"./AdvControls\";\nimport { AddInstrument } from \"./AddInstrument\";\nimport { SaveSong } from \"./SaveSong\";\nimport { ToolsLine } from \"./ToolsLine\";\nimport { config } from \"./../../config/config\";\nimport {\n  playBeat,\n  preparePartition,\n  prepareInstruments,\n  prepareOneInstrument,\n} from \"../utils\";\nimport axios from \"axios\";\nimport { globalContext } from \"../../context/GlobalContext\";\n\nexport const CreateSong = (props) => {\n  const [highlightedNote, setHighlightedNote] = useState([-1]);\n  const [animatedNotes, setAnimatedNotes] = useState([]);\n  const [bottomMessage, setBottomMessage] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pages, setPages] = useState([1]);\n\n  let musicPlaying = React.useRef(null);\n\n  const lengthOfPage = window.innerWidth >= 800 ? 16 : 12;\n\n  const {\n    tempo,\n    setTempo,\n    isPlaying,\n    setIsPlaying,\n    timeoutTempo,\n    instruments,\n    setInstruments,\n    partition,\n    setPartition,\n    setTimeoutTempo,\n    isNotePlayedOnClick,\n    setIsNotePlayedOnClick,\n    isAddInstrumentVisible,\n    toggleIsAddInstrumentVisible,\n    isDeleteLineVisible,\n    setIsRemoveInstrumentVisible,\n    isSaveSongVisible,\n    setIsSaveSongVisible,\n  } = useContext(globalContext);\n\n  useEffect(() => {\n    const songIdToLoad = props?.match?.params?.id;\n    if (songIdToLoad) {\n      prepareLoadedSong(songIdToLoad);\n    } else {\n      prepareNewMusic();\n    }\n    return () => stopPlaying();\n  }, []);\n\n  const prepareNewMusic = async () => {\n    const { data } = await axios.get(\"/api/instrument/starter\");\n    const preparedInstruments = prepareInstruments(data);\n    const newPartition = preparePartition(\n      preparedInstruments,\n      config.START_PARTITION_LENGTH\n    );\n    setInstruments(preparedInstruments);\n    setPartition(newPartition);\n  };\n\n  const prepareLoadedSong = async (songIdToLoad) => {\n    const { data: loadedSong } = await axios.get(`/api/song/${songIdToLoad}`);\n    const newInstruments = [...loadedSong.instruments];\n    const preparedInstruments = prepareInstruments(newInstruments);\n    setInstruments(preparedInstruments);\n    setPartition(loadedSong.partition);\n    setTempo(loadedSong.tempo);\n    setTimeoutTempo(60000 / loadedSong.tempo / 4);\n    const numberOfPages = Math.ceil(\n      loadedSong.partition[0].length / lengthOfPage\n    );\n    const newPages = [];\n    for (let i = 1; i <= numberOfPages; i++) {\n      newPages.push(1);\n    }\n    setPages(newPages);\n  };\n\n  const addOneBar = () => {\n    if (partition.length && partition[0].length < config.MAX_PARTITION_LENGTH) {\n      const updatedPartition = [...partition];\n      updatedPartition.forEach((el) => {\n        el.push(0);\n      });\n      const pagesCalculation = Math.ceil(\n        updatedPartition[0].length / lengthOfPage\n      );\n      const pagesUpdate =\n        pages.length < pagesCalculation ? pages.concat([1]) : pages;\n      setPartition(updatedPartition);\n      setPages(pagesUpdate);\n    }\n  };\n\n  const removeOneBar = () => {\n    const updatedPartition = [...partition];\n    const last = updatedPartition[0].length - 1;\n    updatedPartition.forEach((el) => {\n      el.splice(last, 1);\n    });\n    const pagesCalc = Math.ceil(updatedPartition[0].length / lengthOfPage);\n    const pagesUpdate =\n      pages.length > pagesCalc ? pages.slice(0, pages.length - 1) : pages;\n    setPartition(updatedPartition);\n    setPages(pagesUpdate);\n    if (currentPage > pagesUpdate.length) setCurrentPage(pagesUpdate.length);\n  };\n\n  const deleteLine = (lineNumber) => {\n    const updatedPartition = [...partition];\n    const updatedInstruments = [...instruments];\n    updatedPartition.splice(lineNumber, 1);\n    updatedInstruments.splice(lineNumber, 1);\n    setPartition(updatedPartition);\n    setInstruments(updatedInstruments);\n    setIsRemoveInstrumentVisible(!setIsRemoveInstrumentVisible);\n  };\n\n  const playMusic = (instruments, partition, tempo) => {\n    if (!partition || !partition.length) return;\n    setIsPlaying(true);\n    setCurrentPage(1);\n    let counter = 0;\n\n    const playInterval = () => {\n      setHighlightedNote(counter);\n      setAnimatedNotes([counter - 1, counter, counter + 1]);\n      playBeat(instruments, partition, counter);\n      counter++;\n      if (counter >= partition[0].length) {\n        counter = 0;\n      }\n      if (counter % lengthOfPage === 1) {\n        const nextPage = Math.ceil(counter / lengthOfPage);\n        setCurrentPage(nextPage);\n      }\n    };\n\n    musicPlaying.current = setInterval(playInterval, tempo);\n  };\n\n  const onPlayBtnPress = () => {\n    playMusic(instruments, partition, timeoutTempo);\n  };\n\n  const stopPlaying = () => {\n    setIsPlaying(false);\n    clearInterval(musicPlaying.current);\n  };\n\n  const addInstrument = (instr) => {\n    const length = partition[0] ? partition[0].length : 8;\n    const newPartitionRow = [];\n    for (let i = 1; i <= length; i++) {\n      newPartitionRow.push(0);\n    }\n    const newPartition = [...partition];\n    const newInstruments = [...instruments];\n    const preparedNewInstrument = prepareOneInstrument(instr);\n    newInstruments.push(preparedNewInstrument);\n    newPartition.push(newPartitionRow);\n    setInstruments(newInstruments);\n    setPartition(newPartition);\n  };\n\n  const toggleActiveNote = (col, row, sounds) => {\n    const updatedPartition = [...partition];\n    const depth = sounds.length;\n    const newIndex = (updatedPartition[row][col] + 1) % depth;\n    updatedPartition[row][col] = newIndex;\n    if (sounds[newIndex] && isNotePlayedOnClick) {\n      sounds[newIndex].play();\n    }\n    setPartition(updatedPartition);\n  };\n\n  const saveTheSong = async (title) => {\n    const songInstruments = instruments.map((el) => {\n      return el.id;\n    });\n    const songData = {\n      title,\n      partition,\n      tempo,\n      instruments: songInstruments,\n      creator: props.user._id || \"anonymous\",\n      creatorName: props.user.username || \"anonymous\",\n      posted: true,\n    };\n    await axios.post(\"api/song/\", songData);\n    setIsSaveSongVisible(false);\n    setBottomMessage(`New song \"${title}\" successfully saved!`);\n    setTimeout(() => {\n      setBottomMessage(\"\");\n    }, 1500);\n  };\n\n  return (\n    <React.Fragment>\n      {isAddInstrumentVisible && (\n        <AddInstrument\n          addInstrument={addInstrument}\n        />\n      )}\n      {isSaveSongVisible && (\n        <SaveSong\n          saveTheSong={saveTheSong}\n          toggleIsSaveSongVisible={() =>\n            setIsSaveSongVisible(!isSaveSongVisible)\n          }\n          user={props.user}\n        />\n      )}\n      {bottomMessage && (\n        <ExpandedMenuItem>\n          <p>{bottomMessage}</p>\n        </ExpandedMenuItem>\n      )}\n      <PageSquares\n        pages={pages}\n        selectPage={setCurrentPage}\n        currentPage={currentPage}\n        createMode\n      />\n      <div\n        style={{\n          minHeight: 300,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}>\n        <MusicGrid>\n          <ToolsLine\n            notes={partition[0]}\n            lengthOfPage={lengthOfPage}\n            isLastPage={currentPage === pages.length}\n          />\n          {instruments.length ? (\n            instruments.map((line, i) => {\n              return (\n                <CreateLine\n                  key={i}\n                  linePosition={i}\n                  label={line.label}\n                  notes={partition[i]}\n                  noteColors={line.colors}\n                  toggleActiveNote={toggleActiveNote}\n                  sounds={line.sounds}\n                  highlightedNote={highlightedNote}\n                  animatedNotes={animatedNotes}\n                  deleteLine={deleteLine}\n                  currentPage={currentPage}\n                  lenghtOfPage={lengthOfPage}\n                />\n              );\n            })\n          ) : (\n            <p>\n              No partition to display yet... Click on \"Add Instruments\" to start\n              composing.\n            </p>\n          )}\n        </MusicGrid>\n      </div>\n      <PlayControls\n        onPlayBtnPress={onPlayBtnPress}\n        onStopBtnPress={stopPlaying}\n        addOneBar={addOneBar}\n        removeOneBar={removeOneBar}\n        numberOfBars={partition[0] ? partition[0].length : 0}\n      />\n      <AdvControls\n        toggleIsAddInstrumentVisible={toggleIsAddInstrumentVisible}\n        toggleIsSaveSongVisible={() => setIsSaveSongVisible(!isSaveSongVisible)}\n        user={props.user}\n      />\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { StyledNote } from \"../../ui-kit\";\n\nexport const Note = ({ status, colors, highlighted, isAnimated }) => {\n  const color = colors[status];\n\n  return (\n    <StyledNote\n      color={color}\n      highlighted={highlighted}\n      animated={isAnimated}\n    />\n  );\n};\n","import React from \"react\";\nimport { Note } from \"./Note\";\nimport { Line } from \"../../ui-kit\";\n\nexport const DisplayLine = ({\n  notes,\n  noteColors,\n  highlightedNote,\n  animatedNotes,\n  lengthOfPage,\n  currentPage,\n}) => {\n  const firstIndex = (currentPage - 1) * lengthOfPage;\n  const lastIndex = currentPage * lengthOfPage;\n\n  const displayNotes = notes.map((n, i) => {\n    if (i >= firstIndex && i < lastIndex) {\n      return (\n        <Note\n          key={i}\n          status={n}\n          colors={noteColors}\n          highlighted={highlightedNote === i}\n          isAnimated={animatedNotes.includes(i)}\n        />\n      );\n    }\n  });\n\n  return <Line>{displayNotes}</Line>;\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { DisplayLine } from \"./DisplayLine\";\nimport { PageSquares } from \"../Shared/PageSquares\";\nimport { playBeat } from \"../utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faStop } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  MusicGrid,\n  SongPost,\n  SongPostPlay,\n  SongHeader,\n  SongTitle,\n  Row,\n} from \"../../ui-kit\";\n\nconst iconsStyle = {\n  width: 40,\n  height: 40,\n  padding: \"10px 30px\",\n  border: \"solid 1px rgba(0, 0, 0, 0.6)\",\n  color: \"rgba(0, 0, 0, 0.7)\",\n  backgroundColor: \"rgba(250, 250, 250, 0.5)\",\n  borderRadius: 5,\n  zIndex: 5,\n};\n\nexport const DisplaySong = (props) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [highlightedNote, setHighlightedNote] = useState(-1);\n  const [animatedNotes, setAnimatedNotes] = useState([-1, -1, -1]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pages, setPages] = useState([1]);\n\n  const timeoutTempo = 60000 / props.tempo / 4;\n  let intervalId = useRef(null);\n\n  const lengthOfPage = window.innerWidth >= 800 ? 16 : 12;\n\n  useEffect(() => {\n    const updatedPages = [];\n    const numberOfPages = Math.ceil(props.partition[0].length / lengthOfPage);\n    for (let i = 1; i <= numberOfPages; i++) {\n      updatedPages.push(1);\n    }\n    setPages(updatedPages);\n  }, []);\n\n  useEffect(() => {\n    return () => stopPlaying();\n  }, []);\n\n  const playMusic = (musicLines, partition, tempo) => {\n    setIsPlaying(true);\n    setCurrentPage(1);\n    let counter = 0;\n    intervalId.current = setInterval(() => {\n      setHighlightedNote(counter);\n      setAnimatedNotes([counter - 1, counter, counter + 1]);\n      playBeat(musicLines, partition, counter);\n      counter++;\n      if (counter >= partition[0].length) {\n        counter = 0;\n      }\n      if (counter % lengthOfPage === 1) {\n        const nextPage = Math.ceil(counter / lengthOfPage);\n        setCurrentPage(nextPage);\n      }\n    }, tempo);\n  };\n\n  const stopPlaying = () => {\n    setIsPlaying(false);\n    clearInterval(intervalId.current);\n  };\n\n  const onSongClick = () => {\n    if (isPlaying) {\n      stopPlaying();\n    } else {\n      playMusic(props.musicLines, props.partition, timeoutTempo);\n    }\n  };\n\n  return (\n    <SongPost>\n      <SongPostPlay onClick={onSongClick}>\n        {isPlaying ? (\n          <FontAwesomeIcon icon={faStop} color=\"black\" style={iconsStyle} />\n        ) : (\n          <FontAwesomeIcon icon={faPlay} color=\"black\" style={iconsStyle} />\n        )}\n      </SongPostPlay>\n      <SongHeader>\n        <SongTitle b={true}>{props.title}</SongTitle>\n        <SongTitle>by {props.creatorName}</SongTitle>\n      </SongHeader>\n      <Row>\n        <PageSquares\n          pages={pages}\n          selectPage={props.selectPage}\n          currentPage={currentPage}\n          clickable={false}\n        />\n      </Row>\n      <MusicGrid>\n        {props.musicLines.map((line, i) => {\n          return (\n            <DisplayLine\n              key={i}\n              linePosition={i}\n              notes={props.partition[i]}\n              noteColors={line.colors}\n              sounds={line.sounds}\n              lengthOfPage={lengthOfPage}\n              currentPage={currentPage}\n              highlightedNote={highlightedNote}\n              animatedNotes={animatedNotes}\n            />\n          );\n        })}\n      </MusicGrid>\n    </SongPost>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { Row, Column, Heading2, AppIntroLayout, Button } from \"../../ui-kit\";\n\nexport const AppIntro = () => {\n  const chevronStyle = {\n    padding: 4,\n    paddingTop: 32,\n    width: 40,\n    height: 40,\n  };\n  return (\n    <AppIntroLayout>\n      <Row>\n        <Column justifyContent=\"center\" alignItems=\"center\">\n          <Heading2>Welcome to Boom-Tchak!</Heading2>\n        </Column>\n      </Row>\n      <Row>\n        <Column justifyContent=\"center\" alignItems=\"center\">\n          <p style={{ margin: 0, padding: 8 }}>\n            The app to discover and create nice music loops.\n          </p>\n          <p style={{ margin: 0, padding: 0 }}>\n            Want to start creating music? It's here >>{\" \"}\n            <Link to=\"/create\">\n              <Button>Create</Button>\n            </Link>\n          </p>\n          <p style={{ margin: 0, padding: 0 }}>\n            Need help? This way >>{\" \"}\n            <Link to=\"/help\">\n              <Button>Help</Button>\n            </Link>\n          </p>\n          <p style={{ margin: 0, padding: 8 }}>\n            To check out some nice music loops, scroll down and click on the\n            songs\n          </p>\n        </Column>\n      </Row>\n      <Row>\n        <Column flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          <FontAwesomeIcon\n            icon={faChevronDown}\n            style={chevronStyle}\n            color=\"black\"\n          />\n          <FontAwesomeIcon\n            icon={faChevronDown}\n            style={chevronStyle}\n            color=\"black\"\n          />\n          <FontAwesomeIcon\n            icon={faChevronDown}\n            style={chevronStyle}\n            color=\"black\"\n          />\n        </Column>\n      </Row>\n    </AppIntroLayout>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Bars } from \"svg-loaders-react\";\nimport axios from \"axios\";\nimport { DisplaySong } from \"./DisplaySong\";\nimport { prepareInstruments } from \"../utils/instruments\";\nimport { AppIntro } from \"../InfoPages/AppIntro\";\nimport { BlankSpace } from \"../../ui-kit\";\n\nexport const SongsList = ({ isAppIntroDisplayed = false }) => {\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [message, setMessage] = useState(\"\");\n\n  const loadSongs = async () => {\n    setLoading(true);\n    const { data: loadedSongs } = await axios.get(\n      `/api/song/posted/${currentPage}`,\n      {\n        page: 1,\n      }\n    );\n    if (!loadedSongs.length) {\n      setMessage(\"no more songs to load...\");\n      setLoading(false);\n      setTimeout(() => {\n        setMessage(\"\");\n      }, 2000);\n      return;\n    }\n    loadedSongs.forEach((song) => {\n      const preparedInstruments = prepareInstruments(song.instruments);\n      song.instruments = preparedInstruments;\n    });\n    setSongs([...songs, ...loadedSongs]);\n    setLoading(false);\n    setCurrentPage(currentPage + 1);\n  };\n\n  useEffect(() => {\n    loadSongs();\n  }, []);\n\n  const loadMore = () => {\n    loadSongs();\n  };\n\n  return (\n    <React.Fragment>\n      {isAppIntroDisplayed && <AppIntro />}\n      {songs.map((song) => {\n        return (\n          <DisplaySong\n            key={song._id}\n            title={song.title}\n            partition={song.partition}\n            musicLines={song.instruments}\n            tempo={song.tempo}\n            creatorName={song.creatorName}\n          />\n        );\n      })}\n      {loading ? (\n        <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />\n      ) : message ? (\n        <p>{message}</p>\n      ) : (\n        <p onClick={loadMore}>loadMore</p>\n      )}\n      <BlankSpace height=\"100px\" />\n    </React.Fragment>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Bars } from \"svg-loaders-react\";\nimport {\n  PageLayout,\n  SelectableText,\n  Button,\n  Heading2,\n  Column,\n} from \"../../ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport const LoadSong = (props) => {\n  const [songsList, setSongsList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  const fetchData = async () => {\n    setLoading(true);\n    const { data } = await axios.get(`/api/song/creator/${props.user._id}`);\n    if (data) {\n      setSongsList(data);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const deleteSong = async (songId) => {\n    const response = await axios.delete(`/api/song/${songId}`);\n    setMessage(response.message);\n    fetchData();\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 1500);\n  };\n\n  return (\n    <PageLayout>\n      <Heading2>Load Song</Heading2>\n      {loading && (\n        <Column alignItems=\"center\">\n          <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />\n        </Column>\n      )}\n      {songsList.map((el) => {\n        return (\n          <SelectableText\n            key={el._id}\n            selected={selectedSong === el._id}\n            onClick={() => {\n              setSelectedSong(el._id);\n            }}>\n            {el.title}\n          </SelectableText>\n        );\n      })}\n      <div>{message && <p>{message}</p>}</div>\n      {selectedSong && (\n        <div style={{ paddingTop: 20 }}>\n          <Link to={`/create/${selectedSong}`}>\n            <Button>Load</Button>\n          </Link>\n          <Button onClick={() => deleteSong(selectedSong)}>Delete</Button>\n          <Link to={\"/\"}>\n            <Button>Cancel</Button>\n          </Link>\n        </div>\n      )}\n    </PageLayout>\n  );\n};\n","import axios from \"axios\";\n\nexport const signup = (username, password) => {\n  return axios\n    .post(\"/api/auth/signup\", { username, password })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((err) => {\n      return err.response.data;\n    });\n};\n\nexport const login = (username, password) => {\n  return axios\n    .post(\"/api/auth/login\", { username, password })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((err) => {\n      return err.response.data;\n    });\n};\n\nexport const logout = () => {\n  return axios\n    .delete(\"/api/auth/logout\")\n    .then((response) => {\n      return response.data;\n    })\n    .catch((err) => {\n      return err.response.data;\n    });\n};\n","import React, { useState } from \"react\";\nimport { login } from \"./utils\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Input,\n  Button,\n  PageLayout,\n  Label,\n  Row,\n  Column,\n  Alert,\n  Heading2,\n  BlankSpace,\n} from \"../../ui-kit\";\n\nexport const Login = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const linkStyle = {\n    textDecoration: \"none\",\n    color: \"black\",\n  };\n\n  const handleLogin = async () => {\n    const data = await login(username, password);\n    if (data.message) {\n      setMessage(data.message);\n    } else {\n      props.setUser(data);\n      props.history.push(\"/\");\n    }\n  };\n\n  const handleChange = (e) => {\n    if (e.target.name === \"username\") {\n      setUsername(e.target.value);\n    }\n    if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  return (\n    <PageLayout>\n      <Row>\n        <Column />\n        <Column flex={1}>\n          <Heading2>Login</Heading2>\n          <Row>\n            <Column>\n              <Label htmlFor=\"username\">Username:</Label>\n            </Column>\n            <Column flex={2}>\n              <Input\n                type=\"text\"\n                name=\"username\"\n                width={\"100%\"}\n                id=\"username\"\n                value={username}\n                onChange={handleChange}\n              />\n            </Column>\n          </Row>\n          <Row>\n            <Column flex={1}>\n              <Label htmlFor=\"password\">Password:</Label>\n            </Column>\n            <Column flex={2}>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                width={\"100%\"}\n                id=\"password\"\n                value={password}\n                onChange={handleChange}\n              />\n            </Column>\n          </Row>\n          <BlankSpace />\n          <Row>\n            <Column alignItems={\"center\"}>\n              {message && <Alert>{message}</Alert>}\n              <Button onClick={handleLogin}>Login</Button>\n              <p>No profile yet?</p>\n              <Link to=\"/signup\" style={linkStyle}>\n                signup\n              </Link>\n            </Column>\n          </Row>\n        </Column>\n        <Column />\n      </Row>\n    </PageLayout>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  Input,\n  Button,\n  Label,\n  Row,\n  Column,\n  Alert,\n  PageLayout,\n  BlankSpace,\n  Heading2,\n} from \"../../ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport { signup } from \"./utils\";\n\nexport const Signup = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const linkStyle = {\n    textDecoration: \"none\",\n    color: \"black\",\n  };\n\n  const handleSignup = async (e) => {\n    const data = await signup(username, password);\n    if (data.message) {\n      setMessage(data.message);\n    } else {\n      props.setUser(data);\n      props.history.push(\"/\");\n    }\n  };\n\n  const handleChange = (e) => {\n    if (e.target.name === \"username\") {\n      setUsername(e.target.value);\n    }\n    if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  return (\n    <PageLayout>\n      <Row>\n        <Column />\n        <Column flex={1}>\n          <Heading2>Signup</Heading2>\n          <Row>\n            <Column>\n              <Label htmlFor=\"username\">Username:</Label>\n            </Column>\n            <Column flex={2}>\n              <Input\n                type=\"text\"\n                name=\"username\"\n                width={\"100%\"}\n                id=\"username\"\n                value={username}\n                onChange={handleChange}\n              />\n            </Column>\n          </Row>\n          <Row>\n            <Column flex={1}>\n              <Label htmlFor=\"password\">Password:</Label>\n            </Column>\n            <Column flex={2}>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                width={\"100%\"}\n                id=\"password\"\n                value={password}\n                onChange={handleChange}\n              />\n            </Column>\n          </Row>\n          <BlankSpace />\n          <Row>\n            <Column alignItems={\"center\"}>\n              {message && <Alert>{message}</Alert>}\n              <Button onClick={handleSignup}>Submit</Button>\n              <p>Already have a profile?</p>\n              <Link to=\"/login\" style={linkStyle}>\n                login\n              </Link>\n            </Column>\n          </Row>\n        </Column>\n        <Column />\n      </Row>\n    </PageLayout>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"./utils\";\nimport {\n  Row,\n  Column,\n  Button,\n  PageLayout,\n  ProfilePic,\n  Heading2,\n} from \"../../ui-kit\";\n\nexport const Profile = (props) => {\n  const [message, setMessage] = useState(\"\");\n\n  const onLogoutBtnClick = async () => {\n    await logout();\n    props.setUser(null);\n    props.history.push(\"/\");\n  };\n\n  const onCreateInstrumentBtnClick = () => {\n    const isUserAdmin = props.user && props.user.admin === true;\n    if (isUserAdmin) {\n      props.history.push(\"/create-instrument\");\n    } else {\n      setMessage(\"Coming soon, stay tuned...\");\n      setInterval(() => {\n        setMessage(\"\");\n      }, 2000);\n    }\n  };\n\n  if (!props.user) {\n    return (\n      <PageLayout>\n        <Heading2>No Profile...</Heading2>\n        <Row>\n          <Column>Please login or signup to access the profile page</Column>\n        </Row>\n      </PageLayout>\n    );\n  }\n\n  return (\n    <PageLayout>\n      <Row>\n        <Column>\n          <Heading2>Profile</Heading2>\n        </Column>\n      </Row>\n      <Row>\n        <Column flex={2}>\n          <ProfilePic\n            src={\n              \"https://images.unsplash.com/photo-1502377429547-835a416e4a90?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=667&q=80\"\n            }\n          />\n        </Column>\n        <Column justifyContent=\"flex-start\" flex={3}>\n          <h3>Hello, {props.user.username}</h3>\n          <p>Are you ready to create some funky beats today?</p>\n          <Row>\n            <Link to=\"/load-song\">\n              <Button>Load Song</Button>\n            </Link>\n            <Button onClick={onCreateInstrumentBtnClick}>\n              Create Instrument\n            </Button>\n            <Button onClick={onLogoutBtnClick}>Logout</Button>\n          </Row>\n          <Row>\n            <Column>{message && <p>{message}</p>}</Column>\n          </Row>\n        </Column>\n      </Row>\n    </PageLayout>\n  );\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const ProtectedRoute = ({ component: Component, user, ...rest }) => {\n  return (\n    <Route\n      user={user}\n      {...rest}\n      render={(props) => {\n        if (user) {\n          return <Component user={user} {...rest} {...props} />;\n        } else {\n          return <Redirect to=\"/\" />;\n        }\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport { getCategories, getSubCategories } from \"../utils\";\nimport { Row, Column, Input, Select, Option } from \"../../ui-kit\";\n\nexport const Characteristics = ({\n  name,\n  setName,\n  category,\n  setCategory,\n  subCategory,\n  setSubCategory,\n}) => {\n  const instrumentCategories = getCategories();\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Column flex={1}>Name:</Column>\n        <Column justifyContent=\"flex-start\" flex={2}>\n          <Input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Column>\n      </Row>\n      <Row>\n        <Column flex={1}>Category:</Column>\n        <Column justifyContent=\"flex-start\" flex={2}>\n          <Select\n            name=\"category\"\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}>\n            {instrumentCategories.map((cat, i) => {\n              return (\n                <Option key={i} value={cat}>\n                  {cat !== \"default\" && cat}\n                </Option>\n              );\n            })}\n          </Select>\n        </Column>\n      </Row>\n      <Row>\n        <Column flex={1}>Sub-category:</Column>\n        <Column justifyContent=\"flex-start\" flex={2}>\n          <Select\n            name=\"sub-category\"\n            value={subCategory}\n            onChange={(e) => setSubCategory(e.target.value)}>\n            {getSubCategories(category).map((subCat, i) => {\n              return (\n                <Option key={i} value={subCat}>\n                  {subCat}\n                </Option>\n              );\n            })}\n          </Select>\n        </Column>\n      </Row>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { Row, Column, ColorSquare, Button } from \"../../ui-kit\";\n\nexport const InstrumentSoundsList = ({ sounds, addSound }) => {\n  const playSound = (url) => {\n    new Audio(url).play();\n  };\n\n  return (\n    <React.Fragment>\n      {sounds &&\n        sounds.map((el, i) => {\n          return (\n            <Row key={i}>\n              <Column>\n                <p style={{ margin: 0, padding: \"5px 0\" }}>\n                  {i === 0 ? \"Default\" : `${i}`}\n                </p>\n              </Column>\n              <Column>\n                <ColorSquare backgroundColor={el.color} />\n              </Column>\n              <Column flex={5}>\n                {el.url ? (\n                  <Button onClick={() => playSound(el.url)}>{el.name}</Button>\n                ) : (\n                  <p style={{ margin: 0, padding: \"5px 18px\" }}>No sound</p>\n                )}\n              </Column>\n            </Row>\n          );\n        })}\n      <Row>\n        <Column flex={2}></Column>\n        <Column justifyContent=\"flex-start\" flex={5}>\n          <Button backgroundColor=\"#0f0\" onClick={addSound}>\n            Add Sound\n          </Button>\n        </Column>\n      </Row>\n    </React.Fragment>\n  );\n};\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { Bars } from \"svg-loaders-react\";\nimport { getCategories, getSubCategories } from \"../utils\";\nimport {\n  Row,\n  Column,\n  SelectableText,\n  Heading3,\n  Select,\n  Option,\n  Input,\n} from \"../../ui-kit\";\n\nexport const AvailableSoundsList = ({\n  loading,\n  availableSounds,\n  selectedSound,\n  selectSound,\n}) => {\n  const [filterName, setFilterName] = useState(\"\");\n  const [filterCategory, setFilterCategory] = useState(\"default\");\n  const [filterSubCategory, setFilterSubCategory] = useState(\"\");\n\n  const filteredSounds = availableSounds.filter((sound) => {\n    return (\n      (!filterName ||\n        sound.name\n          .toLocaleLowerCase()\n          .includes(filterName.toLocaleLowerCase())) &&\n      (filterCategory === \"default\" || filterCategory === sound.category) &&\n      (!filterSubCategory || filterSubCategory === sound.subCategory)\n    );\n  });\n\n  const volumeBtnStyle = {\n    margin: 2,\n    color: \"black\",\n    backgroundColor: \"white\",\n    padding: 6,\n    borderColor: \"black\",\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n  };\n\n  const soundCategories = getCategories();\n\n  if (loading) {\n    return (\n      <Column alignItems=\"center\">\n        <Bars width={100} height={50} fill=\"#000\" stroke=\"#000\" />\n      </Column>\n    );\n  }\n  return (\n    <React.Fragment>\n      <Row>\n        <Column></Column>\n        <Column flex={3}>\n          <Heading3>Name</Heading3>\n        </Column>\n        <Column flex={2}>\n          <Heading3>Category</Heading3>\n        </Column>\n        <Column flex={2}>\n          <Heading3>Sub-cat.</Heading3>\n        </Column>\n      </Row>\n      <Row>\n        <Column></Column>\n        <Column flex={3}>\n          <Input\n            type=\"text\"\n            value={filterName}\n            placeholder=\"Search...\"\n            onChange={(e) => setFilterName(e.target.value)}\n          />\n        </Column>\n        <Column flex={2}>\n          <Select\n            name=\"category\"\n            value={filterCategory}\n            onChange={(e) => setFilterCategory(e.target.value)}>\n            {soundCategories.map((cat, i) => {\n              return (\n                <Option key={i} value={cat}>\n                  {cat === \"default\" ? \"all\" : cat}\n                </Option>\n              );\n            })}\n          </Select>\n        </Column>\n        <Column flex={2}>\n          <Select\n            name=\"sub-category\"\n            value={filterSubCategory}\n            onChange={(e) => setFilterSubCategory(e.target.value)}>\n            {getSubCategories(filterCategory).map((subCat, i) => {\n              return (\n                <Option key={i} value={subCat}>\n                  {subCat || \"all\"}\n                </Option>\n              );\n            })}\n          </Select>\n        </Column>\n      </Row>\n      {filteredSounds.map((el) => {\n        const playSound = () => {\n          return new Audio(el.url).play();\n        };\n        return (\n          <Row key={el._id}>\n            <Column>\n              <FontAwesomeIcon\n                icon={faVolumeUp}\n                style={volumeBtnStyle}\n                onClick={playSound}\n              />\n            </Column>\n            <Column flex={3}>\n              <SelectableText\n                selected={selectedSound && selectedSound.url === el.url}\n                onClick={() => selectSound(el)}>\n                {el.name}\n              </SelectableText>\n            </Column>\n            <Column flex={2}>\n              <SelectableText\n                selected={selectedSound && selectedSound.url === el.url}\n                onClick={() => selectSound(el)}>\n                {el.category}\n              </SelectableText>\n            </Column>\n            <Column flex={2}>\n              <SelectableText\n                selected={selectedSound && selectedSound.url === el.url}\n                onClick={() => selectSound(el)}>\n                {el.subCategory}\n              </SelectableText>\n            </Column>\n          </Row>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { getCategories, getSubCategories } from \"../utils\";\nimport { Row, Column, Input, Button, Select, Option } from \"../../ui-kit\";\n\nexport const CreateSound = ({ setView, fetchData }) => {\n  const [soundName, setSoundName] = useState(\"\");\n  const [soundCategory, setSoundCategory] = useState(\"\");\n  const [soundSubCategory, setSoundSubCategory] = useState(\"\");\n  const [soundPitch, setSoundPitch] = useState(\"\");\n  const [soundFile, setSoundFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  const fileSelectorHandler = (event) => {\n    const selectedFile = event.target.files[0];\n    setSoundFile(selectedFile);\n  };\n\n  const uploadSound = async () => {\n    if (!soundName || !soundCategory || !soundSubCategory) {\n      displayMessage(\"Please chose a name and select categories\");\n      return;\n    } else if (soundName.length < 5) {\n      displayMessage(\"The sound name must be at least 5 char.\");\n    } else if (!soundFile) {\n      displayMessage(\"please select a file to upload\");\n      return;\n    }\n    const uploadData = new FormData();\n    uploadData.append(\"sounds\", soundFile);\n    const uploadedSound = await axios.post(\"/api/sound/upload\", uploadData);\n    const createdSound = await axios.post(\"/api/sound\", {\n      name: soundName,\n      category: soundCategory,\n      subCategory: soundSubCategory,\n      pitch: soundPitch,\n      url: uploadedSound.data.secure_url,\n    });\n    if (createdSound.message) {\n      displayMessage(createdSound.message);\n      return;\n    }\n    setView(\"ADD\");\n    fetchData();\n  };\n\n  const soundCategories = getCategories();\n\n  const displayMessage = (mes) => {\n    setMessage(mes);\n    setInterval(() => {\n      setMessage(\"\");\n    }, 3000);\n  };\n  return (\n    <React.Fragment>\n      <Row>\n        <Column>Select file:</Column>\n        <Column flex={2}>\n          <Input\n            id=\"file\"\n            name=\"file\"\n            type=\"file\"\n            multiple=\"false\"\n            onChange={fileSelectorHandler}\n          />\n        </Column>\n      </Row>\n      <Row>\n        <Column>Name:</Column>\n        <Column flex={2}>\n          <Input\n            type=\"text\"\n            value={soundName}\n            onChange={(e) => setSoundName(e.target.value)}\n          />\n        </Column>\n      </Row>\n      <Row>\n        <Column>Category:</Column>\n        <Column flex={2}>\n          <Select\n            name=\"category\"\n            onChange={(e) => setSoundCategory(e.target.value)}>\n            {soundCategories.map((cat, i) => {\n              return (\n                <Option key={i} value={cat}>\n                  {cat !== \"default\" && cat}\n                </Option>\n              );\n            })}\n          </Select>\n        </Column>\n      </Row>\n      <Row>\n        <Column>Sub-Category:</Column>\n        <Column flex={2}>\n          <Select\n            name=\"sub-category\"\n            onChange={(e) => setSoundSubCategory(e.target.value)}>\n            {getSubCategories(soundCategory).map((subCat, i) => {\n              return (\n                <Option key={i} value={subCat}>\n                  {subCat}\n                </Option>\n              );\n            })}\n          </Select>\n        </Column>\n      </Row>\n      <Row>\n        <Column>Pitch (optional):</Column>\n        <Column flex={2}>\n          <Input\n            type=\"text\"\n            value={soundPitch}\n            onChange={(e) => setSoundPitch(e.target.value)}\n          />\n        </Column>\n      </Row>\n      <Row>\n        <Column></Column>\n        <Column flex={2}>{soundFile && soundFile.name}</Column>\n      </Row>\n      <Row>\n        <Column>{message && message}</Column>\n      </Row>\n      <Row>\n        <Column flex={1}>\n          <Button onClick={uploadSound}>Create Sound</Button>\n        </Column>\n      </Row>\n    </React.Fragment>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { AvailableSoundsList } from \"./AvailableSoundsList\";\nimport { SketchPicker } from \"react-color\";\nimport { CreateSound } from \"./CreateSound\";\nimport { Row, Button, Column, ColorSquare, Heading2 } from \"../../ui-kit\";\n\nconst views = {\n  ADD: \"ADD\",\n  UPLOAD: \"UPLOAD\",\n};\n\nexport const AddSound = ({\n  switchToOverview,\n  availableSounds,\n  selectedSound,\n  selectSound,\n  addSound,\n  loading,\n  fetchData,\n  displayMessage,\n}) => {\n  const [soundColor, setSoundColor] = useState(\"#aaa\");\n  const [view, setView] = useState(views.ADD);\n  const handleColorChange = (color) => {\n    setSoundColor(color.hex);\n  };\n\n  useEffect(() => {\n    selectSound(null);\n  }, []);\n\n  const handleAddSoundClick = () => {\n    if (!selectedSound || !selectedSound.name || !selectedSound.url) {\n      displayMessage(\"Please select a sound first\");\n      return;\n    }\n    addSound({\n      name: selectedSound.name,\n      color: soundColor,\n      url: selectedSound.url,\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Column>\n          <Heading2>Add Sound:</Heading2>\n        </Column>\n        <Column flexDirection=\"row\" justifyContent=\"flex-end\">\n          {view === views.ADD && (\n            <Button\n              onClick={() => {\n                setView(views.UPLOAD);\n              }}>\n              Upload own sound\n            </Button>\n          )}\n          {view === views.UPLOAD && (\n            <Button\n              onClick={() => {\n                setView(views.ADD);\n              }}>\n              Search sound\n            </Button>\n          )}\n\n          <Button backgroundColor=\"#0f0\" onClick={handleAddSoundClick}>\n            Add\n          </Button>\n          <Button backgroundColor=\"#f00\" onClick={switchToOverview}>\n            Cancel\n          </Button>\n        </Column>\n      </Row>\n      <Row>\n        <Column flex={2} justifyContent=\"flex-start\">\n          {view === views.ADD && (\n            <React.Fragment>\n              <Row>\n                <Column\n                  flexDirection=\"row\"\n                  alignItems=\"center\"\n                  justifyContent=\"flex-start\">\n                  <p>Color:</p>\n                  <ColorSquare backgroundColor={soundColor} />\n                </Column>\n              </Row>\n              <SketchPicker\n                color={soundColor}\n                onChangeComplete={handleColorChange}\n              />\n            </React.Fragment>\n          )}\n        </Column>\n        <Column flex={3}>\n          {view === views.UPLOAD && (\n            <CreateSound setView={setView} fetchData={fetchData} />\n          )}\n          {view === views.ADD && (\n            <AvailableSoundsList\n              loading={loading}\n              availableSounds={availableSounds}\n              selectedSound={selectedSound}\n              selectSound={selectSound}\n            />\n          )}\n        </Column>\n      </Row>\n    </React.Fragment>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Characteristics } from \"./Characteristics\";\nimport { InstrumentSoundsList } from \"./InstrumentSoundsList\";\nimport { AddSound } from \"./AddSound\";\nimport axios from \"axios\";\nimport { Row, Column, Button, PageLayout, Heading2, Alert } from \"../../ui-kit\";\n\nconst views = {\n  OVERVIEW: \"OVERVIEW\",\n  ADD_SOUND: \"ADD_SOUND\",\n};\n\nexport const CreateInstrument = (props) => {\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [sounds, setSounds] = useState([\n    { name: \"default\", color: \"#ddd\", url: \"\" },\n  ]);\n  const [view, setView] = useState(views.OVERVIEW);\n  const [loading, setLoading] = useState(false);\n  const [availableSounds, setAvailableSounds] = useState([]);\n  const [selectedSound, setSelectedSound] = useState(null);\n\n  const openAddSoundSection = async () => {\n    setView(views.ADD_SOUND);\n    await fetchData();\n  };\n\n  const fetchData = async () => {\n    setLoading(true);\n    const { data } = await axios.get(\"/api/sound\");\n    if (data) {\n      setAvailableSounds(data);\n      setLoading(false);\n    }\n  };\n\n  const displayMessage = (mes) => {\n    setMessage(mes);\n    setInterval(() => {\n      setMessage(\"\");\n    }, 2000);\n  };\n\n  const addSound = (sound) => {\n    if ((!sound.url, !sound.color)) {\n      displayMessage(\"Please select or upload a sound and pick a color\");\n      return;\n    }\n    const newSound = {\n      name: sound.name,\n      color: sound.color,\n      url: sound.url,\n    };\n    const updatedSounds = [...sounds, newSound];\n    setSounds(updatedSounds);\n    setView(views.OVERVIEW);\n  };\n\n  const switchToOverview = () => {\n    setView(views.OVERVIEW);\n  };\n\n  const selectSound = (sound) => {\n    setSelectedSound(sound);\n  };\n\n  const resetInstrument = () => {\n    setName(\"\");\n    setCategory(\"\");\n    setSubCategory(\"\");\n    setSounds([{ name: \"default\", color: \"#ddd\", url: \"\" }]);\n  };\n\n  const saveInstrument = async () => {\n    if (!name || !category || !subCategory) {\n      displayMessage(\"All fields must be filled\");\n      return;\n    }\n    if (sounds.length < 2) {\n      displayMessage(\"You must select at least 1 sound\");\n      return;\n    }\n    const createdInstrument = await axios.post(\"/api/instrument\", {\n      name,\n      category,\n      subCategory,\n      sounds,\n      creator: props.user._id,\n      private: false,\n    });\n    if (createdInstrument.message) {\n      displayMessage(createdInstrument.message);\n    } else if (createdInstrument.status === 200) {\n      displayMessage(`Success! You just created a new instrument!`);\n      resetInstrument();\n    }\n  };\n\n  const toggleHelp = () => {};\n\n  return (\n    <PageLayout>\n      <Row>{message && <Alert>{message}</Alert>}</Row>\n      {view === views.ADD_SOUND && (\n        <AddSound\n          switchToOverview={switchToOverview}\n          availableSounds={availableSounds}\n          selectedSound={selectedSound}\n          selectSound={selectSound}\n          loading={loading}\n          addSound={addSound}\n          fetchData={fetchData}\n          displayMessage={displayMessage}\n        />\n      )}\n      {view === views.OVERVIEW && (\n        <React.Fragment>\n          <Row>\n            <Column flex={1}>\n              <Heading2>Create Instrument</Heading2>\n            </Column>\n            <Column\n              flex={2}\n              flexDirection=\"row\"\n              alignItems=\"flex-end\"\n              justifyContent=\"flex-end\">\n              <Button onClick={saveInstrument}>Save Instrument</Button>\n              <Button onClick={resetInstrument}>Reset</Button>\n              <Button onClick={toggleHelp}>Help</Button>\n            </Column>\n          </Row>\n          <Row>\n            <Column flex={2}>\n              <Characteristics\n                name={name}\n                setName={setName}\n                category={category}\n                setCategory={setCategory}\n                subCategory={subCategory}\n                setSubCategory={setSubCategory}\n              />\n            </Column>\n            <Column flex={1}></Column>\n          </Row>\n          <Row>\n            <Column>\n              <h3>Sounds:</h3>\n            </Column>\n          </Row>\n          <Row>\n            <Column>\n              <InstrumentSoundsList\n                sounds={sounds}\n                addSound={openAddSoundSection}\n              />\n            </Column>\n          </Row>\n        </React.Fragment>\n      )}\n    </PageLayout>\n  );\n};\n","import React from \"react\";\nimport { Row, Column, PageLayout, Heading2, Heading3 } from \"../../ui-kit\";\n\nexport const Help = () => {\n  return (\n    <PageLayout>\n      <Row>\n        <Column>\n          <Heading2>Help</Heading2>\n        </Column>\n      </Row>\n      <Row>\n        <Column>\n          <p>\n            The 2 main sections of the app are \"Listen\", where you can browse,\n            check and play the music loops that are created, and \"Create\" where\n            you can create your own loops.\n          </p>\n        </Column>\n      </Row>\n      <Row>\n        <Column>\n          <Heading3>Create song</Heading3>\n          <p>\n            In the song creation space you see the music grid which is composed\n            of notes represented by gray squares, and a control panel at the\n            bottom:\n          </p>\n          <Row alignItems=\"center\" justifyContent=\"center\">\n            <Column alignItems=\"center\" justifyContent=\"center\">\n              <img src=\"images/music-grid-1.png\" alt=\"Music grid example\" />\n            </Column>\n          </Row>\n          <p>\n            On the music grid, the horizontal axis is the time, the vertical is\n            the array of instruments that are available to you. Let's first try\n            the default instruments.\n          </p>\n          <p>\n            By clicking on a square, it changes color as you activate a sound to\n            be played at a certain time in the loop. For example if you click on\n            the first square of the kick, a kick will be played at the\n            beginning.\n          </p>\n          <Row alignItems=\"center\" justifyContent=\"center\">\n            <Column alignItems=\"center\" justifyContent=\"center\">\n              <img src=\"images/music-grid-2.png\" alt=\"Music grid example\" />\n            </Column>\n          </Row>\n          <p>\n            Some instruments have only one sound, some have several, clicking\n            several times on the same square switches between different sounds.\n            Let's create a basic loop by switching on the notes (1 click) to\n            form the following pattern:\n          </p>\n          <Row alignItems=\"center\" justifyContent=\"center\">\n            <Column alignItems=\"center\" justifyContent=\"center\">\n              <img src=\"images/music-grid-3.png\" alt=\"Music grid example\" />\n            </Column>\n          </Row>\n          <p>\n            Press play and the magic happens! The notes are read as a sequence,\n            at a 120 tempo, 8 squares represent a second, so our loop is 1\n            second long.\n          </p>\n          <p>\n            To make the loop longer, press the \"+\" button next to \"bars\" and the\n            grid extends. When the grid is longer than 16 notes, it gets spread\n            on several pages that you can check and select using the page\n            selector:\n          </p>\n          <Row alignItems=\"center\" justifyContent=\"center\">\n            <Column alignItems=\"center\" justifyContent=\"center\">\n              <img\n                src=\"images/music-pages-selectors.png\"\n                alt=\"Page selectors example\"\n              />\n            </Column>\n          </Row>\n          <p>\n            You can add and remove instruments (grid lines) using the menu. Once\n            you are happy with your creation, click on \"save\" to keep it and\n            share it. To save, you will need to create a profile, but this takes\n            a couple of seconds. That's about it!\n          </p>\n        </Column>\n      </Row>\n      <Row>\n        <Column>\n          <Heading3>Have fun!</Heading3>\n        </Column>\n      </Row>\n    </PageLayout>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { HeaderLayout, HeaderTitle, MenuButton, Wrapper } from \"../../ui-kit\";\n\nconst linkStyle = {\n  textDecoration: \"none\",\n  color: \"black\",\n};\n\nconst textLinkStyle = {\n  textDecoration: \"none\",\n  color: \"black\",\n  padding: \"0 8px\",\n};\n\nexport const Header = (props) => {\n  return (\n    <HeaderLayout>\n      <Wrapper flexDirection=\"row\" justifyContent=\"space-between\">\n        <Link style={linkStyle} to=\"/\">\n          <HeaderTitle>Boum-Tchak!</HeaderTitle>\n        </Link>\n        <div\n          style={{ display: \"flex\", paddingRight: 20, alignItems: \"center\" }}>\n          <Link style={linkStyle} to=\"/listen\">\n            <MenuButton>Listen</MenuButton>\n          </Link>\n          <Link style={linkStyle} to=\"/create\">\n            <MenuButton>Create</MenuButton>\n          </Link>\n          {props.user ? (\n            <Link style={linkStyle} to=\"/profile\">\n              <MenuButton>Profile</MenuButton>\n            </Link>\n          ) : (\n            <React.Fragment>\n              <Link style={linkStyle} to=\"/signup\">\n                <MenuButton>Signup</MenuButton>\n              </Link>\n              <Link style={textLinkStyle} to=\"/login\">\n                Login\n              </Link>\n            </React.Fragment>\n          )}\n          <Link style={textLinkStyle} to=\"/help\">\n            Help\n          </Link>\n        </div>\n      </Wrapper>\n    </HeaderLayout>\n  );\n};\n","import React from \"react\";\nimport { CreateSong } from \"./components/CreateSong/CreateSong\";\nimport { SongsList } from \"./components/DisplaySong/SongsList\";\nimport { LoadSong } from \"./components/LoadSong/LoadSong\";\nimport { Login } from \"./components/Auth/Login\";\nimport { Signup } from \"./components/Auth/Signup\";\nimport { Profile } from \"./components/Auth/Profile\";\nimport { ProtectedRoute } from \"./components/Auth/ProtectedRoute\";\nimport { CreateInstrument } from \"./components/CreateInstrument/CreateInstrument\";\nimport { Help } from \"./components/InfoPages/Help\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { MainScreen, Wrapper, BackHeader } from \"./ui-kit\";\nimport { Header } from \"./components/Header/Header\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user,\n  };\n\n  setUser = (user) => {\n    this.setState({\n      user: user,\n    });\n  };\n\n  render() {\n    return (\n      <MainScreen>\n        <Header user={this.state.user} />\n        <Wrapper>\n          <BackHeader />\n          <Switch>\n            <Route\n              exact\n              path=\"/create\"\n              render={(props) => (\n                <CreateSong user={this.state.user} {...props} />\n              )}\n            />\n            <Route exact path=\"/help\" render={(props) => <Help {...props} />} />\n            <Route\n              exact\n              path=\"/create/:id\"\n              render={(props) => (\n                <CreateSong user={this.state.user} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) => {\n                if (!this.state.user) {\n                  return <Login setUser={this.setUser} {...props} />;\n                } else {\n                  return <Redirect to=\"/\" />;\n                }\n              }}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={(props) => {\n                if (!this.state.user) {\n                  return <Signup setUser={this.setUser} {...props} />;\n                } else {\n                  return <Redirect to=\"/\" />;\n                }\n              }}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/profile\"\n              user={this.state.user}\n              setUser={this.setUser}\n              component={Profile}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/create-instrument\"\n              user={this.state.user}\n              setUser={this.setUser}\n              component={CreateInstrument}\n            />\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => (\n                <SongsList isAppIntroDisplayed={true} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/listen\"\n              render={(props) => (\n                <SongsList isAppIntroDisplayed={false} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/load-song\"\n              render={(props) => {\n                if (this.state.user) {\n                  return <LoadSong user={this.state.user} {...props} />;\n                } else {\n                  return <Redirect to=\"/\" />;\n                }\n              }}\n            />\n          </Switch>\n        </Wrapper>\n      </MainScreen>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  SET_TEMPO,\n  SET_TIMEOUT_TEMPO,\n  SET_IS_ADD_INSTRUMENT_VISIBLE,\n  SET_IS_NOTE_PLAYED_ON_CLICK,\n  SET_IS_SAVE_SONG_VISIBLE,\n  SET_IS_PLAYING,\n  SET_INSTRUMENTS,\n  SET_PARTITION,\n  SET_IS_REMOVE_INSTRUMENT_VISIBLE,\n} from \"./types\";\n\nexport default (state, action) => {\n  const { payload, type } = action;\n\n  switch (type) {\n    case SET_TEMPO:\n      return {\n        ...state,\n        tempo: payload,\n      };\n    case SET_TIMEOUT_TEMPO:\n      return {\n        ...state,\n        timeoutTempo: payload,\n      };\n    case SET_IS_ADD_INSTRUMENT_VISIBLE:\n      return {\n        ...state,\n        isAddInstrumentVisible: payload,\n      };\n    case SET_IS_REMOVE_INSTRUMENT_VISIBLE:\n      return {\n        ...state,\n        isRemoveInstrumentVisible: payload,\n      };\n    case SET_IS_NOTE_PLAYED_ON_CLICK:\n      return {\n        ...state,\n        isNotePlayedOnClick: payload,\n      };\n    case SET_IS_SAVE_SONG_VISIBLE:\n      return {\n        ...state,\n        isSaveSongVisible: payload,\n      };\n    case SET_IS_PLAYING:\n      return {\n        ...state,\n        isPlaying: payload,\n      };\n    case SET_INSTRUMENTS:\n      return {\n        ...state,\n        instruments: payload,\n      };\n    case SET_PARTITION:\n      return {\n        ...state,\n        partition: payload,\n      };\n    default:\n      return state;\n  }\n};\n","export const TYPE_1 = \"TYPE_1\";\nexport const SET_TEMPO = \"SET_TEMPO\";\nexport const SET_TIMEOUT_TEMPO = \"SET_TIMEOUT_TEMPO\";\nexport const SET_IS_NOTE_PLAYED_ON_CLICK = \"SET_IS_NOTE_PLAYED_ON_CLICK\";\nexport const SET_IS_ADD_INSTRUMENT_VISIBLE = \"SET_IS_ADD_INSTRUMENT_VISIBLE\";\nexport const SET_IS_SAVE_SONG_VISIBLE = \"SET_IS_SAVE_SONG_VISIBLE\";\nexport const SET_IS_PLAYING = \"SET_IS_PLAYING\";\nexport const SET_PARTITION = \"SET_PARTITION\";\nexport const SET_INSTRUMENTS = \"SET_INSTRUMENTS\";\nexport const SET_IS_REMOVE_INSTRUMENT_VISIBLE = \"SET_IS_REMOVE_INSTRUMENT_VISIBLE\"","import React, { useReducer } from \"react\";\nimport { config } from \"../config/config\";\n\nimport GlobalContext from \"./GlobalContext\";\nimport GlobalReducer from \"./GlobalReducer\";\nimport {\n  SET_TEMPO,\n  SET_TIMEOUT_TEMPO,\n  SET_IS_SAVE_SONG_VISIBLE,\n  SET_IS_NOTE_PLAYED_ON_CLICK,\n  SET_IS_ADD_INSTRUMENT_VISIBLE,\n  SET_IS_PLAYING,\n  SET_INSTRUMENTS,\n  SET_PARTITION,\n  SET_IS_REMOVE_INSTRUMENT_VISIBLE,\n} from \"./types\";\n\nexport const GlobalState = (props) => {\n  let initialState = {\n    isPLaying: false,\n    instruments: [],\n    partition: [],\n    isRemoveInstrumentVisible: false,\n    partitionLength: config.START_PARTITION_LENGTH,\n    maxPartitionLength: config.MAX_PARTITION_LENGTH,\n    tempo: config.DEFAULT_TEMPO,\n    timeoutTempo: config.DEFAULT_TIMEOUT,\n    isNotePlayedOnClick: true,\n    isAddInstrumentVisible: false,\n    isSaveSongVisible: false,\n  };\n\n  const [state, dispatch] = useReducer(GlobalReducer, initialState);\n\n  const setTempo = (value) => {\n    dispatch({ type: SET_TEMPO, payload: value });\n  };\n\n  const setTimeoutTempo = (value) => {\n    dispatch({ type: SET_TIMEOUT_TEMPO, payload: value });\n  };\n\n  const setIsNotePlayedOnClick = (value) => {\n    dispatch({ type: SET_IS_NOTE_PLAYED_ON_CLICK, payload: value });\n  };\n  const toggleIsAddInstrumentVisible = () => {\n    const newValue = !state.isAddInstrumentVisible;\n    dispatch({ type: SET_IS_ADD_INSTRUMENT_VISIBLE, payload: newValue });\n  };\n  const setIsSaveSongVisible = (value) => {\n    dispatch({ type: SET_IS_SAVE_SONG_VISIBLE, payload: value });\n  };\n\n  const setIsRemoveInstrumentVisible = (value) => {\n    dispatch({ type: SET_IS_REMOVE_INSTRUMENT_VISIBLE, payload: value });\n  };\n\n  const toggleIsRemoveInstrumentVisible = () => {\n    console.log(\"!!!!!!!!!!%%%%%%%%%\", state.isRemoveInstrumentVisible);\n    const newValue = !state.isRemoveInstrumentVisible;\n    dispatch({ type: SET_IS_REMOVE_INSTRUMENT_VISIBLE, payload: newValue });\n  };\n\n  const setIsPlaying = (value) => {\n    dispatch({ type: SET_IS_PLAYING, payload: value });\n  };\n\n  const setInstruments = (value) => {\n    dispatch({ type: SET_INSTRUMENTS, payload: value });\n  };\n\n  const setPartition = (value) => {\n    dispatch({ type: SET_PARTITION, payload: value });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        tempo: state.tempo,\n        isPlaying: state.isPlaying,\n        instruments: state.instruments,\n        partition: state.partition,\n        timeoutTempo: state.timeoutTempo,\n        isNotePlayedOnClick: state.isNotePlayedOnClick,\n        isAddInstrumentVisible: state.isAddInstrumentVisible,\n        isSaveSongVisible: state.isSaveSongVisible,\n        isRemoveInstrumentVisible: state.isRemoveInstrumentVisible,\n        setTempo,\n        setIsPlaying,\n        setInstruments,\n        setPartition,\n        setIsRemoveInstrumentVisible,\n        toggleIsRemoveInstrumentVisible,\n        setTimeoutTempo,\n        setIsNotePlayedOnClick,\n        toggleIsAddInstrumentVisible,\n        setIsSaveSongVisible,\n      }}>\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { GlobalState } from \"./context/GlobalState\";\nimport axios from \"axios\";\n\nconst renderApp = async () => {\n  const authResponse = await axios.get(\"/api/auth/loggedin\");\n  const user = authResponse.data;\n  ReactDOM.render(\n    <BrowserRouter>\n      <GlobalState>\n        <App user={user} />\n      </GlobalState>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n};\nrenderApp();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}